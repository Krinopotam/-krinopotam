{"version":3,"file":"quillEditorComponent.stories-94101493.js","sources":["../../src/dForm/fields/quillEditor/quillEditorField.tsx","../../stories/dForm/fields/quillEditor/quillEditorComponent.tsx"],"sourcesContent":["import {BaseField, IBaseFieldProps} from '@src/dForm/fields/base/baseField';\r\nimport React from 'react';\r\nimport {QuillEditorFieldRender} from '@src/dForm/fields/quillEditor/quillEditorFieldRender';\r\nimport {IQuillEditorProps} from '@src/quillEditor';\r\nimport {IDeltaStatic} from '@src/quillEditor/quillEditor';\r\nimport {Sources} from 'quill';\r\nimport {Range, UnprivilegedEditor} from 'react-quill';\r\n\r\nexport interface IQuillEditorFieldProps extends IBaseFieldProps<QuillEditorField> {\r\n    bounds?: IQuillEditorProps['bounds'];\r\n\r\n    /** Default value */\r\n    value?: string;\r\n\r\n    className?: IQuillEditorProps['className'];\r\n\r\n    /** Allowed formats. This is separate from adding a control in the Toolbar. For example, you can configure Quill to allow bolded content to be pasted into an editor that has no bold button in the toolbar */\r\n    formats?: IQuillEditorProps['formats'];\r\n\r\n    /** Toolbars buttons config */\r\n    toolbar?: IQuillEditorProps['toolbar'];\r\n\r\n    preserveWhitespace?: IQuillEditorProps['preserveWhitespace'];\r\n\r\n    scrollingContainer?: IQuillEditorProps['scrollingContainer'];\r\n\r\n    tabIndex?: IQuillEditorProps['tabIndex'];\r\n\r\n    /** Name of theme to use. The builtin options are “bubble” or “snow”. Default: snow */\r\n    theme?: IQuillEditorProps['theme'];\r\n\r\n    /** ------ Callbacks --------*/\r\n    onChange?: (value: string, delta: IDeltaStatic, source: Sources, editor: UnprivilegedEditor, field: QuillEditorField) => void;\r\n    onBlur?: (previousSelection: Range, source: Sources, editor: UnprivilegedEditor, field: QuillEditorField) => void;\r\n    onChangeSelection?: (selection: Range, source: Sources, editor: UnprivilegedEditor, field: QuillEditorField) => void;\r\n    onFocus?: (selection: Range, source: Sources, editor: UnprivilegedEditor, field: QuillEditorField) => void;\r\n    onKeyDown?: (e: React.KeyboardEvent<HTMLElement>, field: QuillEditorField) => void;\r\n    onKeyPress?: (e: React.KeyboardEvent<HTMLElement>, field: QuillEditorField) => void;\r\n    onKeyUp?: (e: React.KeyboardEvent<HTMLElement>, field: QuillEditorField) => void;\r\n}\r\n\r\nexport class QuillEditorField extends BaseField<IQuillEditorFieldProps> {\r\n    protected render() {\r\n        return <QuillEditorFieldRender field={this} />;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {DForm} from '@src/dForm';\r\nimport {IQuillEditorFieldProps, QuillEditorField} from '@src/dForm/fields/quillEditor/quillEditorField';\r\n\r\ntype IComponent = IQuillEditorFieldProps;\r\n\r\n/** DForm QuillEditor field */\r\nexport const QuillEditorComponent = (props: IComponent): React.JSX.Element => (\r\n    <DForm buttons={null} fieldsProps={{field1: {...props, component: QuillEditorField}}} />\r\n);\r\n\r\nexport default QuillEditorComponent;"],"names":["QuillEditorField","BaseField","jsx","QuillEditorFieldRender","QuillEditorComponent","props","DForm","QuillEditorComponent$1"],"mappings":"8sDAyCO,MAAMA,UAAyBC,CAAkC,CAC1D,QAAS,CACR,OAAAC,EAAA,IAACC,EAAuB,CAAA,MAAO,IAAM,CAAA,CAChD,CACJ,CCtCO,MAAAC,EAAAC,GAAAH,EAAAA,IAAAI,EAAA,CAAA,QAAA,KAAA,YAAA,CAAA,OAAA,CAAA,GAAAD,EAAA,UAAAL,CAAA,CAAA,CAAA,CAAA,EAIPO,EAAAH;;;;;;;;;;;;;;;;;;"}