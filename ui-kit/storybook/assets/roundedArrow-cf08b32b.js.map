{"version":3,"file":"roundedArrow-cf08b32b.js","sources":["../../../../node_modules/antd/es/style/roundedArrow.js"],"sourcesContent":["export const roundedArrow = (width, innerRadius, outerRadius, bgColor, boxShadow) => {\n  const unitWidth = width / 2;\n  const ax = 0;\n  const ay = unitWidth;\n  const bx = outerRadius * 1 / Math.sqrt(2);\n  const by = unitWidth - outerRadius * (1 - 1 / Math.sqrt(2));\n  const cx = unitWidth - innerRadius * (1 / Math.sqrt(2));\n  const cy = outerRadius * (Math.sqrt(2) - 1) + innerRadius * (1 / Math.sqrt(2));\n  const dx = 2 * unitWidth - cx;\n  const dy = cy;\n  const ex = 2 * unitWidth - bx;\n  const ey = by;\n  const fx = 2 * unitWidth - ax;\n  const fy = ay;\n  const shadowWidth = unitWidth * Math.sqrt(2) + outerRadius * (Math.sqrt(2) - 2);\n  const polygonOffset = outerRadius * (Math.sqrt(2) - 1);\n  return {\n    pointerEvents: 'none',\n    width,\n    height: width,\n    overflow: 'hidden',\n    '&::before': {\n      position: 'absolute',\n      bottom: 0,\n      insetInlineStart: 0,\n      width,\n      height: width / 2,\n      background: bgColor,\n      clipPath: {\n        _multi_value_: true,\n        value: [`polygon(${polygonOffset}px 100%, 50% ${polygonOffset}px, ${2 * unitWidth - polygonOffset}px 100%, ${polygonOffset}px 100%)`, `path('M ${ax} ${ay} A ${outerRadius} ${outerRadius} 0 0 0 ${bx} ${by} L ${cx} ${cy} A ${innerRadius} ${innerRadius} 0 0 1 ${dx} ${dy} L ${ex} ${ey} A ${outerRadius} ${outerRadius} 0 0 0 ${fx} ${fy} Z')`]\n      },\n      content: '\"\"'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: shadowWidth,\n      height: shadowWidth,\n      bottom: 0,\n      insetInline: 0,\n      margin: 'auto',\n      borderRadius: {\n        _skip_check_: true,\n        value: `0 0 ${innerRadius}px 0`\n      },\n      transform: 'translateY(50%) rotate(-135deg)',\n      boxShadow,\n      zIndex: 0,\n      background: 'transparent'\n    }\n  };\n};"],"names":["roundedArrow","width","innerRadius","outerRadius","bgColor","boxShadow","unitWidth","ax","ay","bx","by","cx","cy","dx","dy","ex","ey","fx","fy","shadowWidth","polygonOffset"],"mappings":"AAAY,MAACA,EAAe,CAACC,EAAOC,EAAaC,EAAaC,EAASC,IAAc,CACnF,MAAMC,EAAYL,EAAQ,EACpBM,EAAK,EACLC,EAAKF,EACLG,EAAKN,EAAc,EAAI,KAAK,KAAK,CAAC,EAClCO,EAAKJ,EAAYH,GAAe,EAAI,EAAI,KAAK,KAAK,CAAC,GACnDQ,EAAKL,EAAYJ,GAAe,EAAI,KAAK,KAAK,CAAC,GAC/CU,EAAKT,GAAe,KAAK,KAAK,CAAC,EAAI,GAAKD,GAAe,EAAI,KAAK,KAAK,CAAC,GACtEW,EAAK,EAAIP,EAAYK,EACrBG,EAAKF,EACLG,EAAK,EAAIT,EAAYG,EACrBO,EAAKN,EACLO,EAAK,EAAIX,EAAYC,EACrBW,EAAKV,EACLW,EAAcb,EAAY,KAAK,KAAK,CAAC,EAAIH,GAAe,KAAK,KAAK,CAAC,EAAI,GACvEiB,EAAgBjB,GAAe,KAAK,KAAK,CAAC,EAAI,GACpD,MAAO,CACL,cAAe,OACf,MAAAF,EACA,OAAQA,EACR,SAAU,SACV,YAAa,CACX,SAAU,WACV,OAAQ,EACR,iBAAkB,EAClB,MAAAA,EACA,OAAQA,EAAQ,EAChB,WAAYG,EACZ,SAAU,CACR,cAAe,GACf,MAAO,CAAC,WAAWgB,CAAa,gBAAgBA,CAAa,OAAO,EAAId,EAAYc,CAAa,YAAYA,CAAa,WAAY,WAAWb,CAAE,IAAIC,CAAE,MAAML,CAAW,IAAIA,CAAW,UAAUM,CAAE,IAAIC,CAAE,MAAMC,CAAE,IAAIC,CAAE,MAAMV,CAAW,IAAIA,CAAW,UAAUW,CAAE,IAAIC,CAAE,MAAMC,CAAE,IAAIC,CAAE,MAAMb,CAAW,IAAIA,CAAW,UAAUc,CAAE,IAAIC,CAAE,MAAM,CAClV,EACD,QAAS,IACV,EACD,WAAY,CACV,QAAS,KACT,SAAU,WACV,MAAOC,EACP,OAAQA,EACR,OAAQ,EACR,YAAa,EACb,OAAQ,OACR,aAAc,CACZ,aAAc,GACd,MAAO,OAAOjB,CAAW,MAC1B,EACD,UAAW,kCACX,UAAAG,EACA,OAAQ,EACR,WAAY,aACb,CACL,CACA","x_google_ignoreList":[0]}