import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{S as g,B as l}from"./button-2UFAuFVp.js";import{B as h}from"./buttonsRow-BEpStRdV.js";import{M as b}from"./modal-B_6FRQ7C.js";import{r}from"./index-iW-139IE.js";import"./compact-item-Cxv0YLF9.js";import"./useToken-C9qwXZKU.js";import"./index-mQZ8i_rL.js";import"./index-D_2t0AaZ.js";import"./index-CMYZVoVF.js";import"./button-D87aS1YS.js";import"./Sider-zAVKy6og.js";import"./index-H-U0Qhl4.js";import"./context-u9dygr8g.js";import"./KeyCode-lh1qUinJ.js";import"./row-Bq2vx5ix.js";import"./ContextIsolator-BX2WkAUK.js";import"./motion-HGHEQR47.js";import"./roundedArrow-CIJYWJcZ.js";import"./index-Bi_XhfGV.js";import"./colors-B0jgcrR7.js";import"./DownOutlined-CSg1yAI9.js";import"./getNanoId-CghKzzgc.js";import"./headerRender-C8Vm9Qb8.js";import"./index-CvIgV7lr.js";import"./ExclamationCircleFilled-DO6fsheT.js";import"./pickAttrs-DOtYDQG6.js";import"./CloseOutlined-C5nLa7GN.js";import"./useClosable-DLVmVXm2.js";import"./InfoCircleOutlined-DgVG6Ryw.js";const i=t=>{const[p,o]=r.useState(!1),[c,f]=r.useState(void 0),s={...{modalId:"testForm",colorType:c},...t},a=r.useCallback(y=>{o(!0),f(y)},[]);return e.jsxs(e.Fragment,{children:[e.jsxs(g,{children:[e.jsx(l,{onClick:()=>a(),children:"Open modal"}),e.jsx(l,{color:"info",variant:"solid",onClick:()=>a("info"),children:"Open modal"}),e.jsx(l,{color:"success",variant:"solid",onClick:()=>a("success"),children:"Open modal"}),e.jsx(l,{color:"warning",variant:"solid",onClick:()=>a("warning"),children:"Open modal"}),e.jsx(l,{color:"danger",variant:"solid",onClick:()=>a("danger"),children:"Open modal"})]}),e.jsxs(b,{...s,open:p,onCancel:()=>o(!1),footer:e.jsx(h,{color:s.colorType,buttons:{close:{title:"Close",active:!0,onClick:()=>o(!1)}}}),children:[e.jsx("p",{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rutrum mattis tempor. Nam a vulputate sem, et hendrerit lectus. Duis nec dictum ipsum, at luctus dui."}),e.jsx("p",{children:"Cras sollicitudin justo magna, eu tincidunt elit aliquet vel. Praesent et dolor et felis auctor rhoncus ut porttitor nisi. Cras ligula nisi, ornare in convallis eu, posuere ut massa."}),e.jsx("p",{children:"Vivamus arcu orci, venenatis id semper in, ornare ut metus. Etiam aliquet ligula luctus, dapibus neque vel, consequat lorem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos."})]})]})};try{i.displayName="ModalComponent",i.__docgenInfo={description:"Modal component",displayName:"ModalComponent",props:{modalId:{defaultValue:null,description:"The modal ID for form dispatcher",name:"modalId",required:!1,type:{name:"string"}},notScrollable:{defaultValue:null,description:"Is the form body not scrollable",name:"notScrollable",required:!1,type:{name:"boolean"}},footer:{defaultValue:null,description:"Footer content",name:"footer",required:!1,type:{name:"ReactNode"}},resizable:{defaultValue:null,description:"Is the for can be resized (show the resize handler). Default: true",name:"resizable",required:!1,type:{name:"boolean"}},colorType:{defaultValue:null,description:"Form color type",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"danger"'},{value:'"default"'},{value:'"primary"'},{value:'"blue"'},{value:'"purple"'},{value:'"cyan"'},{value:'"green"'},{value:'"magenta"'},{value:'"pink"'},{value:'"red"'},{value:'"orange"'},{value:'"yellow"'},{value:'"volcano"'},{value:'"geekblue"'},{value:'"lime"'},{value:'"gold"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'}]}},headerIcon:{defaultValue:null,description:"Form header icon",name:"headerIcon",required:!1,type:{name:"ReactNode"}},isDraggable:{defaultValue:null,description:"Is the form draggable",name:"isDraggable",required:!1,type:{name:"boolean"}},width:{defaultValue:null,description:"initial form width",name:"width",required:!1,type:{name:"string | number"}},maxWidth:{defaultValue:null,description:"Maximum form width",name:"maxWidth",required:!1,type:{name:"string | number"}},minWidth:{defaultValue:null,description:"Minimum form width",name:"minWidth",required:!1,type:{name:"string | number"}},height:{defaultValue:null,description:"Initial form height",name:"height",required:!1,type:{name:"string | number"}},minHeight:{defaultValue:null,description:"Minimum form height",name:"minHeight",required:!1,type:{name:"string | number"}},maxHeight:{defaultValue:null,description:"Maximum form height",name:"maxHeight",required:!1,type:{name:"string | number"}},onAfterOpenChange:{defaultValue:null,description:"Callback when the animation ends when Modal is turned on and off",name:"onAfterOpenChange",required:!1,type:{name:"((open: boolean) => void)"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},keyboard:{defaultValue:null,description:"",name:"keyboard",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"boolean"}},afterClose:{defaultValue:null,description:"",name:"afterClose",required:!1,type:{name:"(() => void)"}},closable:{defaultValue:null,description:"",name:"closable",required:!1,type:{name:"boolean | ({ closeIcon?: ReactNode; disabled?: boolean; } & AriaAttributes)"}},maskClosable:{defaultValue:null,description:"Whether to close the modal dialog when the mask (area outside the modal) is clicked",name:"maskClosable",required:!1,type:{name:"boolean"}},visible:{defaultValue:null,description:"@deprecated Please use `open` instead.",name:"visible",required:!1,type:{name:"boolean"}},destroyOnClose:{defaultValue:null,description:"",name:"destroyOnClose",required:!1,type:{name:"boolean"}},mousePosition:{defaultValue:null,description:"",name:"mousePosition",required:!1,type:{name:"MousePosition"}},title:{defaultValue:null,description:"The modal dialog's title",name:"title",required:!1,type:{name:"ReactNode"}},transitionName:{defaultValue:null,description:"",name:"transitionName",required:!1,type:{name:"string"}},maskTransitionName:{defaultValue:null,description:"",name:"maskTransitionName",required:!1,type:{name:"string"}},animation:{defaultValue:null,description:"",name:"animation",required:!1,type:{name:"any"}},maskAnimation:{defaultValue:null,description:"",name:"maskAnimation",required:!1,type:{name:"any"}},wrapStyle:{defaultValue:null,description:"",name:"wrapStyle",required:!1,type:{name:"Record<string, any>"}},maskStyle:{defaultValue:null,description:"@deprecated Please use `styles.mask` instead",name:"maskStyle",required:!1,type:{name:"CSSProperties"}},prefixCls:{defaultValue:null,description:"",name:"prefixCls",required:!1,type:{name:"string"}},wrapClassName:{defaultValue:null,description:"",name:"wrapClassName",required:!1,type:{name:"string"}},zIndex:{defaultValue:null,description:"",name:"zIndex",required:!1,type:{name:"number"}},bodyProps:{defaultValue:null,description:"",name:"bodyProps",required:!1,type:{name:"any"}},maskProps:{defaultValue:null,description:"",name:"maskProps",required:!1,type:{name:"any"}},rootClassName:{defaultValue:null,description:"",name:"rootClassName",required:!1,type:{name:"string"}},classNames:{defaultValue:null,description:"",name:"classNames",required:!1,type:{name:"ModalClassNames"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"ModalStyles"}},wrapProps:{defaultValue:null,description:"",name:"wrapProps",required:!1,type:{name:"any"}},getContainer:{defaultValue:null,description:"",name:"getContainer",required:!1,type:{name:"string | false | HTMLElement | getContainerFunc"}},closeIcon:{defaultValue:null,description:"",name:"closeIcon",required:!1,type:{name:"ReactNode"}},modalRender:{defaultValue:null,description:"",name:"modalRender",required:!1,type:{name:"((node: ReactNode) => ReactNode)"}},forceRender:{defaultValue:null,description:"Force render Modal",name:"forceRender",required:!1,type:{name:"boolean"}},focusTriggerAfterClose:{defaultValue:null,description:"",name:"focusTriggerAfterClose",required:!1,type:{name:"boolean"}},panelRef:{defaultValue:null,description:"",name:"panelRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},open:{defaultValue:null,description:"Whether the modal dialog is visible or not",name:"open",required:!1,type:{name:"boolean"}},confirmLoading:{defaultValue:null,description:"Whether to apply loading visual effect for OK button or not",name:"confirmLoading",required:!1,type:{name:"boolean"}},onCancel:{defaultValue:null,description:"Specify a function that will be called when a user clicks mask, close button on top right or Cancel button",name:"onCancel",required:!1,type:{name:"((e: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},centered:{defaultValue:null,description:"Centered Modal",name:"centered",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"@since 5.18.0",name:"loading",required:!1,type:{name:"boolean"}}}}}catch{}try{modal.displayName="modal",modal.__docgenInfo={description:"Modal component",displayName:"modal",props:{modalId:{defaultValue:null,description:"The modal ID for form dispatcher",name:"modalId",required:!1,type:{name:"string"}},notScrollable:{defaultValue:null,description:"Is the form body not scrollable",name:"notScrollable",required:!1,type:{name:"boolean"}},footer:{defaultValue:null,description:"Footer content",name:"footer",required:!1,type:{name:"ReactNode"}},resizable:{defaultValue:null,description:"Is the for can be resized (show the resize handler). Default: true",name:"resizable",required:!1,type:{name:"boolean"}},colorType:{defaultValue:null,description:"Form color type",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"danger"'},{value:'"default"'},{value:'"primary"'},{value:'"blue"'},{value:'"purple"'},{value:'"cyan"'},{value:'"green"'},{value:'"magenta"'},{value:'"pink"'},{value:'"red"'},{value:'"orange"'},{value:'"yellow"'},{value:'"volcano"'},{value:'"geekblue"'},{value:'"lime"'},{value:'"gold"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'}]}},headerIcon:{defaultValue:null,description:"Form header icon",name:"headerIcon",required:!1,type:{name:"ReactNode"}},isDraggable:{defaultValue:null,description:"Is the form draggable",name:"isDraggable",required:!1,type:{name:"boolean"}},width:{defaultValue:null,description:"initial form width",name:"width",required:!1,type:{name:"string | number"}},maxWidth:{defaultValue:null,description:"Maximum form width",name:"maxWidth",required:!1,type:{name:"string | number"}},minWidth:{defaultValue:null,description:"Minimum form width",name:"minWidth",required:!1,type:{name:"string | number"}},height:{defaultValue:null,description:"Initial form height",name:"height",required:!1,type:{name:"string | number"}},minHeight:{defaultValue:null,description:"Minimum form height",name:"minHeight",required:!1,type:{name:"string | number"}},maxHeight:{defaultValue:null,description:"Maximum form height",name:"maxHeight",required:!1,type:{name:"string | number"}},onAfterOpenChange:{defaultValue:null,description:"Callback when the animation ends when Modal is turned on and off",name:"onAfterOpenChange",required:!1,type:{name:"((open: boolean) => void)"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},keyboard:{defaultValue:null,description:"",name:"keyboard",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"boolean"}},afterClose:{defaultValue:null,description:"",name:"afterClose",required:!1,type:{name:"(() => void)"}},closable:{defaultValue:null,description:"",name:"closable",required:!1,type:{name:"boolean | ({ closeIcon?: ReactNode; disabled?: boolean; } & AriaAttributes)"}},maskClosable:{defaultValue:null,description:"Whether to close the modal dialog when the mask (area outside the modal) is clicked",name:"maskClosable",required:!1,type:{name:"boolean"}},visible:{defaultValue:null,description:"@deprecated Please use `open` instead.",name:"visible",required:!1,type:{name:"boolean"}},destroyOnClose:{defaultValue:null,description:"",name:"destroyOnClose",required:!1,type:{name:"boolean"}},mousePosition:{defaultValue:null,description:"",name:"mousePosition",required:!1,type:{name:"MousePosition"}},title:{defaultValue:null,description:"The modal dialog's title",name:"title",required:!1,type:{name:"ReactNode"}},transitionName:{defaultValue:null,description:"",name:"transitionName",required:!1,type:{name:"string"}},maskTransitionName:{defaultValue:null,description:"",name:"maskTransitionName",required:!1,type:{name:"string"}},animation:{defaultValue:null,description:"",name:"animation",required:!1,type:{name:"any"}},maskAnimation:{defaultValue:null,description:"",name:"maskAnimation",required:!1,type:{name:"any"}},wrapStyle:{defaultValue:null,description:"",name:"wrapStyle",required:!1,type:{name:"Record<string, any>"}},maskStyle:{defaultValue:null,description:"@deprecated Please use `styles.mask` instead",name:"maskStyle",required:!1,type:{name:"CSSProperties"}},prefixCls:{defaultValue:null,description:"",name:"prefixCls",required:!1,type:{name:"string"}},wrapClassName:{defaultValue:null,description:"",name:"wrapClassName",required:!1,type:{name:"string"}},zIndex:{defaultValue:null,description:"",name:"zIndex",required:!1,type:{name:"number"}},bodyProps:{defaultValue:null,description:"",name:"bodyProps",required:!1,type:{name:"any"}},maskProps:{defaultValue:null,description:"",name:"maskProps",required:!1,type:{name:"any"}},rootClassName:{defaultValue:null,description:"",name:"rootClassName",required:!1,type:{name:"string"}},classNames:{defaultValue:null,description:"",name:"classNames",required:!1,type:{name:"ModalClassNames"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"ModalStyles"}},wrapProps:{defaultValue:null,description:"",name:"wrapProps",required:!1,type:{name:"any"}},getContainer:{defaultValue:null,description:"",name:"getContainer",required:!1,type:{name:"string | false | HTMLElement | getContainerFunc"}},closeIcon:{defaultValue:null,description:"",name:"closeIcon",required:!1,type:{name:"ReactNode"}},modalRender:{defaultValue:null,description:"",name:"modalRender",required:!1,type:{name:"((node: ReactNode) => ReactNode)"}},forceRender:{defaultValue:null,description:"Force render Modal",name:"forceRender",required:!1,type:{name:"boolean"}},focusTriggerAfterClose:{defaultValue:null,description:"",name:"focusTriggerAfterClose",required:!1,type:{name:"boolean"}},panelRef:{defaultValue:null,description:"",name:"panelRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},open:{defaultValue:null,description:"Whether the modal dialog is visible or not",name:"open",required:!1,type:{name:"boolean"}},confirmLoading:{defaultValue:null,description:"Whether to apply loading visual effect for OK button or not",name:"confirmLoading",required:!1,type:{name:"boolean"}},onCancel:{defaultValue:null,description:"Specify a function that will be called when a user clicks mask, close button on top right or Cancel button",name:"onCancel",required:!1,type:{name:"((e: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},centered:{defaultValue:null,description:"Centered Modal",name:"centered",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"@since 5.18.0",name:"loading",required:!1,type:{name:"boolean"}}}}}catch{}const Q={title:"Controls/Modal",component:i,tags:["autodocs"],parameters:{docs:{source:{language:"tsx",format:!0,code:`
                    import {Button, IButtonProps} from @krinopotam/ui-kit/button';
                    import {ButtonsRow} from @krinopotam/ui-kit/buttonsRow';
                    import {IExtendedModalProps} from @krinopotam/ui-kit/modal';
                    import {Modal} from @krinopotam/ui-kit/modal/modal';
                    import {Space} from 'antd';
                    import React, {useCallback, useState} from 'react';
                    /** Modal component */
                    export const ModalComponent = (props?: IExtendedModalProps): React.JSX.Element => {
                        const [open, setOpen] = useState(false);
                        const [colorType, setColorType] = useState<IButtonProps['color'] | undefined>(undefined);
                        const defProps: IExtendedModalProps = {
                            modalId: 'testForm',
                            colorType: colorType,
                        };
                        const compProps = {...defProps, ...props};
                        const onClick = useCallback((colorType?: IButtonProps['color']) => {
                            setOpen(true);
                            setColorType(colorType);
                        }, []);
                        return (
                            <>
                                <Space>
                                    <Button onClick={() => onClick()}>Open modal</Button>
                                    <Button color="info" variant="solid"  onClick={() => onClick('info')}>
                                        Open modal
                                    </Button>
                                    <Button color="success" variant="solid"   onClick={() => onClick('success')}>
                                        Open modal
                                    </Button>
                                    <Button color="warning" variant="solid"   onClick={() => onClick('warning')}>
                                        Open modal
                                    </Button>
                                    <Button color="danger" variant="solid"  onClick={() => onClick('danger')}>
                                        Open modal
                                    </Button>
                                </Space>
                                <Modal
                                    {...compProps}
                                    open={open}
                                    onCancel={() => setOpen(false)}
                                    footer={<ButtonsRow color={compProps.colorType} buttons={{close: {title: 'Close', active: true, onClick: () => setOpen(false)}}} />}
                                >
                                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rutrum mattis tempor. Nam a vulputate sem, et hendrerit lectus. Duis nec dictum ipsum, at luctus dui.</p>
                                    <p>
                                        Cras sollicitudin justo magna, eu tincidunt elit aliquet vel. Praesent et dolor et felis auctor rhoncus ut porttitor nisi. Cras ligula nisi, ornare in convallis eu, posuere ut
                                        massa.
                                    </p>
                                    <p>
                                        Vivamus arcu orci, venenatis id semper in, ornare ut metus. Etiam aliquet ligula luctus, dapibus neque vel, consequat lorem. Class aptent taciti sociosqu ad litora torquent per
                                        conubia nostra, per inceptos himenaeos.
                                    </p>
                                </Modal>
                            </>
                        );
                    };
                    export default ModalComponent;
                `}}}},n={args:{}};var u,d,m;n.parameters={...n.parameters,docs:{...(u=n.parameters)==null?void 0:u.docs,source:{originalSource:`{
  args: {}
}`,...(m=(d=n.parameters)==null?void 0:d.docs)==null?void 0:m.source}}};const U=["Modal"];export{n as Modal,U as __namedExportsOrder,Q as default};
