import{j as R}from"./jsx-runtime-CLpGMVip.js";import{B as G,D as K}from"./dForm-BWQ79u8n.js";import"./dayjs.min-0E-yjQGw.js";import{r as c}from"./index-C9MQhBv9.js";import{_ as B,c as _,g as J,m as Q,r as U,q as Y,C as Z,D as ee,h as ne,W as ae,R as te}from"./compact-item-DA-GXfnI.js";import{o as ie,p as N,_ as le,u as g,F as de}from"./useToken-C7r1PZCj.js";import{u as z}from"./index-CEaSTCJ_.js";import{K as x}from"./KeyCode-lh1qUinJ.js";import"./isArray-Cl7xn3Rc.js";import"./index-DYSaHhaM.js";import"./index-B-Tif3g2.js";import"./index-7UV5TWEd.js";import"./pickAttrs-Br7KB4bY.js";import"./useVariants-54jhFFnz.js";import"./context-55JlqysY.js";import"./index-CNIUd1zL.js";import"./motion-hLQ8GYzu.js";import"./row-CIeG6Ir6.js";import"./ContextIsolator-QgC1AqAH.js";import"./roundedArrow-DmDmIiOY.js";import"./index-3upY0JfS.js";import"./colors-DUoAwKpO.js";import"./QuestionCircleOutlined-cSUxXC2W.js";import"./ExclamationCircleFilled-DH9qZ7y2.js";import"./buttonsRow-DgoUOL1l.js";import"./button-4AcyERAA.js";import"./index-BW5SL8mY.js";import"./button-bcPEIH53.js";import"./Sider-DE0fVHvD.js";import"./DownOutlined-LA98A-kK.js";import"./getNanoId-CghKzzgc.js";import"./updateModalTheme-UYJBKmLU.js";import"./headerRender-DccPdHnJ.js";import"./index-C3W8-LPG.js";import"./CloseOutlined-DRVLVuFC.js";import"./useClosable-D8jC4WSZ.js";import"./InfoCircleOutlined-DifEp91c.js";import"./index--n2SL9R3.js";import"./CheckOutlined-Buza8fpw.js";import"./isDebugMode-B-VM_G4X.js";var re=["prefixCls","className","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onChange","onKeyDown"],T=c.forwardRef(function(e,n){var l,a=e.prefixCls,d=a===void 0?"rc-switch":a,o=e.className,s=e.checked,i=e.defaultChecked,t=e.disabled,r=e.loadingIcon,u=e.checkedChildren,m=e.unCheckedChildren,w=e.onClick,S=e.onChange,C=e.onKeyDown,v=B(e,re),I=z(!1,{value:s,defaultValue:i}),V=ie(I,2),y=V[0],p=V[1];function F(h,q){var b=y;return t||(b=h,p(b),S==null||S(b,q)),b}function k(h){h.which===x.LEFT?F(!1,h):h.which===x.RIGHT&&F(!0,h),C==null||C(h)}function f(h){var q=F(!y,h);w==null||w(q,h)}var D=_(d,o,(l={},N(l,"".concat(d,"-checked"),y),N(l,"".concat(d,"-disabled"),t),l));return c.createElement("button",le({},v,{type:"button",role:"switch","aria-checked":y,disabled:t,className:D,ref:n,onKeyDown:k,onClick:f}),r,c.createElement("span",{className:"".concat(d,"-inner")},c.createElement("span",{className:"".concat(d,"-inner-checked")},u),c.createElement("span",{className:"".concat(d,"-inner-unchecked")},m)))});T.displayName="Switch";const oe=e=>{const{componentCls:n,trackHeightSM:l,trackPadding:a,trackMinWidthSM:d,innerMinMarginSM:o,innerMaxMarginSM:s,handleSizeSM:i,calc:t}=e,r=`${n}-inner`,u=g(t(i).add(t(a).mul(2)).equal()),m=g(t(s).mul(2).equal());return{[n]:{[`&${n}-small`]:{minWidth:d,height:l,lineHeight:g(l),[`${n}-inner`]:{paddingInlineStart:s,paddingInlineEnd:o,[`${r}-checked, ${r}-unchecked`]:{minHeight:l},[`${r}-checked`]:{marginInlineStart:`calc(-100% + ${u} - ${m})`,marginInlineEnd:`calc(100% - ${u} + ${m})`},[`${r}-unchecked`]:{marginTop:t(l).mul(-1).equal(),marginInlineStart:0,marginInlineEnd:0}},[`${n}-handle`]:{width:i,height:i},[`${n}-loading-icon`]:{top:t(t(i).sub(e.switchLoadingIconSize)).div(2).equal(),fontSize:e.switchLoadingIconSize},[`&${n}-checked`]:{[`${n}-inner`]:{paddingInlineStart:o,paddingInlineEnd:s,[`${r}-checked`]:{marginInlineStart:0,marginInlineEnd:0},[`${r}-unchecked`]:{marginInlineStart:`calc(100% - ${u} + ${m})`,marginInlineEnd:`calc(-100% + ${u} - ${m})`}},[`${n}-handle`]:{insetInlineStart:`calc(100% - ${g(t(i).add(a).equal())})`}},[`&:not(${n}-disabled):active`]:{[`&:not(${n}-checked) ${r}`]:{[`${r}-unchecked`]:{marginInlineStart:t(e.marginXXS).div(2).equal(),marginInlineEnd:t(e.marginXXS).mul(-1).div(2).equal()}},[`&${n}-checked ${r}`]:{[`${r}-checked`]:{marginInlineStart:t(e.marginXXS).mul(-1).div(2).equal(),marginInlineEnd:t(e.marginXXS).div(2).equal()}}}}}}},se=e=>{const{componentCls:n,handleSize:l,calc:a}=e;return{[n]:{[`${n}-loading-icon${e.iconCls}`]:{position:"relative",top:a(a(l).sub(e.fontSize)).div(2).equal(),color:e.switchLoadingIconColor,verticalAlign:"top"},[`&${n}-checked ${n}-loading-icon`]:{color:e.switchColor}}}},ce=e=>{const{componentCls:n,trackPadding:l,handleBg:a,handleShadow:d,handleSize:o,calc:s}=e,i=`${n}-handle`;return{[n]:{[i]:{position:"absolute",top:l,insetInlineStart:l,width:o,height:o,transition:`all ${e.switchDuration} ease-in-out`,"&::before":{position:"absolute",top:0,insetInlineEnd:0,bottom:0,insetInlineStart:0,backgroundColor:a,borderRadius:s(o).div(2).equal(),boxShadow:d,transition:`all ${e.switchDuration} ease-in-out`,content:'""'}},[`&${n}-checked ${i}`]:{insetInlineStart:`calc(100% - ${g(s(o).add(l).equal())})`},[`&:not(${n}-disabled):active`]:{[`${i}::before`]:{insetInlineEnd:e.switchHandleActiveInset,insetInlineStart:0},[`&${n}-checked ${i}::before`]:{insetInlineEnd:0,insetInlineStart:e.switchHandleActiveInset}}}}},ue=e=>{const{componentCls:n,trackHeight:l,trackPadding:a,innerMinMargin:d,innerMaxMargin:o,handleSize:s,calc:i}=e,t=`${n}-inner`,r=g(i(s).add(i(a).mul(2)).equal()),u=g(i(o).mul(2).equal());return{[n]:{[t]:{display:"block",overflow:"hidden",borderRadius:100,height:"100%",paddingInlineStart:o,paddingInlineEnd:d,transition:`padding-inline-start ${e.switchDuration} ease-in-out, padding-inline-end ${e.switchDuration} ease-in-out`,[`${t}-checked, ${t}-unchecked`]:{display:"block",color:e.colorTextLightSolid,fontSize:e.fontSizeSM,transition:`margin-inline-start ${e.switchDuration} ease-in-out, margin-inline-end ${e.switchDuration} ease-in-out`,pointerEvents:"none",minHeight:l},[`${t}-checked`]:{marginInlineStart:`calc(-100% + ${r} - ${u})`,marginInlineEnd:`calc(100% - ${r} + ${u})`},[`${t}-unchecked`]:{marginTop:i(l).mul(-1).equal(),marginInlineStart:0,marginInlineEnd:0}},[`&${n}-checked ${t}`]:{paddingInlineStart:d,paddingInlineEnd:o,[`${t}-checked`]:{marginInlineStart:0,marginInlineEnd:0},[`${t}-unchecked`]:{marginInlineStart:`calc(100% - ${r} + ${u})`,marginInlineEnd:`calc(-100% + ${r} - ${u})`}},[`&:not(${n}-disabled):active`]:{[`&:not(${n}-checked) ${t}`]:{[`${t}-unchecked`]:{marginInlineStart:i(a).mul(2).equal(),marginInlineEnd:i(a).mul(-1).mul(2).equal()}},[`&${n}-checked ${t}`]:{[`${t}-checked`]:{marginInlineStart:i(a).mul(-1).mul(2).equal(),marginInlineEnd:i(a).mul(2).equal()}}}}}},he=e=>{const{componentCls:n,trackHeight:l,trackMinWidth:a}=e;return{[n]:Object.assign(Object.assign(Object.assign(Object.assign({},U(e)),{position:"relative",display:"inline-block",boxSizing:"border-box",minWidth:a,height:l,lineHeight:g(l),verticalAlign:"middle",background:e.colorTextQuaternary,border:"0",borderRadius:100,cursor:"pointer",transition:`all ${e.motionDurationMid}`,userSelect:"none",[`&:hover:not(${n}-disabled)`]:{background:e.colorTextTertiary}}),Y(e)),{[`&${n}-checked`]:{background:e.switchColor,[`&:hover:not(${n}-disabled)`]:{background:e.colorPrimaryHover}},[`&${n}-loading, &${n}-disabled`]:{cursor:"not-allowed",opacity:e.switchDisabledOpacity,"*":{boxShadow:"none",cursor:"not-allowed"}},[`&${n}-rtl`]:{direction:"rtl"}})}},me=e=>{const{fontSize:n,lineHeight:l,controlHeight:a,colorWhite:d}=e,o=n*l,s=a/2,i=2,t=o-i*2,r=s-i*2;return{trackHeight:o,trackHeightSM:s,trackMinWidth:t*2+i*4,trackMinWidthSM:r*2+i*2,trackPadding:i,handleBg:d,handleSize:t,handleSizeSM:r,handleShadow:`0 2px 4px 0 ${new de("#00230b").setA(.2).toRgbString()}`,innerMinMargin:t/2,innerMaxMargin:t+i+i*2,innerMinMarginSM:r/2,innerMaxMarginSM:r+i+i*2}},fe=J("Switch",e=>{const n=Q(e,{switchDuration:e.motionDurationMid,switchColor:e.colorPrimary,switchDisabledOpacity:e.opacityLoading,switchLoadingIconSize:e.calc(e.fontSizeIcon).mul(.75).equal(),switchLoadingIconColor:`rgba(0, 0, 0, ${e.opacityLoading})`,switchHandleActiveInset:"-30%"});return[he(n),ue(n),ce(n),se(n),oe(n)]},me);var pe=function(e,n){var l={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.indexOf(a)<0&&(l[a]=e[a]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var d=0,a=Object.getOwnPropertySymbols(e);d<a.length;d++)n.indexOf(a[d])<0&&Object.prototype.propertyIsEnumerable.call(e,a[d])&&(l[a[d]]=e[a[d]]);return l};const ge=c.forwardRef((e,n)=>{const{prefixCls:l,size:a,disabled:d,loading:o,className:s,rootClassName:i,style:t,checked:r,value:u,defaultChecked:m,defaultValue:w,onChange:S}=e,C=pe(e,["prefixCls","size","disabled","loading","className","rootClassName","style","checked","value","defaultChecked","defaultValue","onChange"]),[v,I]=z(!1,{value:r??u,defaultValue:m??w}),{getPrefixCls:V,direction:y,switch:p}=c.useContext(Z),F=c.useContext(ee),k=(d??F)||o,f=V("switch",l),D=c.createElement("div",{className:`${f}-handle`},o&&c.createElement(te,{className:`${f}-loading-icon`})),[h,q,b]=fe(f),W=ne(a),j=_(p==null?void 0:p.className,{[`${f}-small`]:W==="small",[`${f}-loading`]:o,[`${f}-rtl`]:y==="rtl"},s,i,q,b),X=Object.assign(Object.assign({},p==null?void 0:p.style),t),A=function(){I(arguments.length<=0?void 0:arguments[0]),S==null||S.apply(void 0,arguments)};return h(c.createElement(ae,{component:"Switch"},c.createElement(T,Object.assign({},C,{checked:v,onChange:A,prefixCls:f,className:j,style:X,disabled:k,ref:n,loadingIcon:D}))))}),L=ge;L.__ANT_SWITCH=!0;const M=({field:e})=>{c.useSyncExternalStore(e.subscribe.bind(e),e.getSnapshot.bind(e));const n=e.getProps(),l=e.getValue(),a=c.useCallback(s=>{e.isReady()&&(e.setValue(s||!1),e.setDirty(!0),e.setTouched(!0))},[e]);c.useEffect(()=>{e.setReady(!0)},[e]);const o={...{width:e.getWidth()},...n.style};return R.jsx(L,{className:n.className,autoFocus:n.autoFocus,checked:l,checkedChildren:n.checkedChildren,disabled:e.isDisabled()||e.isReadOnly(),loading:n.loading,onChange:a,unCheckedChildren:n.unCheckedChildren,style:o})};try{M.displayName="SwitchFieldRender",M.__docgenInfo={description:"",displayName:"SwitchFieldRender",props:{field:{defaultValue:null,description:"",name:"field",required:!0,type:{name:"SwitchField"}}}}}catch{}class Se extends G{noGrowWidth(){return!0}render(){return R.jsx(M,{field:this})}}const E=e=>R.jsx(K,{buttons:null,fieldsProps:{field1:{...e,component:Se}}});try{E.displayName="SwitchComponent",E.__docgenInfo={description:"DForm Switch field",displayName:"SwitchComponent",props:{checkedChildren:{defaultValue:null,description:"The content to be shown when the state is checked",name:"checkedChildren",required:!1,type:{name:"ReactNode"}},unCheckedChildren:{defaultValue:null,description:"The content to be shown when the state is unchecked",name:"unCheckedChildren",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:null,description:"Loading state of switch",name:"loading",required:!1,type:{name:"boolean"}},component:{defaultValue:null,description:"Field React component",name:"component",required:!0,type:{name:"new (fieldName: string, fieldProps: any, model: DModel, parent?: IBaseField | undefined) => SwitchField"}},helpClass:{defaultValue:null,description:"Help class",name:"helpClass",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Field label",name:"label",required:!1,type:{name:"ReactNode"}},itemClassName:{defaultValue:null,description:"Field item class name",name:"itemClassName",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Field class name",name:"className",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Field placeholder",name:"placeholder",required:!1,type:{name:"string"}},inlineGroup:{defaultValue:null,description:"inline group name",name:"inlineGroup",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Field default value",name:"defaultValue",required:!1,type:{name:"boolean"}},hidden:{defaultValue:null,description:"Whether the field default state is hidden",name:"hidden",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the field default state is disabled",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Whether the field default state is readonly",name:"readOnly",required:!1,type:{name:"boolean"}},nonEditable:{defaultValue:null,description:"Whether the field can not be edited (the field will have readOnly or disabled state if formMode is 'update')",name:"nonEditable",required:!1,type:{name:'boolean | "readOnly" | "disabled"'}},dependsOn:{defaultValue:null,description:"List of fields that must be filled in order to display this field",name:"dependsOn",required:!1,type:{name:"string[]"}},width:{defaultValue:null,description:"Field width",name:"width",required:!1,type:{name:"string | number"}},autoHeightResize:{defaultValue:null,description:"Field container height auto resize",name:"autoHeightResize",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Get focus by default",name:"autoFocus",required:!1,type:{name:"boolean"}},requiredMark:{defaultValue:null,description:"Mark Field Label as Required",name:"requiredMark",required:!1,type:{name:"boolean"}},tooltip:{defaultValue:null,description:"Config tooltip info",name:"tooltip",required:!1,type:{name:"LabelTooltipType"}},style:{defaultValue:null,description:"Field CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},rowStyle:{defaultValue:null,description:"Row field container CSS style",name:"rowStyle",required:!1,type:{name:"CSSProperties"}},rules:{defaultValue:null,description:"Field validation rules",name:"rules",required:!1,type:{name:"IRuleType[]"}},onValueChanged:{defaultValue:null,description:"fires when the value of a field changed",name:"onValueChanged",required:!1,type:{name:"((value: boolean, prevValue: boolean, field: SwitchField) => void)"}},onTouchedStateChanged:{defaultValue:null,description:"fires when the touched state of a field changed",name:"onTouchedStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onDirtyStateChanged:{defaultValue:null,description:"fires when the dirty state of a field changed",name:"onDirtyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onErrorChanged:{defaultValue:null,description:"fires when the error of a field changed",name:"onErrorChanged",required:!1,type:{name:"((error: string, field: SwitchField) => void)"}},onHiddenStateChanged:{defaultValue:null,description:"fires when the hidden state of a field changed",name:"onHiddenStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadOnlyStateChanged:{defaultValue:null,description:"fires when read only state of a field changed",name:"onReadOnlyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onLabelChanged:{defaultValue:null,description:"fires when label of a field changed",name:"onLabelChanged",required:!1,type:{name:"((label: ReactNode, prevLabel: ReactNode, field: SwitchField) => void)"}},onDisabledStateChanged:{defaultValue:null,description:"fires when the disable state of a field changes",name:"onDisabledStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadyStateChanged:{defaultValue:null,description:"fires when a field is completely initialized, its data is loaded",name:"onReadyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onValidated:{defaultValue:null,description:"fires when a field validated",name:"onValidated",required:!1,type:{name:"((value: boolean, error: string, isSubmit: boolean, field: SwitchField) => void)"}},onFieldDataFetch:{defaultValue:null,description:"fires when the field trying to fetch data",name:"onFieldDataFetch",required:!1,type:{name:"((field: SwitchField) => IDFormDataSourcePromise)"}},onFieldDataFetchSuccess:{defaultValue:null,description:"fires when the field fetch success",name:"onFieldDataFetchSuccess",required:!1,type:{name:"((result: { data: Record<string, any>; }, field: SwitchField) => void)"}},onFieldDataFetchError:{defaultValue:null,description:"fires when the field fetch failed",name:"onFieldDataFetchError",required:!1,type:{name:"((error: IError, field: SwitchField) => void)"}}}}}catch{}try{switchComponent.displayName="switchComponent",switchComponent.__docgenInfo={description:"DForm Switch field",displayName:"switchComponent",props:{checkedChildren:{defaultValue:null,description:"The content to be shown when the state is checked",name:"checkedChildren",required:!1,type:{name:"ReactNode"}},unCheckedChildren:{defaultValue:null,description:"The content to be shown when the state is unchecked",name:"unCheckedChildren",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:null,description:"Loading state of switch",name:"loading",required:!1,type:{name:"boolean"}},component:{defaultValue:null,description:"Field React component",name:"component",required:!0,type:{name:"new (fieldName: string, fieldProps: any, model: DModel, parent?: IBaseField | undefined) => SwitchField"}},helpClass:{defaultValue:null,description:"Help class",name:"helpClass",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Field label",name:"label",required:!1,type:{name:"ReactNode"}},itemClassName:{defaultValue:null,description:"Field item class name",name:"itemClassName",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Field class name",name:"className",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Field placeholder",name:"placeholder",required:!1,type:{name:"string"}},inlineGroup:{defaultValue:null,description:"inline group name",name:"inlineGroup",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Field default value",name:"defaultValue",required:!1,type:{name:"boolean"}},hidden:{defaultValue:null,description:"Whether the field default state is hidden",name:"hidden",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the field default state is disabled",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Whether the field default state is readonly",name:"readOnly",required:!1,type:{name:"boolean"}},nonEditable:{defaultValue:null,description:"Whether the field can not be edited (the field will have readOnly or disabled state if formMode is 'update')",name:"nonEditable",required:!1,type:{name:'boolean | "readOnly" | "disabled"'}},dependsOn:{defaultValue:null,description:"List of fields that must be filled in order to display this field",name:"dependsOn",required:!1,type:{name:"string[]"}},width:{defaultValue:null,description:"Field width",name:"width",required:!1,type:{name:"string | number"}},autoHeightResize:{defaultValue:null,description:"Field container height auto resize",name:"autoHeightResize",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Get focus by default",name:"autoFocus",required:!1,type:{name:"boolean"}},requiredMark:{defaultValue:null,description:"Mark Field Label as Required",name:"requiredMark",required:!1,type:{name:"boolean"}},tooltip:{defaultValue:null,description:"Config tooltip info",name:"tooltip",required:!1,type:{name:"LabelTooltipType"}},style:{defaultValue:null,description:"Field CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},rowStyle:{defaultValue:null,description:"Row field container CSS style",name:"rowStyle",required:!1,type:{name:"CSSProperties"}},rules:{defaultValue:null,description:"Field validation rules",name:"rules",required:!1,type:{name:"IRuleType[]"}},onValueChanged:{defaultValue:null,description:"fires when the value of a field changed",name:"onValueChanged",required:!1,type:{name:"((value: boolean, prevValue: boolean, field: SwitchField) => void)"}},onTouchedStateChanged:{defaultValue:null,description:"fires when the touched state of a field changed",name:"onTouchedStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onDirtyStateChanged:{defaultValue:null,description:"fires when the dirty state of a field changed",name:"onDirtyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onErrorChanged:{defaultValue:null,description:"fires when the error of a field changed",name:"onErrorChanged",required:!1,type:{name:"((error: string, field: SwitchField) => void)"}},onHiddenStateChanged:{defaultValue:null,description:"fires when the hidden state of a field changed",name:"onHiddenStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadOnlyStateChanged:{defaultValue:null,description:"fires when read only state of a field changed",name:"onReadOnlyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onLabelChanged:{defaultValue:null,description:"fires when label of a field changed",name:"onLabelChanged",required:!1,type:{name:"((label: ReactNode, prevLabel: ReactNode, field: SwitchField) => void)"}},onDisabledStateChanged:{defaultValue:null,description:"fires when the disable state of a field changes",name:"onDisabledStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadyStateChanged:{defaultValue:null,description:"fires when a field is completely initialized, its data is loaded",name:"onReadyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onValidated:{defaultValue:null,description:"fires when a field validated",name:"onValidated",required:!1,type:{name:"((value: boolean, error: string, isSubmit: boolean, field: SwitchField) => void)"}},onFieldDataFetch:{defaultValue:null,description:"fires when the field trying to fetch data",name:"onFieldDataFetch",required:!1,type:{name:"((field: SwitchField) => IDFormDataSourcePromise)"}},onFieldDataFetchSuccess:{defaultValue:null,description:"fires when the field fetch success",name:"onFieldDataFetchSuccess",required:!1,type:{name:"((result: { data: Record<string, any>; }, field: SwitchField) => void)"}},onFieldDataFetchError:{defaultValue:null,description:"fires when the field fetch failed",name:"onFieldDataFetchError",required:!1,type:{name:"((error: IError, field: SwitchField) => void)"}}}}}catch{}const ln={title:"DForm/Fields/Switch",component:E,tags:["autodocs"],parameters:{docs:{source:{language:"tsx",format:!0,code:`
                    import React from 'react';
                    import {DForm} from @krinopotam/ui-kit/dForm';
                    import {ISwitchFieldProps, SwitchField} from @krinopotam/ui-kit/dForm/fields/switch/switchField';
                    type IComponent = ISwitchFieldProps;
                    /** DForm Switch field */
                    export const SwitchComponent = (props: IComponent): React.JSX.Element => <DForm buttons={null} fieldsProps={{field1: {...props, component: SwitchField}}} />;
                    export default SwitchComponent;
                `}}}},$={args:{label:"Checkbox field"}};var O,P,H;$.parameters={...$.parameters,docs:{...(O=$.parameters)==null?void 0:O.docs,source:{originalSource:`{
  args: {
    label: 'Checkbox field'
  }
}`,...(H=(P=$.parameters)==null?void 0:P.docs)==null?void 0:H.source}}};const dn=["Playground"];export{$ as Playground,dn as __namedExportsOrder,ln as default};
