import{j as c}from"./extends-BRD_ACZV.js";import{r as o}from"./index-uubelm5h.js";import{t as E}from"./index-IYDviCHk.js";import{M as D,a as _,H as A}from"./headerRender-CrqmScji.js";import{c as z}from"./compact-item-Cc18Jwjb.js";import{t as F}from"./getNanoId-DD8laUaD.js";const L=()=>{const e=navigator.userAgent||navigator.vendor||window.opera,a=["android","webos","iphone","ipad","ipod","blackberry","ieMobile","opera mini","avantgo","bada","blazer","elaine","fennec","hipTop","iris","kindle","lge","maemo","midp","mmp","symbian","pocket","webOs","nexus","compal"];return new RegExp(a.join("|"),"i").test(e)},{useToken:O}=E,w=({onMouseResize:e,resizable:a,children:t,style:l,colorType:s})=>{const{token:r}=O(),p=$(r,s);return L()&&(a=!1),c.jsxs(c.Fragment,{children:[t?c.jsx("div",{style:{borderTopWidth:1,borderTopStyle:"solid",borderTopColor:p,...l},children:t}):null,a?c.jsx(j,{onMouseDown:e}):null]})},j=e=>c.jsx("div",{className:"resize-handle",...e,children:c.jsx("div",{className:"resize-handle-inner"})}),$=(e,a)=>{let t=e.colorFillSecondary;return a==="info"?t=e.colorInfoHover:a==="success"?t=e.colorSuccessHover:a==="warning"?t=e.colorWarningHover:a==="danger"&&(t=e.colorErrorHover),t};try{w.displayName="FooterRender",w.__docgenInfo={description:"",displayName:"FooterRender",props:{onMouseResize:{defaultValue:null,description:"",name:"onMouseResize",required:!0,type:{name:"MouseEventHandler<HTMLDivElement> | undefined"}},resizable:{defaultValue:null,description:"",name:"resizable",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},colorType:{defaultValue:null,description:"",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"neutral"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'},{value:'"danger"'}]}}}}}catch{}const C=(e,a,t)=>{const[l,s]=o.useState(!1),[r,p]=o.useState({initWidth:0,initHeight:0,mouseDownX:0,mouseDownY:0,element:void 0}),g=o.useCallback(i=>{if(i.preventDefault(),!(i.target instanceof HTMLElement))return;const n=i.target.closest(".custom-antd-modal .ant-modal");if(!n)return;const d=k("width",a.width,n)||n.getBoundingClientRect().width,u=k("height",a.height,n)||n.getBoundingClientRect().height;p({initWidth:d,initHeight:u,mouseDownX:i.clientX,mouseDownY:i.clientY,element:n}),s(!0)},[a.height,a.width]);return o.useEffect(()=>{const i=n=>{if(l){const{initWidth:d,mouseDownX:u,initHeight:f,mouseDownY:m}=r,y=n.clientX-u,h=n.clientY-m,b=d+y*2,v=f+h*(e.centered?2:1);return t({width:b,height:v})}};return window.addEventListener("mousemove",i,{passive:!0}),()=>window.removeEventListener("mousemove",i)},[r,l,t,e.centered]),o.useEffect(()=>{const i=()=>{var n;if(l){const d=r.element,u=(n=r.element)==null?void 0:n.querySelector(".custom-antd-modal .ant-modal-content");if(!d||!u)return;let f=d.getBoundingClientRect().width,m=d.getBoundingClientRect().height;const y=u.getBoundingClientRect().width,h=u.getBoundingClientRect().height;f<y&&(f=y),m<h&&(m=h),t({width:f,height:m})}s(!1)};return window.addEventListener("mouseup",i),()=>window.removeEventListener("mouseup",i)},[l,r.element,s,t]),g},k=(e,a,t)=>{if(!a)return 0;if(typeof a=="number")return a;const l=RegExp(/^(\d+(?:\.\d+)?)(px|%)$/).exec(a);if(!l)return 0;const s=parseFloat(l[1]),r=l[2];if(r==="px")return s;if(r==="%"&&(t!=null&&t.parentElement)){const g=t.parentElement.getBoundingClientRect()[e];return s/100*g}return 0};try{C.displayName="useResize",C.__docgenInfo={description:"",displayName:"useResize",props:{modalId:{defaultValue:null,description:"The modal ID for form dispatcher",name:"modalId",required:!1,type:{name:"string"}},notScrollable:{defaultValue:null,description:"Is the form body not scrollable",name:"notScrollable",required:!1,type:{name:"boolean"}},footer:{defaultValue:null,description:"Footer content",name:"footer",required:!1,type:{name:"ReactNode"}},resizable:{defaultValue:null,description:"Is the for can be resized (show the resize handler). Default: true",name:"resizable",required:!1,type:{name:"boolean"}},colorType:{defaultValue:null,description:"Form color type",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"neutral"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'},{value:'"danger"'}]}},headerIcon:{defaultValue:null,description:"Form header icon",name:"headerIcon",required:!1,type:{name:"ReactNode"}},isDraggable:{defaultValue:null,description:"Is the form draggable",name:"isDraggable",required:!1,type:{name:"boolean"}},width:{defaultValue:null,description:"initial form width",name:"width",required:!1,type:{name:"string | number"}},maxWidth:{defaultValue:null,description:"Maximum form width",name:"maxWidth",required:!1,type:{name:"string | number"}},minWidth:{defaultValue:null,description:"Minimum form width",name:"minWidth",required:!1,type:{name:"string | number"}},height:{defaultValue:null,description:"Initial form height",name:"height",required:!1,type:{name:"string | number"}},minHeight:{defaultValue:null,description:"Minimum form height",name:"minHeight",required:!1,type:{name:"string | number"}},maxHeight:{defaultValue:null,description:"Maximum form height",name:"maxHeight",required:!1,type:{name:"string | number"}},onAfterOpenChange:{defaultValue:null,description:"Callback when the animation ends when Modal is turned on and off",name:"onAfterOpenChange",required:!1,type:{name:"((open: boolean) => void)"}},visible:{defaultValue:null,description:"@deprecated Please use `open` instead.",name:"visible",required:!1,type:{name:"boolean"}},prefixCls:{defaultValue:null,description:"",name:"prefixCls",required:!1,type:{name:"string"}},forceRender:{defaultValue:null,description:"Force render Modal",name:"forceRender",required:!1,type:{name:"boolean"}},transitionName:{defaultValue:null,description:"",name:"transitionName",required:!1,type:{name:"string"}},animation:{defaultValue:null,description:"",name:"animation",required:!1,type:{name:"any"}},zIndex:{defaultValue:null,description:"",name:"zIndex",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"The modal dialog's title",name:"title",required:!1,type:{name:"ReactNode"}},centered:{defaultValue:null,description:"Centered Modal",name:"centered",required:!1,type:{name:"boolean"}},closable:{defaultValue:null,description:"",name:"closable",required:!1,type:{name:"boolean | ({ closeIcon?: ReactNode; disabled?: boolean; } & AriaAttributes)"}},maskClosable:{defaultValue:null,description:"Whether to close the modal dialog when the mask (area outside the modal) is clicked",name:"maskClosable",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},classNames:{defaultValue:null,description:"",name:"classNames",required:!1,type:{name:"ModalClassNames"}},keyboard:{defaultValue:null,description:"",name:"keyboard",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"@since 5.18.0",name:"loading",required:!1,type:{name:"boolean"}},open:{defaultValue:null,description:"Whether the modal dialog is visible or not",name:"open",required:!1,type:{name:"boolean"}},rootClassName:{defaultValue:null,description:"",name:"rootClassName",required:!1,type:{name:"string"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"ModalStyles"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"boolean"}},afterClose:{defaultValue:null,description:"",name:"afterClose",required:!1,type:{name:"(() => void)"}},destroyOnClose:{defaultValue:null,description:"",name:"destroyOnClose",required:!1,type:{name:"boolean"}},mousePosition:{defaultValue:null,description:"",name:"mousePosition",required:!1,type:{name:"MousePosition"}},maskTransitionName:{defaultValue:null,description:"",name:"maskTransitionName",required:!1,type:{name:"string"}},maskAnimation:{defaultValue:null,description:"",name:"maskAnimation",required:!1,type:{name:"any"}},wrapStyle:{defaultValue:null,description:"",name:"wrapStyle",required:!1,type:{name:"Record<string, any>"}},maskStyle:{defaultValue:null,description:"@deprecated Please use `styles.mask` instead",name:"maskStyle",required:!1,type:{name:"CSSProperties"}},wrapClassName:{defaultValue:null,description:"",name:"wrapClassName",required:!1,type:{name:"string"}},bodyProps:{defaultValue:null,description:"",name:"bodyProps",required:!1,type:{name:"any"}},maskProps:{defaultValue:null,description:"",name:"maskProps",required:!1,type:{name:"any"}},wrapProps:{defaultValue:null,description:"",name:"wrapProps",required:!1,type:{name:"any"}},getContainer:{defaultValue:null,description:"",name:"getContainer",required:!1,type:{name:"string | false | HTMLElement | getContainerFunc"}},closeIcon:{defaultValue:null,description:"",name:"closeIcon",required:!1,type:{name:"ReactNode"}},modalRender:{defaultValue:null,description:"",name:"modalRender",required:!1,type:{name:"((node: ReactNode) => ReactNode)"}},focusTriggerAfterClose:{defaultValue:null,description:"",name:"focusTriggerAfterClose",required:!1,type:{name:"boolean"}},panelRef:{defaultValue:null,description:"",name:"panelRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},confirmLoading:{defaultValue:null,description:"Whether to apply loading visual effect for OK button or not",name:"confirmLoading",required:!1,type:{name:"boolean"}},onCancel:{defaultValue:null,description:"Specify a function that will be called when a user clicks mask, close button on top right or Cancel button",name:"onCancel",required:!1,type:{name:"((e: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}}}}}catch{}const S=e=>{const{resizable:a=!0,isDraggable:t=!0,colorType:l,headerIcon:s,maxHeight:r,minHeight:p,minWidth:g,maxWidth:i,...n}=e,d=o.useRef({}),u=o.useRef();o.useEffect(()=>{n.open&&(u.current=document.activeElement)},[n.open]);const f=o.useCallback(q=>{var V,x,M,N;q?(x=(V=d.current)==null?void 0:V.onParentComponentRendered)==null||x.call(V):(M=u.current)==null||M.focus(),(N=n.onAfterOpenChange)==null||N.call(n,q)},[n]),[m,y]=o.useState({width:n.width??void 0,height:n.height??void 0}),h=C(n,m,y),b=24,H=B({props:n,height:m.height,minWidth:g,maxWidth:i,minHeight:p,maxHeight:r,baseMinWidth:250,baseMinHeight:130}),I=G(n,b),T=Y(n,b),P=X(n),W=K(n,b),[R]=o.useState("draggable-"+F());return c.jsx(D,{...n,width:m.width,height:m.height,style:H,styles:{body:T,footer:{margin:0},content:P},rootClassName:z("custom-antd-modal",n.rootClassName),modalRender:q=>_(q,R,d,t),title:c.jsx(A,{draggableId:R,icon:s,title:n.title,colorType:l,style:I}),footer:c.jsx(w,{onMouseResize:h,resizable:a,style:W,colorType:l,children:n.footer}),afterOpenChange:f})},B=e=>({height:e.height,minWidth:e.minWidth??e.baseMinWidth,maxWidth:e.maxWidth,minHeight:e.minHeight??e.baseMinHeight,maxHeight:e.maxHeight,...e.props.style}),Y=(e,a)=>{var l;return{padding:`0 ${a}px 0 ${a}px`,...(l=e.styles)==null?void 0:l.body,overflowY:e.notScrollable?"hidden":"auto"}},X=e=>{var t;return{...(t=e.styles)==null?void 0:t.content}},K=(e,a)=>{var t;return{padding:`20px ${a}px 20px ${a}px`,...(t=e.styles)==null?void 0:t.footer}},G=(e,a)=>{var l;const t=e.closable===!1||e.closeIcon===null?0:14;return{padding:`3px ${a+t}px 3px ${a}px`,...(l=e.styles)==null?void 0:l.header}};try{S.displayName="Modal",S.__docgenInfo={description:"",displayName:"Modal",props:{modalId:{defaultValue:null,description:"The modal ID for form dispatcher",name:"modalId",required:!1,type:{name:"string"}},notScrollable:{defaultValue:null,description:"Is the form body not scrollable",name:"notScrollable",required:!1,type:{name:"boolean"}},footer:{defaultValue:null,description:"Footer content",name:"footer",required:!1,type:{name:"ReactNode"}},resizable:{defaultValue:null,description:"Is the for can be resized (show the resize handler). Default: true",name:"resizable",required:!1,type:{name:"boolean"}},colorType:{defaultValue:null,description:"Form color type",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"neutral"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'},{value:'"danger"'}]}},headerIcon:{defaultValue:null,description:"Form header icon",name:"headerIcon",required:!1,type:{name:"ReactNode"}},isDraggable:{defaultValue:null,description:"Is the form draggable",name:"isDraggable",required:!1,type:{name:"boolean"}},width:{defaultValue:null,description:"initial form width",name:"width",required:!1,type:{name:"string | number"}},maxWidth:{defaultValue:null,description:"Maximum form width",name:"maxWidth",required:!1,type:{name:"string | number"}},minWidth:{defaultValue:null,description:"Minimum form width",name:"minWidth",required:!1,type:{name:"string | number"}},height:{defaultValue:null,description:"Initial form height",name:"height",required:!1,type:{name:"string | number"}},minHeight:{defaultValue:null,description:"Minimum form height",name:"minHeight",required:!1,type:{name:"string | number"}},maxHeight:{defaultValue:null,description:"Maximum form height",name:"maxHeight",required:!1,type:{name:"string | number"}},onAfterOpenChange:{defaultValue:null,description:"Callback when the animation ends when Modal is turned on and off",name:"onAfterOpenChange",required:!1,type:{name:"((open: boolean) => void)"}},visible:{defaultValue:null,description:"@deprecated Please use `open` instead.",name:"visible",required:!1,type:{name:"boolean"}},prefixCls:{defaultValue:null,description:"",name:"prefixCls",required:!1,type:{name:"string"}},forceRender:{defaultValue:null,description:"Force render Modal",name:"forceRender",required:!1,type:{name:"boolean"}},transitionName:{defaultValue:null,description:"",name:"transitionName",required:!1,type:{name:"string"}},animation:{defaultValue:null,description:"",name:"animation",required:!1,type:{name:"any"}},zIndex:{defaultValue:null,description:"",name:"zIndex",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"The modal dialog's title",name:"title",required:!1,type:{name:"ReactNode"}},centered:{defaultValue:null,description:"Centered Modal",name:"centered",required:!1,type:{name:"boolean"}},closable:{defaultValue:null,description:"",name:"closable",required:!1,type:{name:"boolean | ({ closeIcon?: ReactNode; disabled?: boolean; } & AriaAttributes)"}},maskClosable:{defaultValue:null,description:"Whether to close the modal dialog when the mask (area outside the modal) is clicked",name:"maskClosable",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},classNames:{defaultValue:null,description:"",name:"classNames",required:!1,type:{name:"ModalClassNames"}},keyboard:{defaultValue:null,description:"",name:"keyboard",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"@since 5.18.0",name:"loading",required:!1,type:{name:"boolean"}},open:{defaultValue:null,description:"Whether the modal dialog is visible or not",name:"open",required:!1,type:{name:"boolean"}},rootClassName:{defaultValue:null,description:"",name:"rootClassName",required:!1,type:{name:"string"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"ModalStyles"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"boolean"}},afterClose:{defaultValue:null,description:"",name:"afterClose",required:!1,type:{name:"(() => void)"}},destroyOnClose:{defaultValue:null,description:"",name:"destroyOnClose",required:!1,type:{name:"boolean"}},mousePosition:{defaultValue:null,description:"",name:"mousePosition",required:!1,type:{name:"MousePosition"}},maskTransitionName:{defaultValue:null,description:"",name:"maskTransitionName",required:!1,type:{name:"string"}},maskAnimation:{defaultValue:null,description:"",name:"maskAnimation",required:!1,type:{name:"any"}},wrapStyle:{defaultValue:null,description:"",name:"wrapStyle",required:!1,type:{name:"Record<string, any>"}},maskStyle:{defaultValue:null,description:"@deprecated Please use `styles.mask` instead",name:"maskStyle",required:!1,type:{name:"CSSProperties"}},wrapClassName:{defaultValue:null,description:"",name:"wrapClassName",required:!1,type:{name:"string"}},bodyProps:{defaultValue:null,description:"",name:"bodyProps",required:!1,type:{name:"any"}},maskProps:{defaultValue:null,description:"",name:"maskProps",required:!1,type:{name:"any"}},wrapProps:{defaultValue:null,description:"",name:"wrapProps",required:!1,type:{name:"any"}},getContainer:{defaultValue:null,description:"",name:"getContainer",required:!1,type:{name:"string | false | HTMLElement | getContainerFunc"}},closeIcon:{defaultValue:null,description:"",name:"closeIcon",required:!1,type:{name:"ReactNode"}},modalRender:{defaultValue:null,description:"",name:"modalRender",required:!1,type:{name:"((node: ReactNode) => ReactNode)"}},focusTriggerAfterClose:{defaultValue:null,description:"",name:"focusTriggerAfterClose",required:!1,type:{name:"boolean"}},panelRef:{defaultValue:null,description:"",name:"panelRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},confirmLoading:{defaultValue:null,description:"Whether to apply loading visual effect for OK button or not",name:"confirmLoading",required:!1,type:{name:"boolean"}},onCancel:{defaultValue:null,description:"Specify a function that will be called when a user clicks mask, close button on top right or Cancel button",name:"onCancel",required:!1,type:{name:"((e: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}}}}}catch{}export{S as M};
