import{j as e}from"./useToken-268f632d.js";import{r}from"./index-5819ae2c.js";import{S as h,B as l}from"./button-5cdf73c8.js";import{M as b}from"./draggableRender-4af96ed7.js";import{B as C}from"./buttonsRow-1ff55ad4.js";import"./_commonjsHelpers-de833af9.js";import"./compact-item-e0eb0d02.js";import"./isNativeReflectConstruct-2f1897fe.js";import"./button-a395f6e7.js";import"./index-e0a25a8d.js";import"./InfoCircleOutlined-14b312e0.js";import"./index-092ccb3f.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./helpersString-59da762c.js";import"./v4-4a60fe23.js";import"./index-ba109c1e.js";import"./ExclamationCircleFilled-8e2dacf4.js";import"./context-acf775e7.js";import"./motion-3729e44c.js";import"./useClosable-7a147c6b.js";import"./useZIndex-9f7c196b.js";import"./KeyCode-6413d982.js";import"./pickAttrs-f49ef707.js";import"./zoom-f1d5320d.js";import"./PurePanel-a66be90d.js";import"./index-53e6b65f.js";import"./index-9d475cdf.js";import"./Sider-f270e7a7.js";import"./row-353874ab.js";import"./roundedArrow-cf08b32b.js";import"./colors-dae18b42.js";import"./DownOutlined-7d62f4d3.js";const i=o=>{const[p,n]=r.useState(!1),[c,f]=r.useState(void 0),s={...{modalId:"testForm",colorType:c},...o},a=r.useCallback(y=>{n(!0),f(y)},[]);return e.jsxs(e.Fragment,{children:[e.jsxs(h,{children:[e.jsx(l,{onClick:()=>a(),children:"Open modal"}),e.jsx(l,{type:"primary",onClick:()=>a("info"),colorType:"info",children:"Open modal"}),e.jsx(l,{type:"primary",onClick:()=>a("success"),colorType:"success",children:"Open modal"}),e.jsx(l,{type:"primary",onClick:()=>a("warning"),colorType:"warning",children:"Open modal"}),e.jsx(l,{type:"primary",onClick:()=>a("danger"),colorType:"danger",children:"Open modal"})]}),e.jsxs(b,{...s,open:p,onCancel:()=>n(!1),footer:e.jsx(C,{colorType:s.colorType,buttons:{close:{title:"Close",active:!0,onClick:()=>n(!1)}}}),children:[e.jsx("p",{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rutrum mattis tempor. Nam a vulputate sem, et hendrerit lectus. Duis nec dictum ipsum, at luctus dui."}),e.jsx("p",{children:"Cras sollicitudin justo magna, eu tincidunt elit aliquet vel. Praesent et dolor et felis auctor rhoncus ut porttitor nisi. Cras ligula nisi, ornare in convallis eu, posuere ut massa."}),e.jsx("p",{children:"Vivamus arcu orci, venenatis id semper in, ornare ut metus. Etiam aliquet ligula luctus, dapibus neque vel, consequat lorem. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos."})]})]})},q=i;try{i.displayName="ModalComponent",i.__docgenInfo={description:"Modal component",displayName:"ModalComponent",props:{modalId:{defaultValue:null,description:"the modal ID for form dispatcher",name:"modalId",required:!1,type:{name:"string"}},bodyHeight:{defaultValue:null,description:"The form body initial height",name:"bodyHeight",required:!1,type:{name:"number"}},bodyMinHeight:{defaultValue:null,description:"The form body min height",name:"bodyMinHeight",required:!1,type:{name:"number"}},bodyMaxHeight:{defaultValue:null,description:"The form body max height",name:"bodyMaxHeight",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"The form initial width",name:"width",required:!1,type:{name:"number"}},minWidth:{defaultValue:null,description:"The form min width",name:"minWidth",required:!1,type:{name:"number"}},maxWidth:{defaultValue:null,description:"The form max width",name:"maxWidth",required:!1,type:{name:"number"}},notScrollable:{defaultValue:null,description:"Is the form body not scrollable",name:"notScrollable",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Is the for can be resized (show the resize handler). Default: true",name:"resizable",required:!1,type:{name:"boolean"}},colorType:{defaultValue:null,description:"Form color type",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"warning"'},{value:'"success"'},{value:'"neutral"'},{value:'"info"'},{value:'"danger"'}]}},headerStyle:{defaultValue:null,description:"Form header style",name:"headerStyle",required:!1,type:{name:"CSSProperties"}},headerIcon:{defaultValue:null,description:"Form header icon",name:"headerIcon",required:!1,type:{name:"ReactNode"}},footer:{defaultValue:null,description:"Footer content",name:"footer",required:!1,type:{name:"ReactNode"}},footerStyle:{defaultValue:null,description:"Form footer style",name:"footerStyle",required:!1,type:{name:"CSSProperties"}},onAfterOpenChange:{defaultValue:null,description:"Callback when the animation ends when Modal is turned on and off",name:"onAfterOpenChange",required:!1,type:{name:"((open: boolean) => void)"}},prefixCls:{defaultValue:null,description:"",name:"prefixCls",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},title:{defaultValue:null,description:"The modal dialog's title",name:"title",required:!1,type:{name:"ReactNode"}},open:{defaultValue:null,description:"Whether the modal dialog is visible or not",name:"open",required:!1,type:{name:"boolean"}},transitionName:{defaultValue:null,description:"",name:"transitionName",required:!1,type:{name:"string"}},rootClassName:{defaultValue:null,description:"",name:"rootClassName",required:!1,type:{name:"string"}},visible:{defaultValue:null,description:"@deprecated Please use `open` instead.",name:"visible",required:!1,type:{name:"boolean"}},zIndex:{defaultValue:null,description:"",name:"zIndex",required:!1,type:{name:"number"}},bodyStyle:{defaultValue:null,description:"@deprecated Please use `styles.body` instead",name:"bodyStyle",required:!1,type:{name:"CSSProperties"}},classNames:{defaultValue:null,description:"",name:"classNames",required:!1,type:{name:'Omit<ModalClassNames, "wrapper">'}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:'Omit<ModalStyles, "wrapper">'}},confirmLoading:{defaultValue:null,description:"Whether to apply loading visual effect for OK button or not",name:"confirmLoading",required:!1,type:{name:"boolean"}},closable:{defaultValue:null,description:"Whether a close (x) button is visible on top right of the modal dialog or not. Recommend to use closeIcon instead.",name:"closable",required:!1,type:{name:"boolean"}},onCancel:{defaultValue:null,description:"Specify a function that will be called when a user clicks mask, close button on top right or Cancel button",name:"onCancel",required:!1,type:{name:"((e: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},afterClose:{defaultValue:null,description:"",name:"afterClose",required:!1,type:{name:"(() => void)"}},centered:{defaultValue:null,description:"Centered Modal",name:"centered",required:!1,type:{name:"boolean"}},maskClosable:{defaultValue:null,description:"Whether to close the modal dialog when the mask (area outside the modal) is clicked",name:"maskClosable",required:!1,type:{name:"boolean"}},forceRender:{defaultValue:null,description:"Force render Modal",name:"forceRender",required:!1,type:{name:"boolean"}},destroyOnClose:{defaultValue:null,description:"",name:"destroyOnClose",required:!1,type:{name:"boolean"}},wrapClassName:{defaultValue:null,description:"",name:"wrapClassName",required:!1,type:{name:"string"}},maskTransitionName:{defaultValue:null,description:"",name:"maskTransitionName",required:!1,type:{name:"string"}},getContainer:{defaultValue:null,description:"",name:"getContainer",required:!1,type:{name:"string | false | HTMLElement | getContainerFunc"}},maskStyle:{defaultValue:null,description:"@deprecated Please use `styles.mask` instead",name:"maskStyle",required:!1,type:{name:"CSSProperties"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"boolean"}},keyboard:{defaultValue:null,description:"",name:"keyboard",required:!1,type:{name:"boolean"}},wrapProps:{defaultValue:null,description:"",name:"wrapProps",required:!1,type:{name:"any"}},closeIcon:{defaultValue:null,description:"",name:"closeIcon",required:!1,type:{name:"ReactNode"}},modalRender:{defaultValue:null,description:"",name:"modalRender",required:!1,type:{name:"((node: ReactNode) => ReactNode)"}},focusTriggerAfterClose:{defaultValue:null,description:"",name:"focusTriggerAfterClose",required:!1,type:{name:"boolean"}},mousePosition:{defaultValue:null,description:"",name:"mousePosition",required:!1,type:{name:"MousePosition"}}}}}catch{}try{modal.displayName="modal",modal.__docgenInfo={description:"Modal component",displayName:"modal",props:{modalId:{defaultValue:null,description:"the modal ID for form dispatcher",name:"modalId",required:!1,type:{name:"string"}},bodyHeight:{defaultValue:null,description:"The form body initial height",name:"bodyHeight",required:!1,type:{name:"number"}},bodyMinHeight:{defaultValue:null,description:"The form body min height",name:"bodyMinHeight",required:!1,type:{name:"number"}},bodyMaxHeight:{defaultValue:null,description:"The form body max height",name:"bodyMaxHeight",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"The form initial width",name:"width",required:!1,type:{name:"number"}},minWidth:{defaultValue:null,description:"The form min width",name:"minWidth",required:!1,type:{name:"number"}},maxWidth:{defaultValue:null,description:"The form max width",name:"maxWidth",required:!1,type:{name:"number"}},notScrollable:{defaultValue:null,description:"Is the form body not scrollable",name:"notScrollable",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Is the for can be resized (show the resize handler). Default: true",name:"resizable",required:!1,type:{name:"boolean"}},colorType:{defaultValue:null,description:"Form color type",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"warning"'},{value:'"success"'},{value:'"neutral"'},{value:'"info"'},{value:'"danger"'}]}},headerStyle:{defaultValue:null,description:"Form header style",name:"headerStyle",required:!1,type:{name:"CSSProperties"}},headerIcon:{defaultValue:null,description:"Form header icon",name:"headerIcon",required:!1,type:{name:"ReactNode"}},footer:{defaultValue:null,description:"Footer content",name:"footer",required:!1,type:{name:"ReactNode"}},footerStyle:{defaultValue:null,description:"Form footer style",name:"footerStyle",required:!1,type:{name:"CSSProperties"}},onAfterOpenChange:{defaultValue:null,description:"Callback when the animation ends when Modal is turned on and off",name:"onAfterOpenChange",required:!1,type:{name:"((open: boolean) => void)"}},prefixCls:{defaultValue:null,description:"",name:"prefixCls",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},title:{defaultValue:null,description:"The modal dialog's title",name:"title",required:!1,type:{name:"ReactNode"}},open:{defaultValue:null,description:"Whether the modal dialog is visible or not",name:"open",required:!1,type:{name:"boolean"}},transitionName:{defaultValue:null,description:"",name:"transitionName",required:!1,type:{name:"string"}},rootClassName:{defaultValue:null,description:"",name:"rootClassName",required:!1,type:{name:"string"}},visible:{defaultValue:null,description:"@deprecated Please use `open` instead.",name:"visible",required:!1,type:{name:"boolean"}},zIndex:{defaultValue:null,description:"",name:"zIndex",required:!1,type:{name:"number"}},bodyStyle:{defaultValue:null,description:"@deprecated Please use `styles.body` instead",name:"bodyStyle",required:!1,type:{name:"CSSProperties"}},classNames:{defaultValue:null,description:"",name:"classNames",required:!1,type:{name:'Omit<ModalClassNames, "wrapper">'}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:'Omit<ModalStyles, "wrapper">'}},confirmLoading:{defaultValue:null,description:"Whether to apply loading visual effect for OK button or not",name:"confirmLoading",required:!1,type:{name:"boolean"}},closable:{defaultValue:null,description:"Whether a close (x) button is visible on top right of the modal dialog or not. Recommend to use closeIcon instead.",name:"closable",required:!1,type:{name:"boolean"}},onCancel:{defaultValue:null,description:"Specify a function that will be called when a user clicks mask, close button on top right or Cancel button",name:"onCancel",required:!1,type:{name:"((e: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},afterClose:{defaultValue:null,description:"",name:"afterClose",required:!1,type:{name:"(() => void)"}},centered:{defaultValue:null,description:"Centered Modal",name:"centered",required:!1,type:{name:"boolean"}},maskClosable:{defaultValue:null,description:"Whether to close the modal dialog when the mask (area outside the modal) is clicked",name:"maskClosable",required:!1,type:{name:"boolean"}},forceRender:{defaultValue:null,description:"Force render Modal",name:"forceRender",required:!1,type:{name:"boolean"}},destroyOnClose:{defaultValue:null,description:"",name:"destroyOnClose",required:!1,type:{name:"boolean"}},wrapClassName:{defaultValue:null,description:"",name:"wrapClassName",required:!1,type:{name:"string"}},maskTransitionName:{defaultValue:null,description:"",name:"maskTransitionName",required:!1,type:{name:"string"}},getContainer:{defaultValue:null,description:"",name:"getContainer",required:!1,type:{name:"string | false | HTMLElement | getContainerFunc"}},maskStyle:{defaultValue:null,description:"@deprecated Please use `styles.mask` instead",name:"maskStyle",required:!1,type:{name:"CSSProperties"}},mask:{defaultValue:null,description:"",name:"mask",required:!1,type:{name:"boolean"}},keyboard:{defaultValue:null,description:"",name:"keyboard",required:!1,type:{name:"boolean"}},wrapProps:{defaultValue:null,description:"",name:"wrapProps",required:!1,type:{name:"any"}},closeIcon:{defaultValue:null,description:"",name:"closeIcon",required:!1,type:{name:"ReactNode"}},modalRender:{defaultValue:null,description:"",name:"modalRender",required:!1,type:{name:"((node: ReactNode) => ReactNode)"}},focusTriggerAfterClose:{defaultValue:null,description:"",name:"focusTriggerAfterClose",required:!1,type:{name:"boolean"}},mousePosition:{defaultValue:null,description:"",name:"mousePosition",required:!1,type:{name:"MousePosition"}}}}}catch{}const Z={title:"Controls/Modal",component:q,tags:["autodocs"],parameters:{docs:{source:{language:"tsx",format:!0,code:`
                    import React, {useCallback, useState} from 'react';
                    import {Button} from @krinopotam/ui-kit/button';
                    import {Space} from 'antd';
                    import {IColorType} from @krinopotam/ui-kit/button/button';
                    import {IModalProps, Modal} from @krinopotam/ui-kit/modal';
                    import {ButtonsRow} from @krinopotam/ui-kit/buttonsRow';
                    /** Modal component */
                    export const ModalComponent = (props?: IModalProps): React.JSX.Element => {
                        const [open, setOpen] = useState(false);
                        const [colorType, setColorType] = useState<IColorType | undefined>(undefined);
                        const defProps: IModalProps = {
                            modalId: 'testForm',
                            colorType: colorType,
                        };
                        const compProps = {...defProps, ...props};
                        const onClick = useCallback((colorType?: IColorType) => {
                            setOpen(true);
                            setColorType(colorType);
                        }, []);
                        return (
                            <>
                                <Space>
                                    <Button onClick={() => onClick()}>Open modal</Button>
                                    <Button type="primary" onClick={() => onClick('info')} colorType="info">
                                        Open modal
                                    </Button>
                                    <Button type="primary" onClick={() => onClick('success')} colorType="success">
                                        Open modal
                                    </Button>
                                    <Button type="primary" onClick={() => onClick('warning')} colorType="warning">
                                        Open modal
                                    </Button>
                                    <Button type="primary" onClick={() => onClick('danger')} colorType="danger">
                                        Open modal
                                    </Button>
                                </Space>
                                <Modal
                                    {...compProps}
                                    open={open}
                                    onCancel={() => setOpen(false)}
                                    footer={<ButtonsRow colorType={compProps.colorType} buttons={{close: {title: 'Close', active: true, onClick: () => setOpen(false)}}} />}
                                >
                                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rutrum mattis tempor. Nam a vulputate sem, et hendrerit lectus. Duis nec dictum ipsum, at luctus dui.</p>
                                    <p>
                                        Cras sollicitudin justo magna, eu tincidunt elit aliquet vel. Praesent et dolor et felis auctor rhoncus ut porttitor nisi. Cras ligula nisi, ornare in convallis eu, posuere ut
                                        massa.
                                    </p>
                                    <p>
                                        Vivamus arcu orci, venenatis id semper in, ornare ut metus. Etiam aliquet ligula luctus, dapibus neque vel, consequat lorem. Class aptent taciti sociosqu ad litora torquent per
                                        conubia nostra, per inceptos himenaeos.
                                    </p>
                                </Modal>
                            </>
                        );
                    };
                    export default ModalComponent;
                `}}}},t={args:{}};var u,d,m;t.parameters={...t.parameters,docs:{...(u=t.parameters)==null?void 0:u.docs,source:{originalSource:`{
  args: {}
}`,...(m=(d=t.parameters)==null?void 0:d.docs)==null?void 0:m.source}}};const ee=["Modal"];export{t as Modal,ee as __namedExportsOrder,Z as default};
//# sourceMappingURL=modal.stories-3b629d08.js.map
