import{j as d}from"./extends-CKwpSh1k.js";import{m as g,u as S}from"./updateModalTheme-Bz3Tp2K3.js";import{M as D,B as I}from"./draggableRender-BoyKbdEU.js";import{C as v,M as C,S as V}from"./helpersObjects-NFjaQN06.js";import{r as u}from"./index-CTjT7uj6.js";import{D as w,u as q}from"./dForm-BrYUAKUW.js";import"./index-DGqZ_Opy.js";import{G as p}from"./helpersString-BLksZHLM.js";import"./dayjs.min-BljPK31Q.js";import"./buttonsRow-CBH5dVpW.js";import{I as m}from"./isDebugMode-B-VM_G4X.js";const k=(t,e,n,a,i)=>{e.getFormId=R(t),e.buttonsApi=a,e.getFormProps=M(n),e.setFormProps=x(n,i),e.open=O(e),e.close=E(e),e.forceClose=H(e)},R=t=>u.useCallback(()=>t,[t]),M=t=>u.useCallback(()=>t,[t]),x=(t,e)=>u.useCallback(n=>{e({...t,...n})},[t,e]),O=t=>u.useCallback((e,n)=>{var r,s;if(!e)return;const a=n??t.getFormProps().dataSet,i=a?v(a):void 0,l=t.getFormProps();((r=l.onOpen)==null?void 0:r.call(l,t,i))!==!1&&(t.setFormProps({isOpened:!0,formMode:e,dataSet:i}),(s=l.onOpened)==null||s.call(l,t,i))},[t]),H=t=>u.useCallback(()=>{var n,a;const e=t.getFormProps();if(((n=e.onClosing)==null?void 0:n.call(e,t))===!1)return!1;t.setFormProps({isOpened:!1}),(a=e.onClosed)==null||a.call(e,t)},[t]),E=t=>u.useCallback(()=>{var n;const e=t.getFormProps();if(((n=e.onClosing)==null?void 0:n.call(e,t))!==!1){if(t.model.isFormDirty()&&e.confirmChanges){g.confirm({content:e.closeFormConfirmMessage??"Отменить сделанные изменения?",okText:"Да",cancelText:"Нет",onOk:()=>{t.forceClose()}});return}t.forceClose()}},[t]),f=({formId:t,buttons:e,buttonsApi:n,formApi:a,formProps:i,modalFormProps:l})=>{const[r]=u.useState(t??"dFormModal-"+p()),s=l.formMode??"create",o=_(s,l.title);return d.jsx(D,{modalId:r,open:l.isOpened,onCancel:a.close,centered:!0,destroyOnClose:!0,footer:d.jsx(I,{buttons:e,colorType:l.colorType,buttonsApi:n,arrowsSelection:l.arrowsButtonsSelection,context:a}),footerStyle:l.footerStyle,maskClosable:!1,keyboard:!1,width:l.width,minWidth:l.minWidth,maxWidth:l.maxWidth,notScrollable:l.notScrollable,resizable:l.resizable!==!1,title:o,headerIcon:l.headerIcon,headerStyle:l.headerStyle,colorType:i.colorType,bodyHeight:l.bodyHeight,bodyMinHeight:l.bodyMinHeight,bodyMaxHeight:l.bodyMaxHeight,bodyCss:l.bodyStyle,isDraggable:l.isDraggable,children:l.isOpened?d.jsx(w,{apiRef:a,...i,formStyle:{height:"100%",...i.formStyle},containerStyle:{height:"100%",...i.containerStyle}}):null})},_=(t,e)=>e||(t==="view"?"Просмотр":t==="create"?"Создание":t==="clone"?"Клонирование":t==="update"?"Редактирование":"&nbsp;");try{f.displayName="DFormModalRender",f.__docgenInfo={description:"",displayName:"DFormModalRender",props:{formId:{defaultValue:null,description:"the form ID",name:"formId",required:!1,type:{name:"string"}},buttons:{defaultValue:null,description:"form buttons collection",name:"buttons",required:!1,type:{name:"IFormButtons"}},buttonsApi:{defaultValue:null,description:"Form buttons api",name:"buttonsApi",required:!1,type:{name:"IButtonsRowApi"}},centered:{defaultValue:null,description:"Is the form open centered",name:"centered",required:!1,type:{name:"boolean"}},formApi:{defaultValue:null,description:"form api",name:"formApi",required:!0,type:{name:"IDFormModalApi"}},formProps:{defaultValue:null,description:"Child dynamic form props only",name:"formProps",required:!0,type:{name:"IDFormProps"}},modalFormProps:{defaultValue:null,description:"Dynamic modal form props (contains formProps values)",name:"modalFormProps",required:!0,type:{name:"IDFormModalProps"}},onOk:{defaultValue:null,description:"On submit button click callback",name:"onOk",required:!1,type:{name:"((e: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},onCancel:{defaultValue:null,description:"On cancel button click callback",name:"onCancel",required:!1,type:{name:"((e: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}}}}}catch{}const b=(t,e)=>u.useMemo(()=>({onFormDirtyStateChanged:n=>{var a;return(a=e==null?void 0:e.onFormDirtyStateChanged)==null?void 0:a.call(e,n,t)},onFormReadOnlyStateChanged:n=>{var a;return(a=e==null?void 0:e.onFormReadOnlyStateChanged)==null?void 0:a.call(e,n,t)},onFormInit:()=>{var n;return(n=e==null?void 0:e.onFormInit)==null?void 0:n.call(e,t)},onFormModelInitialized:()=>{var n;return(n=e==null?void 0:e.onFormModelInitialized)==null?void 0:n.call(e,t)},onFormReadyStateChanged:n=>{var a;return(a=e==null?void 0:e.onFormReadyStateChanged)==null?void 0:a.call(e,n,t)},onFormValuesChanged:(n,a)=>{var i;return(i=e==null?void 0:e.onFormValuesChanged)==null?void 0:i.call(e,n,a,t)},onFormValidated:(n,a,i)=>{var l;return(l=e==null?void 0:e.onFormValidated)==null?void 0:l.call(e,n,a,i,t)},onFormHasErrors:(n,a)=>{var i;return(i=e==null?void 0:e.onFormHasErrors)==null?void 0:i.call(e,n,a,t)},onFormHasNoErrors:n=>{var a;return(a=e==null?void 0:e.onFormHasNoErrors)==null?void 0:a.call(e,n,t)},onDataFetch:()=>{var n;return(n=e==null?void 0:e.onDataFetch)==null?void 0:n.call(e,t)},onDataFetchSuccess:n=>{var a;return(a=e==null?void 0:e.onDataFetchSuccess)==null?void 0:a.call(e,n,t)},onDataFetchError:n=>{var i;if(((i=e==null?void 0:e.onDataFetchError)==null?void 0:i.call(e,n,t))===!1)return!1;const a=g.confirm({content:d.jsxs(d.Fragment,{children:[d.jsx("p",{children:d.jsx("b",{children:n.message})}),n.stack&&m()?d.jsx("p",{children:n.stack}):"",d.jsx("p",{children:"Попробовать снова?"})]}),colorType:"danger",buttons:{ok:{onClick:()=>{a.destroy(),t.model.fetchData()}},cancel:{onClick:()=>{var l;a.destroy(),(l=t.forceClose)==null||l.call(t)}}}});return!1},onDataFetchComplete:()=>{var n;return(n=e==null?void 0:e.onDataFetchComplete)==null?void 0:n.call(e,t)},onSubmitValidation:(n,a)=>{var i;return(i=e==null?void 0:e.onSubmitValidation)==null?void 0:i.call(e,n,a,t)},onSubmit:n=>{var a,i,l,r,s,o,c;return(i=(a=t.buttonsApi).disabled)==null||i.call(a,"ok",!0),(r=(l=t.buttonsApi).disabled)==null||r.call(l,"cancel",!0),e.confirmChanges||(o=(s=t.buttonsApi).loading)==null||o.call(s,"ok",!0),(c=e==null?void 0:e.onSubmit)==null?void 0:c.call(e,n,t)},onSubmitSuccess:(n,a)=>{var i;if(((i=e==null?void 0:e.onSubmitSuccess)==null?void 0:i.call(e,n,a,t))===!1)return!1;t.forceClose()},onSubmitError:(n,a)=>{var i;return(i=e==null?void 0:e.onSubmitError)==null?void 0:i.call(e,n,a,t)},onSubmitComplete:(n,a)=>{var i,l,r,s,o,c,h;if(((i=e==null?void 0:e.onSubmitComplete)==null?void 0:i.call(e,n,a,t))===!1)return!1;(r=(l=t.buttonsApi).disabled)==null||r.call(l,"ok",!1),(o=(s=t.buttonsApi).disabled)==null||o.call(s,"cancel",!1),(h=(c=t.buttonsApi).loading)==null||h.call(c,"ok",!1)},onDataSetChange:n=>{var a;return(a=e==null?void 0:e.onDataSetChange)==null?void 0:a.call(e,n,t)}}),[t,e]);try{b.displayName="useFormCallbacks",b.__docgenInfo={description:"Preparing callbacks for redirection to the form",displayName:"useFormCallbacks",props:{}}}catch{}const N=(t,e)=>u.useMemo(()=>{const n={ok:{position:"right",active:e.formMode!=="view",hidden:e.formMode==="view",title:"ОК",hotKeys:[{key:"enter",ctrl:!0},{key:"s",ctrl:!0},{key:"ы",ctrl:!0}],onClick:()=>{t.submitForm()}},cancel:{position:"right",title:"Отмена",hotKeys:[{key:"escape"}],active:e.formMode==="view",onClick:()=>{t.close()}}};return C(n,e.buttons)},[t,e.buttons,e.formMode]),y=t=>{S();const[e]=u.useState(t.formId??"dFormModal-"+p()),[n,a]=q(t),[i,l]=u.useState(n.apiRef||{}),[r]=u.useState({}),s=N(i,n);k(e,i,n,r,a);const o=b(i,n),[,c]=j(n,o);return u.useEffect(()=>()=>{l({})},[]),d.jsx(f,{formId:e,formApi:i,modalFormProps:n,formProps:c,buttons:s,buttonsApi:r})},j=(t,e)=>u.useMemo(()=>{const[n,a]=V(t,{title:!0,width:!0,minWidth:!0,maxWidth:!0,bodyHeight:!0,bodyMinHeight:!0,bodyMaxHeight:!0,bodyStyle:!0,notScrollable:!0,isDraggable:!0,resizable:!0,isOpened:!0,headerStyle:!0,headerIcon:!0,footerStyle:!0,closeFormConfirmMessage:!0});return a.buttons=null,[n,{...a,...e}]},[e,t]);try{y.displayName="DFormModal",y.__docgenInfo={description:"",displayName:"DFormModal",props:{title:{defaultValue:null,description:"Modal controls title",name:"title",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"Modal window width",name:"width",required:!1,type:{name:"number"}},minWidth:{defaultValue:null,description:"Modal window min width",name:"minWidth",required:!1,type:{name:"number"}},maxWidth:{defaultValue:null,description:"Modal window max width",name:"maxWidth",required:!1,type:{name:"number"}},bodyHeight:{defaultValue:null,description:"Content body height",name:"bodyHeight",required:!1,type:{name:"number"}},bodyMinHeight:{defaultValue:null,description:"Content body min height",name:"bodyMinHeight",required:!1,type:{name:"number"}},bodyMaxHeight:{defaultValue:null,description:"Content body max height",name:"bodyMaxHeight",required:!1,type:{name:"number"}},bodyStyle:{defaultValue:null,description:"Content body CSS style (will be overwritten by bodyHeight, bodyMinHeight, bodyMaxHeight if set)",name:"bodyStyle",required:!1,type:{name:"CSSProperties"}},notScrollable:{defaultValue:null,description:"Content body wil not be scrollable",name:"notScrollable",required:!1,type:{name:"boolean"}},isDraggable:{defaultValue:null,description:"Is modal draggable",name:"isDraggable",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Is modal can be resizable",name:"resizable",required:!1,type:{name:"boolean"}},isOpened:{defaultValue:null,description:"Is controls visible (for open for without api)",name:"isOpened",required:!1,type:{name:"boolean"}},headerStyle:{defaultValue:null,description:"Form header style",name:"headerStyle",required:!1,type:{name:"CSSProperties"}},headerIcon:{defaultValue:null,description:"Form header icon",name:"headerIcon",required:!1,type:{name:"ReactNode"}},footerStyle:{defaultValue:null,description:"Form footer style",name:"footerStyle",required:!1,type:{name:"CSSProperties"}},closeFormConfirmMessage:{defaultValue:null,description:"Confirm message before the form closing, if form is dirty",name:"closeFormConfirmMessage",required:!1,type:{name:"ReactNode"}},onOpen:{defaultValue:null,description:"",name:"onOpen",required:!1,type:{name:"((formApi: IDFormModalApi, dataSet: IDFormDataSet) => boolean | void)"}},onOpened:{defaultValue:null,description:"",name:"onOpened",required:!1,type:{name:"((formApi: IDFormModalApi, dataSet: IDFormDataSet) => void)"}},onClosing:{defaultValue:null,description:"",name:"onClosing",required:!1,type:{name:"((formApi: IDFormModalApi) => boolean | void)"}},onClosed:{defaultValue:null,description:"",name:"onClosed",required:!1,type:{name:"((formApi: IDFormModalApi) => void)"}},onFormDirtyStateChanged:{defaultValue:null,description:"fires when the dirty state of the form changed",name:"onFormDirtyStateChanged",required:!1,type:{name:"(((state: boolean, api: IDFormModalApi) => void) & ((state: boolean, api: IDFormApi) => void))"}},onFormReadOnlyStateChanged:{defaultValue:null,description:"fires when the read only state of the form changed",name:"onFormReadOnlyStateChanged",required:!1,type:{name:"(((state: boolean, api: IDFormModalApi) => void) & ((state: boolean, api: IDFormApi) => void))"}},onFormDisabledStateChanged:{defaultValue:null,description:"fires when the disabled state of the form changed",name:"onFormDisabledStateChanged",required:!1,type:{name:"(((state: boolean, api: IDFormModalApi) => void) & ((state: boolean, api: IDFormApi) => void))"}},onFormInit:{defaultValue:null,description:"fires when the form began initialization (renders for the first time)",name:"onFormInit",required:!1,type:{name:"(((api: IDFormModalApi) => void) & ((api: IDFormApi) => void))"}},onFormModelInitialized:{defaultValue:null,description:"fires when the form model has been initialized",name:"onFormModelInitialized",required:!1,type:{name:"(((api: IDFormModalApi) => void) & ((api: IDFormApi) => void))"}},onFormReadyStateChanged:{defaultValue:null,description:"fires when the form ready status changed (form ready means form is rendered, initialized and all fields data are loaded)",name:"onFormReadyStateChanged",required:!1,type:{name:"(((state: boolean, api: IDFormModalApi) => boolean | void) & ((state: boolean, api: IDFormApi) => boolean | void))"}},onFormValuesChanged:{defaultValue:null,description:"fires when the form values changed",name:"onFormValuesChanged",required:!1,type:{name:"(((fieldName: string, values: Record<string, unknown>, api: IDFormModalApi) => void) & ((fieldName: string, values: Record<string, unknown>, api: IDFormApi) => void))"}},onFormValidated:{defaultValue:null,description:"fires when the form validated",name:"onFormValidated",required:!1,type:{name:"(((values: Record<string, unknown>, errors: Record<string, string>, isSubmit: boolean, api: IDFormModalApi) => void) & ((values: Record<string, unknown>, errors: Record<...>, isSubmit: boolean, api: IDFormApi) => void))"}},onFormHasErrors:{defaultValue:null,description:"fires when the form has errors",name:"onFormHasErrors",required:!1,type:{name:"(((values: Record<string, unknown>, errors: Record<string, unknown>, api: IDFormModalApi) => void) & ((values: Record<string, unknown>, errors: Record<string, unknown>, api: IDFormApi) => void))"}},onFormHasNoErrors:{defaultValue:null,description:"fires when the form has no errors",name:"onFormHasNoErrors",required:!1,type:{name:"(((values: Record<string, unknown>, api: IDFormModalApi) => boolean | void) & ((values: Record<string, unknown>, api: IDFormApi) => boolean | void))"}},onDataFetch:{defaultValue:null,description:"fires when the form trying to fetch data",name:"onDataFetch",required:!1,type:{name:"(((api: IDFormModalApi) => IDFormDataSourcePromise) & ((api: IDFormApi) => IDFormDataSourcePromise)) | undefined"}},onDataFetchSuccess:{defaultValue:null,description:"fires when the form fetch success",name:"onDataFetchSuccess",required:!1,type:{name:"(((result: { data: Record<string, unknown>; }, api: IDFormModalApi) => boolean | void) & ((result: { data: Record<string, unknown>; }, api: IDFormApi) => boolean | void))"}},onDataFetchError:{defaultValue:null,description:"fires when the form fetch failed",name:"onDataFetchError",required:!1,type:{name:"(((error: IError, api: IDFormModalApi) => boolean | void) & ((error: IError, api: IDFormApi) => boolean | void))"}},onDataFetchComplete:{defaultValue:null,description:"fires after the completion of fetching the data, regardless of the result",name:"onDataFetchComplete",required:!1,type:{name:"(((api: IDFormModalApi) => void) & ((api: IDFormApi) => void))"}},onSubmit:{defaultValue:null,description:"Fires on submitting the form. Can returns Promise, Object, Boolean or Void",name:"onSubmit",required:!1,type:{name:"(((values: Record<string, unknown>, api: IDFormModalApi) => boolean | void | IDFormSubmitResultPromise | IDFormSubmitResultObject) & ((values: Record<...>, api: IDFormApi) => boolean | ... 2 more ... | IDFormSubmitResultObject))"}},onSubmitValidation:{defaultValue:null,description:"fires on submit validation",name:"onSubmitValidation",required:!1,type:{name:"(((values: Record<string, unknown>, errors: Record<string, string>, api: IDFormModalApi) => void) & ((values: Record<string, unknown>, errors: Record<...>, api: IDFormApi) => void))"}},onSubmitSuccess:{defaultValue:null,description:"fires on submit failed",name:"onSubmitSuccess",required:!1,type:{name:"(((values: Record<string, unknown>, resultValues: Record<string, unknown>, api: IDFormModalApi) => boolean | void) & ((values: Record<string, unknown>, resultValues: Record<...>, api: IDFormApi) => boolean | void)) | undefined"}},onSubmitError:{defaultValue:null,description:"fires on submit error",name:"onSubmitError",required:!1,type:{name:"(((values: Record<string, unknown>, error: IError, api: IDFormModalApi) => boolean | void) & ((values: Record<string, unknown>, error: IError, api: IDFormApi) => boolean | void))"}},onSubmitComplete:{defaultValue:null,description:"fires, when the submitting finishes, whether in failure or success.",name:"onSubmitComplete",required:!1,type:{name:"(((values: Record<string, unknown>, errors: Record<string, string>, api: IDFormModalApi) => boolean | void) & ((values: Record<string, unknown>, errors: Record<...>, api: IDFormApi) => boolean | void))"}},onDataSetChange:{defaultValue:null,description:"fires, when the form dataSet changed. Unlike onFormValuesChanged, it is triggered only when a new dataSet is set via setFormValues and is not called when the user changes the field values",name:"onDataSetChange",required:!1,type:{name:"(((dataSet: IDFormDataSet, api: IDFormModalApi) => IDFormDataSet) & ((dataSet: IDFormDataSet | undefined, api: IDFormApi) => IDFormDataSet | undefined)) | undefined"}},apiRef:{defaultValue:null,description:"A mutable object to merge with these controls api",name:"apiRef",required:!1,type:{name:"unknown"}},formId:{defaultValue:null,description:"Form formId",name:"formId",required:!1,type:{name:"string"}},buttons:{defaultValue:null,description:"Buttons properties",name:"buttons",required:!1,type:{name:"IFormButtons | null"}},className:{defaultValue:null,description:"Form CSS class",name:"className",required:!1,type:{name:"string"}},formStyle:{defaultValue:null,description:"Form style",name:"formStyle",required:!1,type:{name:"CSSProperties"}},containerClassName:{defaultValue:null,description:"Form container class name",name:"containerClassName",required:!1,type:{name:"string"}},containerStyle:{defaultValue:null,description:"Form container style",name:"containerStyle",required:!1,type:{name:"CSSProperties"}},contentIndent:{defaultValue:null,description:"Indent from the beginning of the controls (default 12)",name:"contentIndent",required:!1,type:{name:"number"}},dataSet:{defaultValue:null,description:"Form data",name:"dataSet",required:!1,type:{name:"IDFormDataSet"}},parentDataSet:{defaultValue:null,description:"Parent form data",name:"parentDataSet",required:!1,type:{name:"IDFormDataSet"}},fieldsProps:{defaultValue:null,description:"Fields properties",name:"fieldsProps",required:!1,type:{name:"IDFormFieldsProps"}},colorType:{defaultValue:null,description:"Form color type",name:"colorType",required:!1,type:{name:"enum",value:[{value:'"warning"'},{value:'"neutral"'},{value:'"info"'},{value:'"success"'},{value:'"danger"'}]}},labelCol:{defaultValue:null,description:"label column parameters, for example span:'8'",name:"labelCol",required:!1,type:{name:"ColProps"}},wrapperCol:{defaultValue:null,description:"wrapper column parameters, for example span:'16'",name:"wrapperCol",required:!1,type:{name:"ColProps"}},labelAlign:{defaultValue:null,description:"text align of label of all items",name:"labelAlign",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},layout:{defaultValue:null,description:"Form layout (horizontal or vertical). Vertical is default",name:"layout",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},formMode:{defaultValue:null,description:"Form mode",name:"formMode",required:!1,type:{name:"enum",value:[{value:'"view"'},{value:'"create"'},{value:'"update"'},{value:'"clone"'},{value:'"delete"'}]}},readOnly:{defaultValue:null,description:"The form is read only",name:"readOnly",required:!1,type:{name:"boolean"}},disableDepended:{defaultValue:null,description:"Automatically disable fields if they depend on fields whose value is not set. Otherwise, such fields will be automatically hidden",name:"disableDepended",required:!1,type:{name:"boolean"}},tabsHeight:{defaultValue:null,description:"Tabs panes height (default 40)",name:"tabsHeight",required:!1,type:{name:"number"}},unfilledForm:{defaultValue:null,description:"No use controls data",name:"unfilledForm",required:!1,type:{name:"boolean"}},validationRules:{defaultValue:null,description:"Validation rules",name:"validationRules",required:!1,type:{name:"IDFormValidationRules"}},confirmChanges:{defaultValue:null,description:"Should the form request confirmation before the form submitting or cancel, if the form data was changed by the user",name:"confirmChanges",required:!1,type:{name:"boolean"}},submitConfirmMessage:{defaultValue:null,description:"Confirm message before the form submitting",name:"submitConfirmMessage",required:!1,type:{name:"ReactNode"}},requiredMark:{defaultValue:null,description:"Required mark style. Can use required mark or optional mark. You can not config to single Form.Item since this is a Form level config",name:"requiredMark",required:!1,type:{name:"RequiredMark"}},arrowsButtonsSelection:{defaultValue:null,description:"allow select buttons using arrows keys",name:"arrowsButtonsSelection",required:!1,type:{name:"boolean"}}}}}catch{}export{y as D};
