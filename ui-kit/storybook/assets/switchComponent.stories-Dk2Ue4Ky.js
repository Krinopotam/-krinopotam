import{_ as G,j as R}from"./extends-BRD_ACZV.js";import{B as K,D as B}from"./dForm-DJXjixmx.js";import"./dayjs.min-C_f_bfvq.js";import{r as c}from"./index-uubelm5h.js";import{_ as J,c as _,g as Q,m as U,r as Y,q as Z,C as ee,D as ne,h as ae,W as te,R as ie}from"./compact-item-IaHZmqF4.js";import{m as le,n as x,u as g,T as de}from"./useToken--rxRg63T.js";import{u as z}from"./index-C9GPWzHg.js";import{K as N}from"./KeyCode-DNlgD2sM.js";import"./isArray-Cl7xn3Rc.js";import"./index-DaxZXI7c.js";import"./index-RRW4sUgR.js";import"./pickAttrs-Ceb8JkZg.js";import"./useVariants-BCbWTJhT.js";import"./context-CrsU2UZX.js";import"./assertThisInitialized-C7eLZ5Vw.js";import"./wrapNativeSuper-CxOa5OEc.js";import"./ContextIsolator-DTA0rjn8.js";import"./index-CSZa4169.js";import"./motion-WmxowxVV.js";import"./row-R-nZpFec.js";import"./roundedArrow-Cy_VYcsu.js";import"./zoom-CqB_wpkX.js";import"./colors-g_WWN96I.js";import"./QuestionCircleOutlined-BwsbN9TT.js";import"./ExclamationCircleFilled-rOw3n2gg.js";import"./buttonsRow-C57QUn79.js";import"./button-Iix8LbRU.js";import"./button-DvzT6zDE.js";import"./index-CB3XXCqd.js";import"./Sider-CY9JNDYe.js";import"./DownOutlined-J6zIsiwY.js";import"./getNanoId-DD8laUaD.js";import"./updateModalTheme-CFQLIXxh.js";import"./headerRender-Da1RH9v-.js";import"./index-WZmxnzc0.js";import"./CloseOutlined-xuSWusRf.js";import"./useClosable-DmZ-8Q3E.js";import"./index-D3eZ-H7s.js";import"./InfoCircleOutlined-rgXyzvM4.js";import"./index-0axGYSbf.js";import"./CheckOutlined-ih17Bwkf.js";import"./modal-Cr9Lg2Xb.js";import"./useIsDebugMode-_qV3LLe4.js";var oe=["prefixCls","className","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onChange","onKeyDown"],T=c.forwardRef(function(e,n){var l,a=e.prefixCls,d=a===void 0?"rc-switch":a,r=e.className,s=e.checked,i=e.defaultChecked,t=e.disabled,o=e.loadingIcon,u=e.checkedChildren,p=e.unCheckedChildren,b=e.onClick,S=e.onChange,C=e.onKeyDown,$=J(e,oe),I=z(!1,{value:s,defaultValue:i}),q=le(I,2),y=q[0],f=q[1];function F(h,v){var w=y;return t||(w=h,f(w),S==null||S(w,v)),w}function k(h){h.which===N.LEFT?F(!1,h):h.which===N.RIGHT&&F(!0,h),C==null||C(h)}function m(h){var v=F(!y,h);b==null||b(v,h)}var D=_(d,r,(l={},x(l,"".concat(d,"-checked"),y),x(l,"".concat(d,"-disabled"),t),l));return c.createElement("button",G({},$,{type:"button",role:"switch","aria-checked":y,disabled:t,className:D,ref:n,onKeyDown:k,onClick:m}),o,c.createElement("span",{className:"".concat(d,"-inner")},c.createElement("span",{className:"".concat(d,"-inner-checked")},u),c.createElement("span",{className:"".concat(d,"-inner-unchecked")},p)))});T.displayName="Switch";const re=e=>{const{componentCls:n,trackHeightSM:l,trackPadding:a,trackMinWidthSM:d,innerMinMarginSM:r,innerMaxMarginSM:s,handleSizeSM:i,calc:t}=e,o=`${n}-inner`,u=g(t(i).add(t(a).mul(2)).equal()),p=g(t(s).mul(2).equal());return{[n]:{[`&${n}-small`]:{minWidth:d,height:l,lineHeight:g(l),[`${n}-inner`]:{paddingInlineStart:s,paddingInlineEnd:r,[`${o}-checked, ${o}-unchecked`]:{minHeight:l},[`${o}-checked`]:{marginInlineStart:`calc(-100% + ${u} - ${p})`,marginInlineEnd:`calc(100% - ${u} + ${p})`},[`${o}-unchecked`]:{marginTop:t(l).mul(-1).equal(),marginInlineStart:0,marginInlineEnd:0}},[`${n}-handle`]:{width:i,height:i},[`${n}-loading-icon`]:{top:t(t(i).sub(e.switchLoadingIconSize)).div(2).equal(),fontSize:e.switchLoadingIconSize},[`&${n}-checked`]:{[`${n}-inner`]:{paddingInlineStart:r,paddingInlineEnd:s,[`${o}-checked`]:{marginInlineStart:0,marginInlineEnd:0},[`${o}-unchecked`]:{marginInlineStart:`calc(100% - ${u} + ${p})`,marginInlineEnd:`calc(-100% + ${u} - ${p})`}},[`${n}-handle`]:{insetInlineStart:`calc(100% - ${g(t(i).add(a).equal())})`}},[`&:not(${n}-disabled):active`]:{[`&:not(${n}-checked) ${o}`]:{[`${o}-unchecked`]:{marginInlineStart:t(e.marginXXS).div(2).equal(),marginInlineEnd:t(e.marginXXS).mul(-1).div(2).equal()}},[`&${n}-checked ${o}`]:{[`${o}-checked`]:{marginInlineStart:t(e.marginXXS).mul(-1).div(2).equal(),marginInlineEnd:t(e.marginXXS).div(2).equal()}}}}}}},se=e=>{const{componentCls:n,handleSize:l,calc:a}=e;return{[n]:{[`${n}-loading-icon${e.iconCls}`]:{position:"relative",top:a(a(l).sub(e.fontSize)).div(2).equal(),color:e.switchLoadingIconColor,verticalAlign:"top"},[`&${n}-checked ${n}-loading-icon`]:{color:e.switchColor}}}},ce=e=>{const{componentCls:n,trackPadding:l,handleBg:a,handleShadow:d,handleSize:r,calc:s}=e,i=`${n}-handle`;return{[n]:{[i]:{position:"absolute",top:l,insetInlineStart:l,width:r,height:r,transition:`all ${e.switchDuration} ease-in-out`,"&::before":{position:"absolute",top:0,insetInlineEnd:0,bottom:0,insetInlineStart:0,backgroundColor:a,borderRadius:s(r).div(2).equal(),boxShadow:d,transition:`all ${e.switchDuration} ease-in-out`,content:'""'}},[`&${n}-checked ${i}`]:{insetInlineStart:`calc(100% - ${g(s(r).add(l).equal())})`},[`&:not(${n}-disabled):active`]:{[`${i}::before`]:{insetInlineEnd:e.switchHandleActiveInset,insetInlineStart:0},[`&${n}-checked ${i}::before`]:{insetInlineEnd:0,insetInlineStart:e.switchHandleActiveInset}}}}},ue=e=>{const{componentCls:n,trackHeight:l,trackPadding:a,innerMinMargin:d,innerMaxMargin:r,handleSize:s,calc:i}=e,t=`${n}-inner`,o=g(i(s).add(i(a).mul(2)).equal()),u=g(i(r).mul(2).equal());return{[n]:{[t]:{display:"block",overflow:"hidden",borderRadius:100,height:"100%",paddingInlineStart:r,paddingInlineEnd:d,transition:`padding-inline-start ${e.switchDuration} ease-in-out, padding-inline-end ${e.switchDuration} ease-in-out`,[`${t}-checked, ${t}-unchecked`]:{display:"block",color:e.colorTextLightSolid,fontSize:e.fontSizeSM,transition:`margin-inline-start ${e.switchDuration} ease-in-out, margin-inline-end ${e.switchDuration} ease-in-out`,pointerEvents:"none",minHeight:l},[`${t}-checked`]:{marginInlineStart:`calc(-100% + ${o} - ${u})`,marginInlineEnd:`calc(100% - ${o} + ${u})`},[`${t}-unchecked`]:{marginTop:i(l).mul(-1).equal(),marginInlineStart:0,marginInlineEnd:0}},[`&${n}-checked ${t}`]:{paddingInlineStart:d,paddingInlineEnd:r,[`${t}-checked`]:{marginInlineStart:0,marginInlineEnd:0},[`${t}-unchecked`]:{marginInlineStart:`calc(100% - ${o} + ${u})`,marginInlineEnd:`calc(-100% + ${o} - ${u})`}},[`&:not(${n}-disabled):active`]:{[`&:not(${n}-checked) ${t}`]:{[`${t}-unchecked`]:{marginInlineStart:i(a).mul(2).equal(),marginInlineEnd:i(a).mul(-1).mul(2).equal()}},[`&${n}-checked ${t}`]:{[`${t}-checked`]:{marginInlineStart:i(a).mul(-1).mul(2).equal(),marginInlineEnd:i(a).mul(2).equal()}}}}}},he=e=>{const{componentCls:n,trackHeight:l,trackMinWidth:a}=e;return{[n]:Object.assign(Object.assign(Object.assign(Object.assign({},Y(e)),{position:"relative",display:"inline-block",boxSizing:"border-box",minWidth:a,height:l,lineHeight:g(l),verticalAlign:"middle",background:e.colorTextQuaternary,border:"0",borderRadius:100,cursor:"pointer",transition:`all ${e.motionDurationMid}`,userSelect:"none",[`&:hover:not(${n}-disabled)`]:{background:e.colorTextTertiary}}),Z(e)),{[`&${n}-checked`]:{background:e.switchColor,[`&:hover:not(${n}-disabled)`]:{background:e.colorPrimaryHover}},[`&${n}-loading, &${n}-disabled`]:{cursor:"not-allowed",opacity:e.switchDisabledOpacity,"*":{boxShadow:"none",cursor:"not-allowed"}},[`&${n}-rtl`]:{direction:"rtl"}})}},pe=e=>{const{fontSize:n,lineHeight:l,controlHeight:a,colorWhite:d}=e,r=n*l,s=a/2,i=2,t=r-i*2,o=s-i*2;return{trackHeight:r,trackHeightSM:s,trackMinWidth:t*2+i*4,trackMinWidthSM:o*2+i*2,trackPadding:i,handleBg:d,handleSize:t,handleSizeSM:o,handleShadow:`0 2px 4px 0 ${new de("#00230b").setAlpha(.2).toRgbString()}`,innerMinMargin:t/2,innerMaxMargin:t+i+i*2,innerMinMarginSM:o/2,innerMaxMarginSM:o+i+i*2}},me=Q("Switch",e=>{const n=U(e,{switchDuration:e.motionDurationMid,switchColor:e.colorPrimary,switchDisabledOpacity:e.opacityLoading,switchLoadingIconSize:e.calc(e.fontSizeIcon).mul(.75).equal(),switchLoadingIconColor:`rgba(0, 0, 0, ${e.opacityLoading})`,switchHandleActiveInset:"-30%"});return[he(n),ue(n),ce(n),se(n),re(n)]},pe);var fe=function(e,n){var l={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.indexOf(a)<0&&(l[a]=e[a]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var d=0,a=Object.getOwnPropertySymbols(e);d<a.length;d++)n.indexOf(a[d])<0&&Object.prototype.propertyIsEnumerable.call(e,a[d])&&(l[a[d]]=e[a[d]]);return l};const ge=c.forwardRef((e,n)=>{const{prefixCls:l,size:a,disabled:d,loading:r,className:s,rootClassName:i,style:t,checked:o,value:u,defaultChecked:p,defaultValue:b,onChange:S}=e,C=fe(e,["prefixCls","size","disabled","loading","className","rootClassName","style","checked","value","defaultChecked","defaultValue","onChange"]),[$,I]=z(!1,{value:o??u,defaultValue:p??b}),{getPrefixCls:q,direction:y,switch:f}=c.useContext(ee),F=c.useContext(ne),k=(d??F)||r,m=q("switch",l),D=c.createElement("div",{className:`${m}-handle`},r&&c.createElement(ie,{className:`${m}-loading-icon`})),[h,v,w]=me(m),W=ae(a),j=_(f==null?void 0:f.className,{[`${m}-small`]:W==="small",[`${m}-loading`]:r,[`${m}-rtl`]:y==="rtl"},s,i,v,w),X=Object.assign(Object.assign({},f==null?void 0:f.style),t),A=function(){I(arguments.length<=0?void 0:arguments[0]),S==null||S.apply(void 0,arguments)};return h(c.createElement(te,{component:"Switch"},c.createElement(T,Object.assign({},C,{checked:$,onChange:A,prefixCls:m,className:j,style:X,disabled:k,ref:n,loadingIcon:D}))))}),L=ge;L.__ANT_SWITCH=!0;const M=({field:e})=>{c.useSyncExternalStore(e.subscribe.bind(e),e.getSnapshot.bind(e));const n=e.getProps(),l=e.getValue(),a=c.useCallback(s=>{e.isReady()&&(e.setValue(s||!1),e.setDirty(!0),e.setTouched(!0))},[e]);c.useEffect(()=>{e.setReady(!0)},[e]);const r={...{width:e.getWidth()},...n.style};return R.jsx(L,{autoFocus:n.autoFocus,checked:l,checkedChildren:n.checkedChildren,disabled:e.isDisabled()||e.isReadOnly(),loading:n.loading,onChange:a,unCheckedChildren:n.unCheckedChildren,style:r})};try{M.displayName="SwitchFieldRender",M.__docgenInfo={description:"",displayName:"SwitchFieldRender",props:{field:{defaultValue:null,description:"",name:"field",required:!0,type:{name:"SwitchField"}}}}}catch{}class Se extends K{noGrowWidth(){return!0}render(){return R.jsx(M,{field:this})}}const E=e=>R.jsx(B,{buttons:null,fieldsProps:{field1:{...e,component:Se}}}),ye=E;try{E.displayName="SwitchComponent",E.__docgenInfo={description:"DForm Switch field",displayName:"SwitchComponent",props:{checkedChildren:{defaultValue:null,description:"The content to be shown when the state is checked",name:"checkedChildren",required:!1,type:{name:"ReactNode"}},unCheckedChildren:{defaultValue:null,description:"The content to be shown when the state is unchecked",name:"unCheckedChildren",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:null,description:"Loading state of switch",name:"loading",required:!1,type:{name:"boolean"}},component:{defaultValue:null,description:"Field React component",name:"component",required:!0,type:{name:"new (fieldName: string, fieldProps: any, model: DModel, parent?: IBaseField | undefined) => SwitchField"}},helpClass:{defaultValue:null,description:"Help class",name:"helpClass",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Field label",name:"label",required:!1,type:{name:"ReactNode"}},placeholder:{defaultValue:null,description:"Field placeholder",name:"placeholder",required:!1,type:{name:"string"}},inlineGroup:{defaultValue:null,description:"inline group name",name:"inlineGroup",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Field default value",name:"defaultValue",required:!1,type:{name:"boolean"}},hidden:{defaultValue:null,description:"Whether the field default state is hidden",name:"hidden",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the field default state is disabled",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Whether the field default state is readonly",name:"readOnly",required:!1,type:{name:"boolean"}},nonEditable:{defaultValue:null,description:"Whether the field can not be edited (the field will have readOnly state if formMode is 'update')",name:"nonEditable",required:!1,type:{name:"boolean"}},dependsOn:{defaultValue:null,description:"List of fields that must be filled in order to display this field",name:"dependsOn",required:!1,type:{name:"string[]"}},width:{defaultValue:null,description:"Field width",name:"width",required:!1,type:{name:"string | number"}},autoHeightResize:{defaultValue:null,description:"Field container height auto resize",name:"autoHeightResize",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Get focus by default",name:"autoFocus",required:!1,type:{name:"boolean"}},requiredMark:{defaultValue:null,description:"Mark Field Label as Required",name:"requiredMark",required:!1,type:{name:"boolean"}},tooltip:{defaultValue:null,description:"Config tooltip info",name:"tooltip",required:!1,type:{name:"LabelTooltipType"}},style:{defaultValue:null,description:"Field CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},rowStyle:{defaultValue:null,description:"Row field container CSS style",name:"rowStyle",required:!1,type:{name:"CSSProperties"}},rules:{defaultValue:null,description:"Field validation rules",name:"rules",required:!1,type:{name:"IRuleType[]"}},onValueChanged:{defaultValue:null,description:"fires when the value of a field changed",name:"onValueChanged",required:!1,type:{name:"((value: boolean, prevValue: boolean, field: SwitchField) => void)"}},onTouchedStateChanged:{defaultValue:null,description:"fires when the touched state of a field changed",name:"onTouchedStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onDirtyStateChanged:{defaultValue:null,description:"fires when the dirty state of a field changed",name:"onDirtyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onErrorChanged:{defaultValue:null,description:"fires when the error of a field changed",name:"onErrorChanged",required:!1,type:{name:"((error: string, field: SwitchField) => void)"}},onHiddenStateChanged:{defaultValue:null,description:"fires when the hidden state of a field changed",name:"onHiddenStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadOnlyStateChanged:{defaultValue:null,description:"fires when read only state of a field changed",name:"onReadOnlyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onLabelChanged:{defaultValue:null,description:"fires when label of a field changed",name:"onLabelChanged",required:!1,type:{name:"((label: ReactNode, prevLabel: ReactNode, field: SwitchField) => void)"}},onDisabledStateChanged:{defaultValue:null,description:"fires when the disable state of a field changes",name:"onDisabledStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadyStateChanged:{defaultValue:null,description:"fires when a field is completely initialized, its data is loaded",name:"onReadyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onValidated:{defaultValue:null,description:"fires when a field validated",name:"onValidated",required:!1,type:{name:"((value: boolean, error: string, isSubmit: boolean, field: SwitchField) => void)"}},onFieldDataFetch:{defaultValue:null,description:"fires when the field trying to fetch data",name:"onFieldDataFetch",required:!1,type:{name:"((field: SwitchField) => IDFormDataSourcePromise)"}},onFieldDataFetchSuccess:{defaultValue:null,description:"fires when the field fetch success",name:"onFieldDataFetchSuccess",required:!1,type:{name:"((result: { data: Record<string, any>; }, field: SwitchField) => void)"}},onFieldDataFetchError:{defaultValue:null,description:"fires when the field fetch failed",name:"onFieldDataFetchError",required:!1,type:{name:"((error: IError, field: SwitchField) => void)"}}}}}catch{}try{switchComponent.displayName="switchComponent",switchComponent.__docgenInfo={description:"DForm Switch field",displayName:"switchComponent",props:{checkedChildren:{defaultValue:null,description:"The content to be shown when the state is checked",name:"checkedChildren",required:!1,type:{name:"ReactNode"}},unCheckedChildren:{defaultValue:null,description:"The content to be shown when the state is unchecked",name:"unCheckedChildren",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:null,description:"Loading state of switch",name:"loading",required:!1,type:{name:"boolean"}},component:{defaultValue:null,description:"Field React component",name:"component",required:!0,type:{name:"new (fieldName: string, fieldProps: any, model: DModel, parent?: IBaseField | undefined) => SwitchField"}},helpClass:{defaultValue:null,description:"Help class",name:"helpClass",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Field label",name:"label",required:!1,type:{name:"ReactNode"}},placeholder:{defaultValue:null,description:"Field placeholder",name:"placeholder",required:!1,type:{name:"string"}},inlineGroup:{defaultValue:null,description:"inline group name",name:"inlineGroup",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Field default value",name:"defaultValue",required:!1,type:{name:"boolean"}},hidden:{defaultValue:null,description:"Whether the field default state is hidden",name:"hidden",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the field default state is disabled",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Whether the field default state is readonly",name:"readOnly",required:!1,type:{name:"boolean"}},nonEditable:{defaultValue:null,description:"Whether the field can not be edited (the field will have readOnly state if formMode is 'update')",name:"nonEditable",required:!1,type:{name:"boolean"}},dependsOn:{defaultValue:null,description:"List of fields that must be filled in order to display this field",name:"dependsOn",required:!1,type:{name:"string[]"}},width:{defaultValue:null,description:"Field width",name:"width",required:!1,type:{name:"string | number"}},autoHeightResize:{defaultValue:null,description:"Field container height auto resize",name:"autoHeightResize",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Get focus by default",name:"autoFocus",required:!1,type:{name:"boolean"}},requiredMark:{defaultValue:null,description:"Mark Field Label as Required",name:"requiredMark",required:!1,type:{name:"boolean"}},tooltip:{defaultValue:null,description:"Config tooltip info",name:"tooltip",required:!1,type:{name:"LabelTooltipType"}},style:{defaultValue:null,description:"Field CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},rowStyle:{defaultValue:null,description:"Row field container CSS style",name:"rowStyle",required:!1,type:{name:"CSSProperties"}},rules:{defaultValue:null,description:"Field validation rules",name:"rules",required:!1,type:{name:"IRuleType[]"}},onValueChanged:{defaultValue:null,description:"fires when the value of a field changed",name:"onValueChanged",required:!1,type:{name:"((value: boolean, prevValue: boolean, field: SwitchField) => void)"}},onTouchedStateChanged:{defaultValue:null,description:"fires when the touched state of a field changed",name:"onTouchedStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onDirtyStateChanged:{defaultValue:null,description:"fires when the dirty state of a field changed",name:"onDirtyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onErrorChanged:{defaultValue:null,description:"fires when the error of a field changed",name:"onErrorChanged",required:!1,type:{name:"((error: string, field: SwitchField) => void)"}},onHiddenStateChanged:{defaultValue:null,description:"fires when the hidden state of a field changed",name:"onHiddenStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadOnlyStateChanged:{defaultValue:null,description:"fires when read only state of a field changed",name:"onReadOnlyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onLabelChanged:{defaultValue:null,description:"fires when label of a field changed",name:"onLabelChanged",required:!1,type:{name:"((label: ReactNode, prevLabel: ReactNode, field: SwitchField) => void)"}},onDisabledStateChanged:{defaultValue:null,description:"fires when the disable state of a field changes",name:"onDisabledStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadyStateChanged:{defaultValue:null,description:"fires when a field is completely initialized, its data is loaded",name:"onReadyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onValidated:{defaultValue:null,description:"fires when a field validated",name:"onValidated",required:!1,type:{name:"((value: boolean, error: string, isSubmit: boolean, field: SwitchField) => void)"}},onFieldDataFetch:{defaultValue:null,description:"fires when the field trying to fetch data",name:"onFieldDataFetch",required:!1,type:{name:"((field: SwitchField) => IDFormDataSourcePromise)"}},onFieldDataFetchSuccess:{defaultValue:null,description:"fires when the field fetch success",name:"onFieldDataFetchSuccess",required:!1,type:{name:"((result: { data: Record<string, any>; }, field: SwitchField) => void)"}},onFieldDataFetchError:{defaultValue:null,description:"fires when the field fetch failed",name:"onFieldDataFetchError",required:!1,type:{name:"((error: IError, field: SwitchField) => void)"}}}}}catch{}const sn={title:"DForm/Fields/Switch",component:ye,tags:["autodocs"],parameters:{docs:{source:{language:"tsx",format:!0,code:`
                    import React from 'react';
                    import {DForm} from @krinopotam/ui-kit/dForm';
                    import {ISwitchFieldProps, SwitchField} from @krinopotam/ui-kit/dForm/fields/switch/switchField';
                    type IComponent = ISwitchFieldProps;
                    /** DForm Switch field */
                    export const SwitchComponent = (props: IComponent): React.JSX.Element => <DForm buttons={null} fieldsProps={{field1: {...props, component: SwitchField}}} />;
                    export default SwitchComponent;
                `}}}},V={args:{label:"Checkbox field"}};var P,O,H;V.parameters={...V.parameters,docs:{...(P=V.parameters)==null?void 0:P.docs,source:{originalSource:`{
  args: {
    label: 'Checkbox field'
  }
}`,...(H=(O=V.parameters)==null?void 0:O.docs)==null?void 0:H.source}}};const cn=["Playground"];export{V as Playground,cn as __namedExportsOrder,sn as default};
