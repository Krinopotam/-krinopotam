import{j as N}from"./jsx-runtime-D_zvdyIk.js";import{D as K}from"./dForm-gpv2y2mK.js";import"./dayjs.min-B6ICIYLQ.js";import{B}from"./baseField-qxKIP2KY.js";import{r as c}from"./index-iW-139IE.js";import{_ as G,c as _,g as J,m as Q,r as U,s as Y,C as Z,D as ee,i as ae,W as ne,R as te}from"./compact-item-Cxv0YLF9.js";import{o as ie,p as R,_ as le,u as g,F as de}from"./useToken-C9qwXZKU.js";import{u as z}from"./index-H-U0Qhl4.js";import{K as x}from"./KeyCode-lh1qUinJ.js";import"./buttonsRow-CsYr8aok.js";import"./button-Cbcgio0C.js";import"./index-CMYZVoVF.js";import"./button-D87aS1YS.js";import"./Sider-zAVKy6og.js";import"./context-u9dygr8g.js";import"./index-mQZ8i_rL.js";import"./index-D_2t0AaZ.js";import"./row-Bq2vx5ix.js";import"./ContextIsolator-BX2WkAUK.js";import"./motion-HGHEQR47.js";import"./roundedArrow-CIJYWJcZ.js";import"./index-Bi_XhfGV.js";import"./colors-B0jgcrR7.js";import"./DownOutlined-CSg1yAI9.js";import"./getNanoId-CghKzzgc.js";import"./updateModalTheme-B8AwUfMr.js";import"./headerRender-C_UbU-i8.js";import"./index-CvIgV7lr.js";import"./ExclamationCircleFilled-DO6fsheT.js";import"./pickAttrs-DOtYDQG6.js";import"./CloseOutlined-C5nLa7GN.js";import"./useClosable-DLVmVXm2.js";import"./InfoCircleOutlined-DgVG6Ryw.js";import"./QuestionCircleOutlined-BUGNUdLn.js";import"./index-DSj8ZEWj.js";import"./TextArea-Bx-nz3Fu.js";import"./useVariants-Cpy17TlJ.js";import"./index-CHrs_Nvn.js";import"./CheckOutlined-DXdfq3FB.js";import"./isDebugMode-B-VM_G4X.js";import"./isArray-Cl7xn3Rc.js";var re=["prefixCls","className","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onChange","onKeyDown"],T=c.forwardRef(function(e,a){var l,n=e.prefixCls,d=n===void 0?"rc-switch":n,o=e.className,s=e.checked,i=e.defaultChecked,t=e.disabled,r=e.loadingIcon,u=e.checkedChildren,m=e.unCheckedChildren,w=e.onClick,S=e.onChange,C=e.onKeyDown,$=G(e,re),k=z(!1,{value:s,defaultValue:i}),q=ie(k,2),y=q[0],p=q[1];function F(h,v){var b=y;return t||(b=h,p(b),S==null||S(b,v)),b}function I(h){h.which===x.LEFT?F(!1,h):h.which===x.RIGHT&&F(!0,h),C==null||C(h)}function f(h){var v=F(!y,h);w==null||w(v,h)}var D=_(d,o,(l={},R(l,"".concat(d,"-checked"),y),R(l,"".concat(d,"-disabled"),t),l));return c.createElement("button",le({},$,{type:"button",role:"switch","aria-checked":y,disabled:t,className:D,ref:a,onKeyDown:I,onClick:f}),r,c.createElement("span",{className:"".concat(d,"-inner")},c.createElement("span",{className:"".concat(d,"-inner-checked")},u),c.createElement("span",{className:"".concat(d,"-inner-unchecked")},m)))});T.displayName="Switch";const oe=e=>{const{componentCls:a,trackHeightSM:l,trackPadding:n,trackMinWidthSM:d,innerMinMarginSM:o,innerMaxMarginSM:s,handleSizeSM:i,calc:t}=e,r=`${a}-inner`,u=g(t(i).add(t(n).mul(2)).equal()),m=g(t(s).mul(2).equal());return{[a]:{[`&${a}-small`]:{minWidth:d,height:l,lineHeight:g(l),[`${a}-inner`]:{paddingInlineStart:s,paddingInlineEnd:o,[`${r}-checked, ${r}-unchecked`]:{minHeight:l},[`${r}-checked`]:{marginInlineStart:`calc(-100% + ${u} - ${m})`,marginInlineEnd:`calc(100% - ${u} + ${m})`},[`${r}-unchecked`]:{marginTop:t(l).mul(-1).equal(),marginInlineStart:0,marginInlineEnd:0}},[`${a}-handle`]:{width:i,height:i},[`${a}-loading-icon`]:{top:t(t(i).sub(e.switchLoadingIconSize)).div(2).equal(),fontSize:e.switchLoadingIconSize},[`&${a}-checked`]:{[`${a}-inner`]:{paddingInlineStart:o,paddingInlineEnd:s,[`${r}-checked`]:{marginInlineStart:0,marginInlineEnd:0},[`${r}-unchecked`]:{marginInlineStart:`calc(100% - ${u} + ${m})`,marginInlineEnd:`calc(-100% + ${u} - ${m})`}},[`${a}-handle`]:{insetInlineStart:`calc(100% - ${g(t(i).add(n).equal())})`}},[`&:not(${a}-disabled):active`]:{[`&:not(${a}-checked) ${r}`]:{[`${r}-unchecked`]:{marginInlineStart:t(e.marginXXS).div(2).equal(),marginInlineEnd:t(e.marginXXS).mul(-1).div(2).equal()}},[`&${a}-checked ${r}`]:{[`${r}-checked`]:{marginInlineStart:t(e.marginXXS).mul(-1).div(2).equal(),marginInlineEnd:t(e.marginXXS).div(2).equal()}}}}}}},se=e=>{const{componentCls:a,handleSize:l,calc:n}=e;return{[a]:{[`${a}-loading-icon${e.iconCls}`]:{position:"relative",top:n(n(l).sub(e.fontSize)).div(2).equal(),color:e.switchLoadingIconColor,verticalAlign:"top"},[`&${a}-checked ${a}-loading-icon`]:{color:e.switchColor}}}},ce=e=>{const{componentCls:a,trackPadding:l,handleBg:n,handleShadow:d,handleSize:o,calc:s}=e,i=`${a}-handle`;return{[a]:{[i]:{position:"absolute",top:l,insetInlineStart:l,width:o,height:o,transition:`all ${e.switchDuration} ease-in-out`,"&::before":{position:"absolute",top:0,insetInlineEnd:0,bottom:0,insetInlineStart:0,backgroundColor:n,borderRadius:s(o).div(2).equal(),boxShadow:d,transition:`all ${e.switchDuration} ease-in-out`,content:'""'}},[`&${a}-checked ${i}`]:{insetInlineStart:`calc(100% - ${g(s(o).add(l).equal())})`},[`&:not(${a}-disabled):active`]:{[`${i}::before`]:{insetInlineEnd:e.switchHandleActiveInset,insetInlineStart:0},[`&${a}-checked ${i}::before`]:{insetInlineEnd:0,insetInlineStart:e.switchHandleActiveInset}}}}},ue=e=>{const{componentCls:a,trackHeight:l,trackPadding:n,innerMinMargin:d,innerMaxMargin:o,handleSize:s,calc:i}=e,t=`${a}-inner`,r=g(i(s).add(i(n).mul(2)).equal()),u=g(i(o).mul(2).equal());return{[a]:{[t]:{display:"block",overflow:"hidden",borderRadius:100,height:"100%",paddingInlineStart:o,paddingInlineEnd:d,transition:`padding-inline-start ${e.switchDuration} ease-in-out, padding-inline-end ${e.switchDuration} ease-in-out`,[`${t}-checked, ${t}-unchecked`]:{display:"block",color:e.colorTextLightSolid,fontSize:e.fontSizeSM,transition:`margin-inline-start ${e.switchDuration} ease-in-out, margin-inline-end ${e.switchDuration} ease-in-out`,pointerEvents:"none",minHeight:l},[`${t}-checked`]:{marginInlineStart:`calc(-100% + ${r} - ${u})`,marginInlineEnd:`calc(100% - ${r} + ${u})`},[`${t}-unchecked`]:{marginTop:i(l).mul(-1).equal(),marginInlineStart:0,marginInlineEnd:0}},[`&${a}-checked ${t}`]:{paddingInlineStart:d,paddingInlineEnd:o,[`${t}-checked`]:{marginInlineStart:0,marginInlineEnd:0},[`${t}-unchecked`]:{marginInlineStart:`calc(100% - ${r} + ${u})`,marginInlineEnd:`calc(-100% + ${r} - ${u})`}},[`&:not(${a}-disabled):active`]:{[`&:not(${a}-checked) ${t}`]:{[`${t}-unchecked`]:{marginInlineStart:i(n).mul(2).equal(),marginInlineEnd:i(n).mul(-1).mul(2).equal()}},[`&${a}-checked ${t}`]:{[`${t}-checked`]:{marginInlineStart:i(n).mul(-1).mul(2).equal(),marginInlineEnd:i(n).mul(2).equal()}}}}}},he=e=>{const{componentCls:a,trackHeight:l,trackMinWidth:n}=e;return{[a]:Object.assign(Object.assign(Object.assign(Object.assign({},U(e)),{position:"relative",display:"inline-block",boxSizing:"border-box",minWidth:n,height:l,lineHeight:g(l),verticalAlign:"middle",background:e.colorTextQuaternary,border:"0",borderRadius:100,cursor:"pointer",transition:`all ${e.motionDurationMid}`,userSelect:"none",[`&:hover:not(${a}-disabled)`]:{background:e.colorTextTertiary}}),Y(e)),{[`&${a}-checked`]:{background:e.switchColor,[`&:hover:not(${a}-disabled)`]:{background:e.colorPrimaryHover}},[`&${a}-loading, &${a}-disabled`]:{cursor:"not-allowed",opacity:e.switchDisabledOpacity,"*":{boxShadow:"none",cursor:"not-allowed"}},[`&${a}-rtl`]:{direction:"rtl"}})}},me=e=>{const{fontSize:a,lineHeight:l,controlHeight:n,colorWhite:d}=e,o=a*l,s=n/2,i=2,t=o-i*2,r=s-i*2;return{trackHeight:o,trackHeightSM:s,trackMinWidth:t*2+i*4,trackMinWidthSM:r*2+i*2,trackPadding:i,handleBg:d,handleSize:t,handleSizeSM:r,handleShadow:`0 2px 4px 0 ${new de("#00230b").setA(.2).toRgbString()}`,innerMinMargin:t/2,innerMaxMargin:t+i+i*2,innerMinMarginSM:r/2,innerMaxMarginSM:r+i+i*2}},fe=J("Switch",e=>{const a=Q(e,{switchDuration:e.motionDurationMid,switchColor:e.colorPrimary,switchDisabledOpacity:e.opacityLoading,switchLoadingIconSize:e.calc(e.fontSizeIcon).mul(.75).equal(),switchLoadingIconColor:`rgba(0, 0, 0, ${e.opacityLoading})`,switchHandleActiveInset:"-30%"});return[he(a),ue(a),ce(a),se(a),oe(a)]},me);var pe=function(e,a){var l={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&a.indexOf(n)<0&&(l[n]=e[n]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var d=0,n=Object.getOwnPropertySymbols(e);d<n.length;d++)a.indexOf(n[d])<0&&Object.prototype.propertyIsEnumerable.call(e,n[d])&&(l[n[d]]=e[n[d]]);return l};const ge=c.forwardRef((e,a)=>{const{prefixCls:l,size:n,disabled:d,loading:o,className:s,rootClassName:i,style:t,checked:r,value:u,defaultChecked:m,defaultValue:w,onChange:S}=e,C=pe(e,["prefixCls","size","disabled","loading","className","rootClassName","style","checked","value","defaultChecked","defaultValue","onChange"]),[$,k]=z(!1,{value:r??u,defaultValue:m??w}),{getPrefixCls:q,direction:y,switch:p}=c.useContext(Z),F=c.useContext(ee),I=(d??F)||o,f=q("switch",l),D=c.createElement("div",{className:`${f}-handle`},o&&c.createElement(te,{className:`${f}-loading-icon`})),[h,v,b]=fe(f),W=ae(n),j=_(p==null?void 0:p.className,{[`${f}-small`]:W==="small",[`${f}-loading`]:o,[`${f}-rtl`]:y==="rtl"},s,i,v,b),X=Object.assign(Object.assign({},p==null?void 0:p.style),t),A=function(){k(arguments.length<=0?void 0:arguments[0]),S==null||S.apply(void 0,arguments)};return h(c.createElement(ne,{component:"Switch"},c.createElement(T,Object.assign({},C,{checked:$,onChange:A,prefixCls:f,className:j,style:X,disabled:I,ref:a,loadingIcon:D}))))}),L=ge;L.__ANT_SWITCH=!0;const M=({field:e})=>{c.useSyncExternalStore(e.subscribe.bind(e),e.getSnapshot.bind(e));const a=e.getProps(),l=e.getValue(),n=c.useCallback(s=>{e.isReady()&&(e.setValue(s||!1),e.setDirty(!0),e.setTouched(!0))},[e]);c.useEffect(()=>{e.setReady(!0)},[e]);const o={...{width:e.getWidth()},...a.style};return N.jsx(L,{className:a.className,autoFocus:a.autoFocus,checked:l,checkedChildren:a.checkedChildren,disabled:e.isDisabled()||e.isReadOnly(),loading:a.loading,onChange:n,unCheckedChildren:a.unCheckedChildren,style:o})};try{M.displayName="SwitchFieldRender",M.__docgenInfo={description:"",displayName:"SwitchFieldRender",props:{field:{defaultValue:null,description:"",name:"field",required:!0,type:{name:"SwitchField"}}}}}catch{}class Se extends B{noGrowWidth(){return!0}render(){return N.jsx(M,{field:this})}}const E=e=>N.jsx(K,{buttons:null,fieldsProps:{field1:{...e,component:Se}}});try{E.displayName="SwitchComponent",E.__docgenInfo={description:"DForm Switch field",displayName:"SwitchComponent",props:{checkedChildren:{defaultValue:null,description:"The content to be shown when the state is checked",name:"checkedChildren",required:!1,type:{name:"ReactNode"}},unCheckedChildren:{defaultValue:null,description:"The content to be shown when the state is unchecked",name:"unCheckedChildren",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:null,description:"Loading state of switch",name:"loading",required:!1,type:{name:"boolean"}},component:{defaultValue:null,description:"Field React component",name:"component",required:!0,type:{name:"new (fieldName: string, fieldProps: any, model: DModel, parent?: IBaseField | undefined) => SwitchField"}},helpClass:{defaultValue:null,description:"Help class",name:"helpClass",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Field label",name:"label",required:!1,type:{name:"ReactNode"}},itemClassName:{defaultValue:null,description:"Field item class name (unlike className, this is the name of the class of the field item container)",name:"itemClassName",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Field class name (directly the field itself, not the container)",name:"className",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Field placeholder",name:"placeholder",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Field default value",name:"defaultValue",required:!1,type:{name:"boolean"}},hidden:{defaultValue:null,description:"Whether the field default state is hidden",name:"hidden",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the field default state is disabled",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Whether the field default state is readonly",name:"readOnly",required:!1,type:{name:"boolean"}},nonEditable:{defaultValue:null,description:"Whether the field can not be edited (the field will have readOnly or disabled state if formMode is 'update')",name:"nonEditable",required:!1,type:{name:'boolean | "readOnly" | "disabled"'}},dependsOn:{defaultValue:null,description:"List of fields that must be filled in order to display this field",name:"dependsOn",required:!1,type:{name:"string[]"}},width:{defaultValue:null,description:"Field width",name:"width",required:!1,type:{name:"string | number"}},autoHeightResize:{defaultValue:null,description:"Field container height auto resize",name:"autoHeightResize",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Get focus by default",name:"autoFocus",required:!1,type:{name:"boolean"}},requiredMark:{defaultValue:null,description:"Mark Field Label as Required",name:"requiredMark",required:!1,type:{name:"boolean"}},tooltip:{defaultValue:null,description:"Config tooltip info",name:"tooltip",required:!1,type:{name:"LabelTooltipType"}},style:{defaultValue:null,description:"Field CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},rowStyle:{defaultValue:null,description:"Row field container CSS style",name:"rowStyle",required:!1,type:{name:"CSSProperties"}},rules:{defaultValue:null,description:"Field validation rules",name:"rules",required:!1,type:{name:"IRuleType[]"}},onValueChanged:{defaultValue:null,description:"fires when the value of a field changed",name:"onValueChanged",required:!1,type:{name:"((value: boolean, prevValue: boolean, field: SwitchField) => void)"}},onTouchedStateChanged:{defaultValue:null,description:"fires when the touched state of a field changed",name:"onTouchedStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onDirtyStateChanged:{defaultValue:null,description:"fires when the dirty state of a field changed",name:"onDirtyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onErrorChanged:{defaultValue:null,description:"fires when the error of a field changed",name:"onErrorChanged",required:!1,type:{name:"((error: string, field: SwitchField) => void)"}},onHiddenStateChanged:{defaultValue:null,description:"fires when the hidden state of a field changed",name:"onHiddenStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadOnlyStateChanged:{defaultValue:null,description:"fires when read only state of a field changed",name:"onReadOnlyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onLabelChanged:{defaultValue:null,description:"fires when label of a field changed",name:"onLabelChanged",required:!1,type:{name:"((label: ReactNode, prevLabel: ReactNode, field: SwitchField) => void)"}},onDisabledStateChanged:{defaultValue:null,description:"fires when the disable state of a field changes",name:"onDisabledStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadyStateChanged:{defaultValue:null,description:"fires when a field is completely initialized, its data is loaded",name:"onReadyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onValidated:{defaultValue:null,description:"fires when a field validated",name:"onValidated",required:!1,type:{name:"((value: boolean, error: string, isSubmit: boolean, field: SwitchField) => void)"}},onFieldDataFetch:{defaultValue:null,description:"fires when the field trying to fetch data",name:"onFieldDataFetch",required:!1,type:{name:"((field: SwitchField) => IDFormDataSourcePromise)"}},onFieldDataFetchSuccess:{defaultValue:null,description:"fires when the field fetch success",name:"onFieldDataFetchSuccess",required:!1,type:{name:"((result: { data: Record<string, any>; }, field: SwitchField) => void)"}},onFieldDataFetchError:{defaultValue:null,description:"fires when the field fetch failed",name:"onFieldDataFetchError",required:!1,type:{name:"((error: IError, field: SwitchField) => void)"}}}}}catch{}try{switchComponent.displayName="switchComponent",switchComponent.__docgenInfo={description:"DForm Switch field",displayName:"switchComponent",props:{checkedChildren:{defaultValue:null,description:"The content to be shown when the state is checked",name:"checkedChildren",required:!1,type:{name:"ReactNode"}},unCheckedChildren:{defaultValue:null,description:"The content to be shown when the state is unchecked",name:"unCheckedChildren",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:null,description:"Loading state of switch",name:"loading",required:!1,type:{name:"boolean"}},component:{defaultValue:null,description:"Field React component",name:"component",required:!0,type:{name:"new (fieldName: string, fieldProps: any, model: DModel, parent?: IBaseField | undefined) => SwitchField"}},helpClass:{defaultValue:null,description:"Help class",name:"helpClass",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Field label",name:"label",required:!1,type:{name:"ReactNode"}},itemClassName:{defaultValue:null,description:"Field item class name (unlike className, this is the name of the class of the field item container)",name:"itemClassName",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Field class name (directly the field itself, not the container)",name:"className",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Field placeholder",name:"placeholder",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Field default value",name:"defaultValue",required:!1,type:{name:"boolean"}},hidden:{defaultValue:null,description:"Whether the field default state is hidden",name:"hidden",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the field default state is disabled",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Whether the field default state is readonly",name:"readOnly",required:!1,type:{name:"boolean"}},nonEditable:{defaultValue:null,description:"Whether the field can not be edited (the field will have readOnly or disabled state if formMode is 'update')",name:"nonEditable",required:!1,type:{name:'boolean | "readOnly" | "disabled"'}},dependsOn:{defaultValue:null,description:"List of fields that must be filled in order to display this field",name:"dependsOn",required:!1,type:{name:"string[]"}},width:{defaultValue:null,description:"Field width",name:"width",required:!1,type:{name:"string | number"}},autoHeightResize:{defaultValue:null,description:"Field container height auto resize",name:"autoHeightResize",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Get focus by default",name:"autoFocus",required:!1,type:{name:"boolean"}},requiredMark:{defaultValue:null,description:"Mark Field Label as Required",name:"requiredMark",required:!1,type:{name:"boolean"}},tooltip:{defaultValue:null,description:"Config tooltip info",name:"tooltip",required:!1,type:{name:"LabelTooltipType"}},style:{defaultValue:null,description:"Field CSS style",name:"style",required:!1,type:{name:"CSSProperties"}},rowStyle:{defaultValue:null,description:"Row field container CSS style",name:"rowStyle",required:!1,type:{name:"CSSProperties"}},rules:{defaultValue:null,description:"Field validation rules",name:"rules",required:!1,type:{name:"IRuleType[]"}},onValueChanged:{defaultValue:null,description:"fires when the value of a field changed",name:"onValueChanged",required:!1,type:{name:"((value: boolean, prevValue: boolean, field: SwitchField) => void)"}},onTouchedStateChanged:{defaultValue:null,description:"fires when the touched state of a field changed",name:"onTouchedStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onDirtyStateChanged:{defaultValue:null,description:"fires when the dirty state of a field changed",name:"onDirtyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onErrorChanged:{defaultValue:null,description:"fires when the error of a field changed",name:"onErrorChanged",required:!1,type:{name:"((error: string, field: SwitchField) => void)"}},onHiddenStateChanged:{defaultValue:null,description:"fires when the hidden state of a field changed",name:"onHiddenStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadOnlyStateChanged:{defaultValue:null,description:"fires when read only state of a field changed",name:"onReadOnlyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onLabelChanged:{defaultValue:null,description:"fires when label of a field changed",name:"onLabelChanged",required:!1,type:{name:"((label: ReactNode, prevLabel: ReactNode, field: SwitchField) => void)"}},onDisabledStateChanged:{defaultValue:null,description:"fires when the disable state of a field changes",name:"onDisabledStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onReadyStateChanged:{defaultValue:null,description:"fires when a field is completely initialized, its data is loaded",name:"onReadyStateChanged",required:!1,type:{name:"((state: boolean, field: SwitchField) => void)"}},onValidated:{defaultValue:null,description:"fires when a field validated",name:"onValidated",required:!1,type:{name:"((value: boolean, error: string, isSubmit: boolean, field: SwitchField) => void)"}},onFieldDataFetch:{defaultValue:null,description:"fires when the field trying to fetch data",name:"onFieldDataFetch",required:!1,type:{name:"((field: SwitchField) => IDFormDataSourcePromise)"}},onFieldDataFetchSuccess:{defaultValue:null,description:"fires when the field fetch success",name:"onFieldDataFetchSuccess",required:!1,type:{name:"((result: { data: Record<string, any>; }, field: SwitchField) => void)"}},onFieldDataFetchError:{defaultValue:null,description:"fires when the field fetch failed",name:"onFieldDataFetchError",required:!1,type:{name:"((error: IError, field: SwitchField) => void)"}}}}}catch{}const la={title:"DForm/Fields/Switch",component:E,tags:["autodocs"],parameters:{docs:{source:{language:"tsx",format:!0,code:`
                    import React from 'react';
                    import {DForm} from @krinopotam/ui-kit/dForm';
                    import {ISwitchFieldProps, SwitchField} from @krinopotam/ui-kit/dForm/fields/switch/switchField';
                    type IComponent = ISwitchFieldProps;
                    /** DForm Switch field */
                    export const SwitchComponent = (props: IComponent): React.JSX.Element => <DForm buttons={null} fieldsProps={{field1: {...props, component: SwitchField}}} />;
                    export default SwitchComponent;
                `}}}},V={args:{label:"Checkbox field"}};var O,P,H;V.parameters={...V.parameters,docs:{...(O=V.parameters)==null?void 0:O.docs,source:{originalSource:`{
  args: {
    label: 'Checkbox field'
  }
}`,...(H=(P=V.parameters)==null?void 0:P.docs)==null?void 0:H.source}}};const da=["Playground"];export{V as Playground,da as __namedExportsOrder,la as default};
