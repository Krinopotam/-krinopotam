const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CiDC3pM_.js","assets/default-highlight-DWmFXoWX.js","assets/index-CUcNIvkO.js"])))=>i.map(i=>d[i]);
import{W as a,r as l,j as e,D as b,_ as n}from"./index-CUcNIvkO.js";import{b as s}from"./buttonsRow-COSrEi_L.js";import{M as t}from"./modal-DICJlQV5.js";import{m as o}from"./messageBox-B7GILuWH.js";import{P as i,C as r}from"./pageLayout-DhfMlgTd.js";import{d as m,c}from"./darcula-BqMdvqtY.js";const d=()=>{const[b,n]=a.useState(!1),i=l.useCallback((()=>{n(!0)}),[]),r=l.useCallback((()=>{o.alert({content:"My message content example",colorType:"danger"})}),[]);return e.jsxs(e.Fragment,{children:[e.jsx("h1",{children:"Example of a simple modal"}),e.jsx("p",{children:"By default, a modal has the ability to drag it by its title and resize it"}),e.jsxs("div",{style:{maxWidth:500},children:[e.jsx(s,{onClick:i,children:"Open form"}),e.jsxs(t,{open:b,title:"My modal title example",maskClosable:!0,onCancel:()=>n(!1),style:{minHeight:200,minWidth:300},children:[e.jsx("p",{children:"Bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla "}),e.jsx("p",{children:"Bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla "})]}),e.jsx(s,{onClick:r,children:"Open Message"})]})]})},p=l.lazy((()=>n((()=>import("./index-CiDC3pM_.js").then((a=>a.dw))),__vite__mapDeps([0,1,2])).then((a=>({default:a.Prism}))))),x=a=>e.jsxs(i,{children:[e.jsx(d,{}),e.jsx(b,{}),e.jsx("div",{children:e.jsx(r,{items:[{key:1,label:"Show source",children:e.jsx(l.Suspense,{fallback:e.jsx("div",{children:"Loading source..."}),children:e.jsx(p,{language:"tsx",style:a.darkMode?m:c,showLineNumbers:!0,children:"\nimport React, {useCallback} from 'react';\nimport {Button} from @krinopotam/ui-kit/button';\nimport {Modal} from @krinopotam/ui-kit/modal\";\nimport {MessageBox} from @krinopotam/ui-kit/messageBox\";\nexport const Simple = (): React.JSX.Element => {\n    const [open, setOpen] = React.useState(false);\n    const onClick = useCallback(() => {\n        setOpen(true)\n    }, []);\n    const onMessageClick = useCallback(() => {\n        MessageBox.alert({content: 'My message content example', colorType: 'danger'});\n    }, [])\n    return (\n        <>\n            <div style={{maxWidth: 500}}>\n                <Button onClick={onClick}>Open form</Button>\n                <Modal open={open} title={'My modal title example'} maskClosable onCancel={() => setOpen(false)} style={{minHeight: 200, minWidth: 300}}>\n                    <p>Bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla </p>\n                    <p>Bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla bla </p>\n                </Modal>\n                <Button onClick={onMessageClick}>Open Message</Button>\n            </div>\n        </>\n    );\n};\n"})})}]})})]});export{x as Pagef49abf81a33548ef8a2e621672a69872,x as default};
