const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-DfeqwvF1.js","assets/default-highlight-DCdxgBnZ.js","assets/index-BB72a6eU.js"])))=>i.map(i=>d[i]);
import{W as e,j as n,S as l,a as i,D as o,r as t,_ as d}from"./index-BB72a6eU.js";import{D as r}from"./isArray-BKTI4CpV.js";import{I as a}from"./inputField-B1hfPwz1.js";import{T as s}from"./tabsField-BEFcqkE_.js";import{I as p}from"./inlineGroupField-CtnJnSbI.js";import{P as m,C as F}from"./pageLayout-DKLvBL1I.js";import{d as b,c}from"./darcula-BqMdvqtY.js";import"./buttonsRow-BoYDsAWL.js";import"./messageBox-6Y5BIsMu.js";import"./index-Dz5OhjVD.js";import"./baseField-BdnhLPgH.js";import"./index-ByzpD6LE.js";import"./SearchOutlined-xF1ruEFb.js";import"./index-Cgtugp7z.js";import"./PlusOutlined-D7AMjYhZ.js";const f=()=>{const[o,t]=e.useState(!1),d=u(o);return n.jsxs("div",{children:[n.jsx("h1",{children:"Example of a form with nested tabs"}),n.jsxs("div",{style:{maxWidth:500},children:[n.jsx(l,{style:{marginBottom:30},children:n.jsx(i,{checkedChildren:"Horizontal",unCheckedChildren:"Vertical",onChange:()=>t((e=>!e))})}),n.jsx(r,{...d})]})]})},_={},u=e=>({apiRef:_,formId:"Test form",layout:e?"horizontal":"vertical",confirmChanges:!0,fieldsProps:{field1:{component:a,label:"Field1",rules:[{type:"string",rule:"not-empty",message:"Поле не должно быть пустым"}]},field1a:{component:a,label:"Field1a",dependsOn:["field1"]},field1b:{component:a,label:"Field1b",dependsOn:["field1a"]},field2:{component:s,label:"Field2",tabs:{"Tab 1":{row1:{component:p,fieldsProps:{field2_1_1:{component:a,label:"Field3",showCount:!0},field2_1_2:{component:a,label:"Field4"}}}},"Tab 2":{field2_2_1:{component:a,label:"Field5",showCount:!0},field2_2_2:{component:s,label:"Field6",tabs:{"Tab 2_1":{field2_2_1_1:{component:a,label:"Field3",showCount:!0},field2_2_1_2:{component:a,label:"Field4"}},"Tab 2_2":{field2_2_2_1:{component:a,label:"Field5",showCount:!0},field2_2_2_2:{component:a,label:"Field6"}}}}},"Tab 3":{field3_2_1:{component:a,label:"Field5",showCount:!0},field3_2_2:{component:s,label:"Field6",tabs:{"Tab 3_1":{field3_2_1_1:{component:a,label:"Field3",showCount:!0},field3_2_1_2:{component:a,label:"Field4"}},"Tab 3_2":{field3_2_2_1:{component:a,label:"Field5",showCount:!0},field3_2_2_2:{component:a,label:"Field6"}}}}}}}},buttons:{ok:{position:"right"},rerenderTabField:{position:"left",title:"Rerender Tabs field",onClick:()=>{_.model.getField("field2").emitRender()}},rerenderTab1:{position:"left",title:"Rerender Tab 1 content",onClick:()=>{_.model.getField("field2").emitTabRender("Tab 1")}},rerenderForm:{position:"left",title:"Rerender Form",onClick:()=>{_.model.emitFormRender()}}}}),h=t.lazy((()=>d((()=>import("./index-DfeqwvF1.js").then((e=>e.dw))),__vite__mapDeps([0,1,2])).then((e=>({default:e.Prism}))))),T=e=>n.jsxs(m,{children:[n.jsx(f,{}),n.jsx(o,{}),n.jsx("div",{children:n.jsx(F,{items:[{key:1,label:"Show source",children:n.jsx(t.Suspense,{fallback:n.jsx("div",{children:"Loading source..."}),children:n.jsx(h,{language:"tsx",style:e.darkMode?b:c,showLineNumbers:!0,children:"\nimport React from 'react';\nimport {DForm, IDFormApi, IDFormProps} from @krinopotam/ui-kit/dForm';\nimport {InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField';\nimport {TabsField} from @krinopotam/ui-kit/dForm/fields/tabs/tabsField';\nimport {Space, Switch} from 'antd';\nimport {IInlineGroupFieldProps, InlineGroupField} from @krinopotam/ui-kit/dForm/fields/inlineGroup\";\nexport const Example = (): React.JSX.Element => {\n    const [horizontal, setHorizontal] = React.useState(false);\n    const formProps = useFormProps(horizontal);\n    return (\n        <div>\n            <div style={{maxWidth: 500}}>\n                <Space style={{marginBottom: 30}}>\n                    <Switch checkedChildren={'Horizontal'} unCheckedChildren={'Vertical'} onChange={() => setHorizontal(cur => !cur)} />\n                </Space>\n                <DForm {...formProps} />\n            </div>\n        </div>\n    );\n};\nconst api = {} as IDFormApi;\nconst useFormProps = (horizontal: boolean) => {\n    return {\n        apiRef: api,\n        formId: 'Test form',\n        layout: horizontal ? 'horizontal' : 'vertical',\n        confirmChanges: true,\n        fieldsProps: {\n            field1: {component: InputField, label: 'Field1', rules: [{type: 'string', rule: 'not-empty', message: 'Поле не должно быть пустым'}]},\n            field1a: {component: InputField, label: 'Field1a', dependsOn: ['field1']},\n            field1b: {component: InputField, label: 'Field1b', dependsOn: ['field1a']},\n            field2: {\n                component: TabsField,\n                label: 'Field2',\n                tabs: {\n                    'Tab 1': {\n                        row1: {\n                            component: InlineGroupField,\n                            fieldsProps: {\n                                field2_1_1: {component: InputField, label: 'Field3', showCount: true},\n                                field2_1_2: {component: InputField, label: 'Field4'},\n                            },\n                        } satisfies IInlineGroupFieldProps,\n                    },\n                    'Tab 2': {\n                        field2_2_1: {component: InputField, label: 'Field5', showCount: true},\n                        field2_2_2: {\n                            component: TabsField,\n                            label: 'Field6',\n                            tabs: {\n                                'Tab 2_1': {\n                                    field2_2_1_1: {component: InputField, label: 'Field3', showCount: true},\n                                    field2_2_1_2: {component: InputField, label: 'Field4'},\n                                },\n                                'Tab 2_2': {\n                                    field2_2_2_1: {component: InputField, label: 'Field5', showCount: true},\n                                    field2_2_2_2: {component: InputField, label: 'Field6'},\n                                },\n                            },\n                        },\n                        //field2_2_3: {component: InputField, label: 'Field4'},\n                    },\n                    'Tab 3': {\n                        field3_2_1: {component: InputField, label: 'Field5', showCount: true},\n                        field3_2_2: {\n                            component: TabsField,\n                            label: 'Field6',\n                            tabs: {\n                                'Tab 3_1': {\n                                    field3_2_1_1: {component: InputField, label: 'Field3', showCount: true},\n                                    field3_2_1_2: {component: InputField, label: 'Field4'},\n                                },\n                                'Tab 3_2': {\n                                    field3_2_2_1: {component: InputField, label: 'Field5', showCount: true},\n                                    field3_2_2_2: {component: InputField, label: 'Field6'},\n                                },\n                            },\n                        },\n                        //field2_2_3: {component: InputField, label: 'Field4'},\n                    },\n                },\n            },\n        },\n        buttons: {\n            ok: {position: 'right'},\n            rerenderTabField: {\n                position: 'left',\n                title: 'Rerender Tabs field',\n                onClick: () => {\n                    const tabField = api.model.getField('field2') as TabsField;\n                    tabField.emitRender();\n                },\n            },\n            rerenderTab1: {\n                position: 'left',\n                title: 'Rerender Tab 1 content',\n                onClick: () => {\n                    const tabField = api.model.getField('field2') as TabsField;\n                    tabField.emitTabRender('Tab 1');\n                },\n            },\n            rerenderForm: {\n                position: 'left',\n                title: 'Rerender Form',\n                onClick: () => {\n                    api.model.emitFormRender();\n                },\n            },\n        },\n    } satisfies IDFormProps;\n};\n"})})}]})})]});export{T as Pagefbd1956cbb0c4f1aa0d987d9bf576d18,T as default};
