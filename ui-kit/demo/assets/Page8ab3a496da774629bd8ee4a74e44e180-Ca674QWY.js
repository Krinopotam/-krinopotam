const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-jpo5857y.js","assets/default-highlight-BMZEMs9f.js","assets/index-D91CPeas.js"])))=>i.map(i=>d[i]);
import{j as e,D as o,r as t,_ as r}from"./index-D91CPeas.js";import{T as a}from"./tabulatorGrid-CUKsGPqY.js";import{T as i}from"./treeSelectField-e5V-rkwZ.js";import{I as n}from"./inputField-De3tneM5.js";import{N as l}from"./numberField-Dk6Z2ntc.js";import{f as m,T as s,a as d}from"./tabulatorData-DixKHn5D.js";import{P as p,C as u}from"./pageLayout--M9g9ylJ.js";import{d as c,c as f}from"./darcula-BqMdvqtY.js";import"./buttonsRow-GmLsAxIS.js";import"./isArray-kfOH8zvo.js";import"./messageBox-qO1-pidw.js";import"./index-CqQxpQkp.js";import"./dFormModal-B1f3hIKb.js";import"./modal-DnvV1nEz.js";import"./defaultButtonsProps-DmlRWoi3.js";import"./PlusOutlined-DvQ8YCBW.js";import"./index-HMNpXYKt.js";import"./baseField-Ck1FIJOr.js";import"./useApiGetGroupsOnly-6avmOuwT.js";import"./index-bb5u7Vb0.js";import"./useShowArrow-DfiETnwc.js";import"./useIcons-CuGhJ3PN.js";import"./SearchOutlined-Bqgbt2-E.js";import"./index-Cs3oLKRx.js";const b={id:"TabulatorGridTreeWithForm",columnDefaults:d,columns:s,dataSet:m,dataTree:!0,height:500,layout:"fitColumns",editFormProps:{formId:"gridEditForm",fieldsProps:{parent:{component:i,label:"Родитель",dataSet:[...m],fieldNames:{title:"name"}},name:{component:n,label:"Name"},age:{component:l,label:"Age"},col:{component:n,label:"Favourite Color"},dob:{component:n,label:"Day of Birth"}},confirmChanges:!0},onDelete:()=>{},confirmDelete:!0,multiSelect:!0},j=()=>e.jsxs(e.Fragment,{children:[e.jsx("h1",{children:"Example of a hierarchical Tabulator grid with a form"}),e.jsx(a,{...b})]}),F=t.lazy((()=>r((()=>import("./index-jpo5857y.js").then((e=>e.dw))),__vite__mapDeps([0,1,2])).then((e=>({default:e.Prism}))))),h=r=>e.jsxs(p,{children:[e.jsx(j,{}),e.jsx(o,{}),e.jsx("div",{children:e.jsx(u,{items:[{key:1,label:"Show source",children:e.jsx(t.Suspense,{fallback:e.jsx("div",{children:"Loading source..."}),children:e.jsx(F,{language:"tsx",style:r.darkMode?c:f,showLineNumbers:!0,children:"\nimport React from 'react';\nimport {IGridProps, TabulatorGrid} from @krinopotam/ui-kit/tabulatorGrid';\nimport {IDFormModalProps} from @krinopotam/ui-kit/dFormModal';\nimport {TreeSelectField} from @krinopotam/ui-kit/dForm/fields/treeSelect/treeSelectField';\nimport {InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField';\nimport {NumberField} from @krinopotam/ui-kit/dForm/fields/number/numberField';\nimport {TabulatorBaseColumns, TabulatorBaseColumnsDef, TabulatorTreeData} from '../../data/tabulatorData';\nconst treeSelectDataSet = [...TabulatorTreeData];\nconst editFormConfig: IDFormModalProps = {\n    formId: 'gridEditForm',\n    fieldsProps: {\n        parent: {component: TreeSelectField, label: 'Родитель', dataSet: treeSelectDataSet, fieldNames: {title: 'name'}},\n        name: {component: InputField, label: 'Name'},\n        age: {component: NumberField, label: 'Age'},\n        col: {component: InputField, label: 'Favourite Color'},\n        dob: {component: InputField, label: 'Day of Birth'},\n    },\n    confirmChanges: true,\n};\nconst props: IGridProps = {\n    id: 'TabulatorGridTreeWithForm',\n    columnDefaults: TabulatorBaseColumnsDef,\n    columns: TabulatorBaseColumns,\n    dataSet: TabulatorTreeData,\n    dataTree: true,\n    height: 500,\n    layout: 'fitColumns',\n    editFormProps: editFormConfig,\n    onDelete: () => {},\n    confirmDelete: true,\n    multiSelect: true,\n};\nexport const TreeWithForm = (): React.JSX.Element => {\n    return (\n        <>\n            <TabulatorGrid {...props} />\n        </>\n    );\n};\n"})})}]})})]});export{h as Page8ab3a496da774629bd8ee4a74e44e180,h as default};
