const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-s3JYYcml.js","assets/default-highlight-CgZf-mKA.js","assets/index-BifVs3yP.js"])))=>i.map(i=>d[i]);
import{j as e,D as t,r as i,_ as n}from"./index-BifVs3yP.js";import{D as d}from"./isArray-DZpirPjN.js";import{T as l}from"./treeSelectField-D3MWssfy.js";import{P as r,C as o}from"./pageLayout-CQ75ho6N.js";import{d as s,c as a}from"./darcula-BqMdvqtY.js";import"./buttonsRow-B_xoywMk.js";import"./messageBox-2IfVYj0o.js";import"./index-CWHT4hGv.js";import"./baseField-BOZdNZcm.js";import"./dFormModal-_hZTfvWc.js";import"./modal-CZTSSsuL.js";import"./defaultButtonsProps-De9HXyKM.js";import"./PlusOutlined-CQ-Ipige.js";import"./useApiGetGroupsOnly-CQWS2_z-.js";import"./index-CTMli26P.js";import"./useShowArrow-DvkZZZK_.js";import"./useIcons-a6tgTMJf.js";import"./SearchOutlined-8SOsLCzA.js";const m=[{id:"01",title:"Департамент аналитики данных"},{id:"02",title:"Департамент инженерных работ"},{id:"03",title:"Департамент проектных работ"}],c=[{id:"01-01",title:"Управление аналитики продаж",children:[{id:"01-01-01",title:"Отдел прода север"},{id:"01-01-02",title:"Отдел прода юг"},{id:"01-01-03",title:"Отдел прода запад"}]},{id:"01-02",title:"Управление аналитики закупок",children:[{id:"01-02-01",title:"Отдел закупок север"},{id:"01-02-02",title:"Отдел закупок юг"},{id:"01-02-03",title:"Отдел закупок запад"}]},{id:"01-03",title:"Управление аналитики производства",children:[{id:"01-03-01",title:"Отдел производства север"},{id:"01-03-02",title:"Отдел производства юг"},{id:"01-03-03",title:"Отдел производства запад"}]}],p=[{id:"02-01",title:"Управление строительства",children:[{id:"02-01-01",title:"Отдел строительства север"},{id:"02-01-02",title:"Отдел строительства юг"},{id:"02-01-03",title:"Отдел строительства запад"}]},{id:"02-02",title:"Управление демонтажа",children:[{id:"02-02-01",title:"Отдел демонтажа север"},{id:"02-02-02",title:"Отдел демонтажа юг"},{id:"02-02-03",title:"Отдел демонтажа запад"}]},{id:"02-03",title:"Управление реконструкции",children:[{id:"02-03-01",title:"Отдел реконструкции север"},{id:"02-03-02",title:"Отдел реконструкции юг"},{id:"02-03-03",title:"Отдел реконструкции запад"}]}],u=[{id:"03-01",title:"Управление проектирования",children:[{id:"03-01-01",title:"Отдел проектирования север"},{id:"03-01-02",title:"Отдел проектирования юг"},{id:"03-01-03",title:"Отдел проектирования запад"}]},{id:"03-02",title:"Управление согласования",children:[{id:"03-02-01",title:"Отдел согласования север"},{id:"03-02-02",title:"Отдел согласования юг"},{id:"03-02-03",title:"Отдел согласования запад"}]},{id:"03-03",title:"Управление анализа проектов",children:[{id:"03-03-01",title:"Отдел анализа север"},{id:"03-03-02",title:"Отдел анализа юг"},{id:"03-03-03",title:"Отдел анализа запад"}]}],h={},f={formId:"Test form",apiRef:h,confirmChanges:!0,fieldsProps:{department:{component:l,label:"Департамент",valueType:"key",fetchMode:"onUse",onDataFetch:()=>new Promise(((e,t)=>{setTimeout((()=>{Math.random()<0?t({message:"Ошибка загрузки данных",code:400}):e({data:m})}),2e3)})),onValueChanged:(e,t,i)=>{i.getModel().getField("division").setValue(null)}},division:{component:l,label:"Управления",fetchMode:"onUse",dependsOn:["department"],valueType:"key",noCacheFetchedData:!0,onDataFetch:()=>new Promise((e=>{setTimeout((()=>{const t=h.model.getField("department").getValue();let i;i=t?"01"===t?c:"02"===t?p:"03"===t?u:[]:[],e({data:i})}),2e3)}))}},buttons:null},j=()=>e.jsxs(e.Fragment,{children:[e.jsx("h1",{children:"Пример отображения зависимых асинхронных TreeSelect"}),e.jsx("p",{children:"Пока не выбран департамент, поле Управление скрыто. При изменении департамента изменяются параметры запроса списка управлений."}),e.jsx("div",{style:{maxWidth:500},children:e.jsx(d,{...f})})]}),F=i.lazy((()=>n((()=>import("./index-s3JYYcml.js").then((e=>e.dw))),__vite__mapDeps([0,1,2])).then((e=>({default:e.Prism}))))),v=n=>e.jsxs(r,{children:[e.jsx(j,{}),e.jsx(t,{}),e.jsx("div",{children:e.jsx(o,{items:[{key:1,label:"Show source",children:e.jsx(i.Suspense,{fallback:e.jsx("div",{children:"Loading source..."}),children:e.jsx(F,{language:"tsx",style:n.darkMode?s:a,showLineNumbers:!0,children:"\nimport React from 'react';\nimport {DForm, IDFormProps} from @krinopotam/ui-kit/dForm';\nimport {IDFormModalApi} from @krinopotam/ui-kit/dFormModal';\nimport {ITreeSelectFieldProps, TreeSelectField} from @krinopotam/ui-kit/dForm/fields/treeSelect/treeSelectField';\nconst departments = [\n    {\n        id: '01',\n        title: 'Департамент аналитики данных',\n    },\n    {\n        id: '02',\n        title: 'Департамент инженерных работ',\n    },\n    {\n        id: '03',\n        title: 'Департамент проектных работ',\n    },\n];\nconst divisions1 = [\n    {\n        id: '01-01',\n        title: 'Управление аналитики продаж',\n        children: [\n            {id: '01-01-01', title: 'Отдел прода север'},\n            {id: '01-01-02', title: 'Отдел прода юг'},\n            {id: '01-01-03', title: 'Отдел прода запад'},\n        ],\n    },\n    {\n        id: '01-02',\n        title: 'Управление аналитики закупок',\n        children: [\n            {id: '01-02-01', title: 'Отдел закупок север'},\n            {id: '01-02-02', title: 'Отдел закупок юг'},\n            {id: '01-02-03', title: 'Отдел закупок запад'},\n        ],\n    },\n    {\n        id: '01-03',\n        title: 'Управление аналитики производства',\n        children: [\n            {id: '01-03-01', title: 'Отдел производства север'},\n            {id: '01-03-02', title: 'Отдел производства юг'},\n            {id: '01-03-03', title: 'Отдел производства запад'},\n        ],\n    },\n];\nconst divisions2 = [\n    {\n        id: '02-01',\n        title: 'Управление строительства',\n        children: [\n            {id: '02-01-01', title: 'Отдел строительства север'},\n            {id: '02-01-02', title: 'Отдел строительства юг'},\n            {id: '02-01-03', title: 'Отдел строительства запад'},\n        ],\n    },\n    {\n        id: '02-02',\n        title: 'Управление демонтажа',\n        children: [\n            {id: '02-02-01', title: 'Отдел демонтажа север'},\n            {id: '02-02-02', title: 'Отдел демонтажа юг'},\n            {id: '02-02-03', title: 'Отдел демонтажа запад'},\n        ],\n    },\n    {\n        id: '02-03',\n        title: 'Управление реконструкции',\n        children: [\n            {id: '02-03-01', title: 'Отдел реконструкции север'},\n            {id: '02-03-02', title: 'Отдел реконструкции юг'},\n            {id: '02-03-03', title: 'Отдел реконструкции запад'},\n        ],\n    },\n];\nconst divisions3 = [\n    {\n        id: '03-01',\n        title: 'Управление проектирования',\n        children: [\n            {id: '03-01-01', title: 'Отдел проектирования север'},\n            {id: '03-01-02', title: 'Отдел проектирования юг'},\n            {id: '03-01-03', title: 'Отдел проектирования запад'},\n        ],\n    },\n    {\n        id: '03-02',\n        title: 'Управление согласования',\n        children: [\n            {id: '03-02-01', title: 'Отдел согласования север'},\n            {id: '03-02-02', title: 'Отдел согласования юг'},\n            {id: '03-02-03', title: 'Отдел согласования запад'},\n        ],\n    },\n    {\n        id: '03-03',\n        title: 'Управление анализа проектов',\n        children: [\n            {id: '03-03-01', title: 'Отдел анализа север'},\n            {id: '03-03-02', title: 'Отдел анализа юг'},\n            {id: '03-03-03', title: 'Отдел анализа запад'},\n        ],\n    },\n];\nconst formApi = {} as IDFormModalApi;\nconst formProps: IDFormProps = {\n    formId: 'Test form',\n    apiRef: formApi,\n    confirmChanges: true,\n    fieldsProps: {\n        department: {\n            component: TreeSelectField,\n            label: 'Департамент',\n            valueType: 'key',\n            fetchMode: 'onUse',\n            onDataFetch: () => {\n                return new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        if (Math.random() < 0.0) reject({message: 'Ошибка загрузки данных', code: 400});\n                        else resolve({data: departments});\n                    }, 2000);\n                });\n            },\n            onValueChanged: (value, prevValue, field) => {\n                const division = field.getModel().getField('division');\n                division.setValue(null);\n            },\n        } as ITreeSelectFieldProps,\n        division: {\n            component: TreeSelectField,\n            label: 'Управления',\n            fetchMode: 'onUse',\n            dependsOn: ['department'],\n            valueType: 'key',\n            noCacheFetchedData: true,\n            onDataFetch: () => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        const departmentValue = formApi.model.getField('department').getValue(); //we can get the current department value and use it for server request\n                        /** the server request imitation */\n                        let newDataSet: ITreeSelectFieldProps['dataSet'];\n                        if (!departmentValue) newDataSet = [];\n                        else if (departmentValue === '01') newDataSet = divisions1;\n                        else if (departmentValue === '02') newDataSet = divisions2;\n                        else if (departmentValue === '03') newDataSet = divisions3;\n                        else newDataSet = [];\n                        resolve({data: newDataSet});\n                    }, 2000);\n                });\n            },\n        } satisfies ITreeSelectFieldProps,\n    },\n    buttons: null,\n};\nexport const TreeSelectDependedAsync = (): React.JSX.Element => {\n    return (\n        <>\n            <div style={{maxWidth: 500}}>\n                <DForm {...formProps} />\n            </div>\n        </>\n    );\n};\n"})})}]})})]});export{v as Page14ed4557801c41ebbb3f96de09671054,v as default};
