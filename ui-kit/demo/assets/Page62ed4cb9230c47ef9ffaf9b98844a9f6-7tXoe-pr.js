const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CbiszdOm.js","assets/default-highlight-BLlQl_mY.js","assets/index-CQvKQJ1H.js"])))=>i.map(i=>d[i]);
import{j as o,D as t,r as e,_ as a}from"./index-CQvKQJ1H.js";import{T as r}from"./tabulatorGrid-rpcXWry8.js";import{T as s,b as n,a as i}from"./tabulatorData-KptdBlpi.js";import{T as l}from"./tabulatorGridField-Bz_wpQ1O.js";import{P as m,C as d}from"./pageLayout-DBVmh18N.js";import{d as u,c}from"./darcula-BqMdvqtY.js";import"./buttonsRow-Tlbvi7M1.js";import"./isArray-1gBtd_za.js";import"./messageBox-DWQe614-.js";import"./index-RaL56j3R.js";import"./dFormModal-B_Bp8jqf.js";import"./modal-BjrYxL5m.js";import"./defaultButtonsProps-q6NScukI.js";import"./PlusOutlined-DcBjL4pm.js";import"./index-B1Vh7D-O.js";import"./baseField-gHIWNuTG.js";const p={id:"TabulatorGridWithForm",columnDefaults:i,columns:s,dataSet:n,multiSelect:!0,selectionFormProps:{title:"Please select",height:300,fieldsProps:{select:{component:l,columns:s,selectionMode:!0,autoHeightResize:!0,onDataFetch:()=>new Promise(((o,t)=>{setTimeout((()=>{Math.random()<.5?t({message:"Ошибка загрузки данных",code:400}):o({data:n})}),2e3)}))}}},confirmDelete:!0,height:"100%",layout:"fitColumns",onDataFetch:()=>{}},h=()=>o.jsxs(o.Fragment,{children:[o.jsx("h1",{children:"Пример простого грида Tabulator с асинхронной формой для выбора значений"}),o.jsx("div",{style:{backgroundColor:"bisque",padding:5,height:300},children:o.jsx(r,{...p})})]}),b=e.lazy((()=>a((()=>import("./index-CbiszdOm.js").then((o=>o.dw))),__vite__mapDeps([0,1,2])).then((o=>({default:o.Prism}))))),j=a=>o.jsxs(m,{children:[o.jsx(h,{}),o.jsx(t,{}),o.jsx("div",{children:o.jsx(d,{items:[{key:1,label:"Show source",children:o.jsx(e.Suspense,{fallback:o.jsx("div",{children:"Loading source..."}),children:o.jsx(b,{language:"tsx",style:a.darkMode?u:c,showLineNumbers:!0,children:"\nimport React from 'react';\nimport {IGridProps, TabulatorGrid} from @krinopotam/ui-kit/tabulatorGrid';\nimport {IDFormModalProps} from @krinopotam/ui-kit/dFormModal';\nimport {TabulatorBaseColumns, TabulatorBaseColumnsDef, TabulatorPlainData} from '../../../data/tabulatorData';\nimport {ITabulatorGridFieldProps, TabulatorGridField} from @krinopotam/ui-kit/dForm/fields/tabulatorGrid';\nconst selectionFormProps: IDFormModalProps = {\n    title: 'Please select',\n    height: 300,\n    fieldsProps: {\n        select: {\n            component: TabulatorGridField,\n            columns: TabulatorBaseColumns,\n            selectionMode: true,\n            autoHeightResize: true,\n            onDataFetch: () => {\n                return new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        const random = Math.random();\n                        if (random < 0.5) reject({message: 'Ошибка загрузки данных', code: 400});\n                        else resolve({data: TabulatorPlainData});\n                    }, 2000);\n                });\n            },\n        } satisfies ITabulatorGridFieldProps,\n    },\n};\nconst props: IGridProps = {\n    id: 'TabulatorGridWithForm',\n    columnDefaults: TabulatorBaseColumnsDef,\n    columns: TabulatorBaseColumns,\n    dataSet: TabulatorPlainData,\n    multiSelect: true,\n    selectionFormProps: selectionFormProps,\n    confirmDelete: true,\n    height: '100%',\n    layout: 'fitColumns',\n    onDataFetch: () => {return undefined}\n};\nexport const AsyncWithSelectionForm = (): React.JSX.Element => {\n    return (\n        <>\n            <div style={{backgroundColor: 'bisque', padding: 5, height: 300}}>\n                <TabulatorGrid {...props} />\n            </div>\n        </>\n    );\n};\n"})})}]})})]});export{j as Page62ed4cb9230c47ef9ffaf9b98844a9f6,j as default};
