const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-s3JYYcml.js","assets/default-highlight-CgZf-mKA.js","assets/index-BifVs3yP.js"])))=>i.map(i=>d[i]);
import{r as n,j as o,D as e,_ as t}from"./index-BifVs3yP.js";import{b as i}from"./buttonsRow-B_xoywMk.js";import{D as a}from"./dFormModal-_hZTfvWc.js";import{I as m}from"./inputField-CUebB51y.js";import{D as s}from"./dateTimeField-BBJNbajO.js";import{T as l}from"./tabsField-D3bxKXEA.js";import{F as r}from"./buttonsProps--ovsWTNw.js";import{I as p}from"./inlineGroupField-DScl-QCV.js";import{P as d,C as u}from"./pageLayout-CQ75ho6N.js";import{d as c,c as b}from"./darcula-BqMdvqtY.js";import"./isArray-DZpirPjN.js";import"./messageBox-2IfVYj0o.js";import"./index-CWHT4hGv.js";import"./modal-CZTSSsuL.js";import"./baseField-BOZdNZcm.js";import"./index-Bt_MkLQg.js";import"./SearchOutlined-8SOsLCzA.js";import"./useIcons-a6tgTMJf.js";import"./index-MUuFRUcz.js";import"./PlusOutlined-CQ-Ipige.js";const f={},F={formId:"Test form",apiRef:f,confirmChanges:!0,fieldsProps:{tabs1:{component:l,tabs:{" Входы1 ":{nameIn1:{component:m,label:"Имя входящего"},dateIn1:{component:s,label:"Дата входа"},subTab1:{component:l,tabs:{" Проходы ":{row1:{component:p,fieldsProps:{subNameIn1:{component:m,label:"Имя проходящего"},subDateIn1:{component:s,label:"Дата прохода",width:150}}}}," Уходы ":{row2:{component:p,fieldsProps:{subNameOut1:{component:m,label:"Имя уходящего"},subDateOut1:{component:s,label:"Дата ухода",width:150}}}}}}}," Выходы1 ":{nameOut1:{component:m,label:"Имя выходящего"},dateOut1:{component:s,label:"Дата выхода"}}}},tabs2:{component:l,tabs:{" Входы2 ":{nameIn2:{component:m,label:"Имя входящего"},dateIn2:{component:s,label:"Дата входа",width:150}}," Выходы2 ":{nameOut2:{component:m,label:"Имя выходящего"},dateOut2:{component:s,label:"Дата выхода",width:150}}}}},height:250,maxWidth:500,maxHeight:500,buttons:r(f)},I=()=>{const e=n.useCallback((()=>{f.open("create")}),[]);return o.jsxs("div",{style:{maxWidth:500},children:[o.jsx(i,{onClick:e,children:"Open form"}),o.jsx(a,{...F})]})},h=n.lazy((()=>t((()=>import("./index-s3JYYcml.js").then((n=>n.dw))),__vite__mapDeps([0,1,2])).then((n=>({default:n.Prism}))))),j=t=>o.jsxs(d,{children:[o.jsx(I,{}),o.jsx(e,{}),o.jsx("div",{children:o.jsx(u,{items:[{key:1,label:"Show source",children:o.jsx(n.Suspense,{fallback:o.jsx("div",{children:"Loading source..."}),children:o.jsx(h,{language:"tsx",style:t.darkMode?c:b,showLineNumbers:!0,children:"\nimport React, {useCallback} from 'react';\nimport {Button} from @krinopotam/ui-kit/button';\nimport {IDFormModalApi, DFormModal, IDFormModalProps} from @krinopotam/ui-kit/dFormModal';\nimport {InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField';\nimport {DateTimeField} from @krinopotam/ui-kit/dForm/fields/dateTime/dateTimeField';\nimport {TabsField} from @krinopotam/ui-kit/dForm/fields/tabs/tabsField';\nimport {FormLayoutSwitch} from '../../common/buttonsProps';\nimport {IInlineGroupFieldProps, InlineGroupField} from @krinopotam/ui-kit/dForm/fields/inlineGroup';\nconst formApi = {} as IDFormModalApi;\nconst formProps: IDFormModalProps = {\n    formId: 'Test form',\n    apiRef: formApi,\n    confirmChanges: true,\n    fieldsProps: {\n        tabs1: {\n            component: TabsField,\n            tabs: {\n                ' Входы1 ': {\n                    nameIn1: {component: InputField, label: 'Имя входящего'},\n                    dateIn1: {component: DateTimeField, label: 'Дата входа'},\n                    subTab1: {\n                        component: TabsField,\n                        tabs: {\n                            ' Проходы ': {\n                                row1: {\n                                    component: InlineGroupField,\n                                    fieldsProps: {\n                                        subNameIn1: {component: InputField, label: 'Имя проходящего'},\n                                        subDateIn1: {component: DateTimeField, label: 'Дата прохода', width: 150},\n                                    },\n                                } satisfies IInlineGroupFieldProps,\n                            },\n                            ' Уходы ': {\n                                row2: {\n                                    component: InlineGroupField,\n                                    fieldsProps: {\n                                        subNameOut1: {component: InputField, label: 'Имя уходящего'},\n                                        subDateOut1: {component: DateTimeField, label: 'Дата ухода', width: 150},\n                                    },\n                                } satisfies IInlineGroupFieldProps,\n                            },\n                        },\n                    },\n                },\n                ' Выходы1 ': {\n                    nameOut1: {component: InputField, label: 'Имя выходящего'},\n                    dateOut1: {component: DateTimeField, label: 'Дата выхода'},\n                },\n            },\n        },\n        tabs2: {\n            component: TabsField,\n            tabs: {\n                ' Входы2 ': {\n                    nameIn2: {component: InputField, label: 'Имя входящего'},\n                    dateIn2: {component: DateTimeField, label: 'Дата входа', width: 150},\n                },\n                ' Выходы2 ': {\n                    nameOut2: {component: InputField, label: 'Имя выходящего'},\n                    dateOut2: {component: DateTimeField, label: 'Дата выхода', width: 150},\n                },\n            },\n        },\n    },\n    height: 250,\n    maxWidth: 500,\n    maxHeight: 500,\n    buttons: FormLayoutSwitch(formApi),\n};\nexport const SeveralTabs = (): React.JSX.Element => {\n    const onClick = useCallback(() => {\n        formApi.open('create');\n    }, []);\n    return (\n        <div style={{maxWidth: 500}}>\n            <Button onClick={onClick}>Open form</Button>\n            <DFormModal {...formProps} />\n        </div>\n    );\n};\n"})})}]})})]});export{j as Page4b797ffbcc77474e98cb92cbea2a3010,j as default};
