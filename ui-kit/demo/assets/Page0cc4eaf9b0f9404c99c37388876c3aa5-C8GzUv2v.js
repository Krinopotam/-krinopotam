const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CYtcEg42.js","assets/default-highlight-DmLVT0MV.js","assets/index-7nZFAa1C.js"])))=>i.map(i=>d[i]);
import{W as o,j as s,S as r,a as i,D as n,r as e,_ as t}from"./index-7nZFAa1C.js";import{D as a}from"./isArray-Dr27fI6O.js";import{I as l}from"./inputField-iqxGYRDe.js";import{P as d}from"./passwordField-DHyCZBuB.js";import{P as p,C as m}from"./pageLayout-CvD8cTj-.js";import{d as c,c as u}from"./darcula-BqMdvqtY.js";import"./buttonsRow-CbJpBlrJ.js";import"./messageBox-DbI9dXeH.js";import"./index-B4aTtR1L.js";import"./baseField-DesneoB5.js";import"./index-C9mENHWZ.js";import"./SearchOutlined-C8H1r-H8.js";const h=()=>{const[n,e]=o.useState(!1),t=j(n);return s.jsxs("div",{children:[s.jsx("h1",{children:"Basic form example"}),s.jsxs("div",{style:{maxWidth:500},children:[s.jsx(r,{style:{marginBottom:30},children:s.jsx(i,{checkedChildren:"Horizontal",unCheckedChildren:"Vertical",onChange:()=>e((o=>!o))})}),s.jsx(a,{...t})]})]})},j=o=>({layout:o?"horizontal":"vertical",fieldsProps:{login:{component:l,label:"Login",autoFocus:!0},password:{component:d,label:"Password"}},buttons:{ok:{position:"right"}}}),f=e.lazy((()=>t((()=>import("./index-CYtcEg42.js").then((o=>o.dw))),__vite__mapDeps([0,1,2])).then((o=>({default:o.Prism}))))),x=o=>s.jsxs(p,{children:[s.jsx(h,{}),s.jsx(n,{}),s.jsx("div",{children:s.jsx(m,{items:[{key:1,label:"Show source",children:s.jsx(e.Suspense,{fallback:s.jsx("div",{children:"Loading source..."}),children:s.jsx(f,{language:"tsx",style:o.darkMode?c:u,showLineNumbers:!0,children:"\nimport {DForm, IDFormProps} from @krinopotam/ui-kit/dForm';\nimport {IInputFieldProps, InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField';\nimport {IPasswordFieldProps, PasswordField} from @krinopotam/ui-kit/dForm/fields/password/passwordField';\nimport {Space, Switch} from 'antd';\nimport React from 'react';\nexport const Example = (): React.JSX.Element => {\n    const [horizontal, setHorizontal] = React.useState(false);\n    const formProps = useFormProps(horizontal);\n    return (\n        <div>\n            <div style={{maxWidth: 500}}>\n                <Space style={{marginBottom: 30}}>\n                    <Switch checkedChildren={'Horizontal'} unCheckedChildren={'Vertical'} onChange={() => setHorizontal(cur => !cur)} />\n                </Space>\n                <DForm {...formProps} />\n            </div>\n        </div>\n    );\n};\ntype IFieldTypes = {\n    login: string;\n    password: string;\n};\nconst useFormProps = (horizontal: boolean) => {\n    return {\n        layout: horizontal ? 'horizontal' : 'vertical',\n        fieldsProps: {\n            login: {component: InputField, label: 'Login', autoFocus: true} satisfies IInputFieldProps,\n            password: {component: PasswordField, label: 'Password'} satisfies IPasswordFieldProps,\n        },\n        buttons: {ok: {position: 'right'}},\n    } satisfies IDFormProps<IFieldTypes>;\n};\n"})})}]})})]});export{x as Page0cc4eaf9b0f9404c99c37388876c3aa5,x as default};
