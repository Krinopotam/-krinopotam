import{r as e,j as t,W as i}from"./index-CUcNIvkO.js";import{u as s,C as l,B as r}from"./baseField-Byxe-saX.js";import{F as o}from"./isArray-CFaV0B-6.js";const n=({field:r})=>{e.useSyncExternalStore(r.subscribe.bind(r),r.getSnapshot.bind(r)),e.useEffect((()=>{r.setReady(!0)}),[r]);const n=e.useRef(null),h=r.getModel(),u=h.getFormProps(),c=r.getProps(),g=r.getRootFields();let p;for(const e in g){const t=g[e];t.isHidden()||(p||(p=t))}const f=r.isHidden()||!r.hasVisibleChildren();let m="";"horizontal"===u.layout&&(m=null==p?void 0:p.getLabel());const F={width:r.getWidth(),margin:0,marginBottom:0};c.autoHeightResize&&(F.height="100%");const y={...F,...c.style},b={display:"flex",flexDirection:"row",flexWrap:"nowrap",gap:"24px",alignItems:"top",width:"100%"};c.autoHeightResize&&(b.height="100%");const x=d(g,24),j={...r.getId()===h.getHighlightedId()?r.getHighlightedStyle():void 0},w=s(r);return t.jsx(l,{nodeRef:n,in:!f,timeout:300,classNames:"zoom",unmountOnExit:!0,children:t.jsx("div",{ref:n,className:"dform-field-container",style:j,onClick:w,children:t.jsx(o.Item,{label:m,style:y,className:c.className,children:t.jsx("div",{style:b,children:Object.keys(g).map((e=>{const s=g[e],l={flex:s.getProps().width||s.noGrowWidth()?"0 0 auto":"1 1 auto",width:a(s,x)},o="horizontal"===u.layout&&s===p?null:void 0;return t.jsx(i.Fragment,{children:s.renderField({altLabel:o,fieldContainerStyle:l})},`item_${r.getId()}_subitem_${s.getId()}`)}))})})})})},d=(e,t)=>{const i=Object.keys(e).length;return i>0?(i-1)*t/i:0},a=(e,t)=>{const i=e.getProps();if(i.width)return h(i.width)?i.width+"px":`calc(${i.width} - ${t}px)`},h=e=>"number"==typeof e||e.length>0&&!isNaN(Number(e[e.length-1]));class InlineGroupField extends r{prepareChildrenFieldsCollection(){const e=this.getProps(),t=e.fieldsProps;return e.fieldsProps?([this.fieldsMap,this.rootFields]=this.getModel().prepareFieldCollection(t,this),[this.fieldsMap,this.rootFields]):[{},{}]}render(){return t.jsx(n,{field:this})}renderField(){return this.render()}getFieldsMap(){return this.fieldsMap}getRootFields(){return this.rootFields}getValue(){}setValue(){}canHaveValue(){return!1}managesChildWidth(){return!0}setDisabled(e,t,i){if(this.isDisabled()!==e){for(const i in this.rootFields){this.rootFields[i].setDisabled(e,t,!0)}super.setDisabled(e,t,i)}}setReadOnly(e,t,i){if(this.isReadOnly()!==e){for(const i in this.rootFields){this.rootFields[i].setReadOnly(e,t,!0)}super.setReadOnly(e,t,i)}}}export{InlineGroupField as I};
