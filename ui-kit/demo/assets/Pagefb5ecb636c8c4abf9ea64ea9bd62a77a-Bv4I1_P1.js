const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-Dvs4VEmC.js","assets/default-highlight-Dm6aDo4V.js","assets/index-BOYSlfQV.js"])))=>i.map(i=>d[i]);
import{r as o,j as t,D as e,_ as r}from"./index-BOYSlfQV.js";import{b as n}from"./buttonsRow-DRuomfef.js";import{D as a}from"./dFormModal-BAo8jJpl.js";import{T as s}from"./tabulatorGridField-Po5OYbVa.js";import{F as i}from"./buttonsProps-CD-buW0A.js";import{b as l,T as m}from"./tabulatorData-CBofSdRn.js";import{P as d,C as u}from"./pageLayout-Ca7cfxsR.js";import{d as p,c}from"./darcula-BqMdvqtY.js";import"./isArray-fS4BihRk.js";import"./messageBox-Bmslelt7.js";import"./index-Z7ABEBjk.js";import"./modal-DikzEoDD.js";import"./baseField--tLhZDqb.js";import"./tabulatorGrid-C0NOeQsK.js";import"./defaultButtonsProps-IuleH_X3.js";import"./PlusOutlined-B_IH4Rqk.js";import"./index-BE-MSqL2.js";const f={},h={formId:"Test form",apiRef:f,confirmChanges:!0,fieldsProps:{users:{component:s,label:"Пользователи",columns:m,layout:"fitColumns",height:300,selectionFormProps:{title:"Please select",height:300,fieldsProps:{select:{component:s,columns:m,dataSet:l,selectionMode:!0,autoHeightResize:!0}}},confirmDelete:!1,onDelete:()=>{},onDataFetch:()=>new Promise(((o,t)=>{setTimeout((()=>{Math.random()<.1?t({message:"Ошибка загрузки данных",code:400}):o({data:l})}),500)}))}},width:900,buttons:i(f)},b=()=>{const e=o.useCallback((()=>{f.open("update")}),[]);return t.jsxs(t.Fragment,{children:[t.jsx("h1",{children:"Example of a modal form with a TabulatorGrid field with selection form"}),t.jsxs("div",{style:{maxWidth:500},children:[t.jsx(n,{onClick:e,children:"Open form"}),t.jsx(a,{...h})]})]})},j=o.lazy((()=>r((()=>import("./index-Dvs4VEmC.js").then((o=>o.dw))),__vite__mapDeps([0,1,2])).then((o=>({default:o.Prism}))))),P=r=>t.jsxs(d,{children:[t.jsx(b,{}),t.jsx(e,{}),t.jsx("div",{children:t.jsx(u,{items:[{key:1,label:"Show source",children:t.jsx(o.Suspense,{fallback:t.jsx("div",{children:"Loading source..."}),children:t.jsx(j,{language:"tsx",style:r.darkMode?p:c,showLineNumbers:!0,children:"\nimport React, {useCallback} from 'react';\nimport {Button} from @krinopotam/ui-kit/button';\nimport {DFormModal, IDFormModalApi, IDFormModalProps} from @krinopotam/ui-kit/dFormModal';\nimport {ITabulatorGridFieldProps, TabulatorGridField} from @krinopotam/ui-kit/dForm/fields/tabulatorGrid/tabulatorGridField';\nimport {FormLayoutSwitch} from '../../../common/buttonsProps';\nimport {TabulatorBaseColumns, TabulatorPlainData} from '../../../data/tabulatorData';\nimport {IGridDataSourcePromise} from @krinopotam/ui-kit/tabulatorGrid';\nconst formApi = {} as IDFormModalApi;\n/*Tabulator selection form props*/\nconst selectionFormProps: IDFormModalProps = {\n    title: 'Please select',\n    height: 300,\n    fieldsProps: {\n        select: {\n            component: TabulatorGridField,\n            columns: TabulatorBaseColumns,\n            dataSet: TabulatorPlainData,\n            selectionMode: true,\n            autoHeightResize: true,\n        } satisfies ITabulatorGridFieldProps,\n    },\n};\n/** main modal form props */\nconst formProps: IDFormModalProps = {\n    formId: 'Test form',\n    apiRef: formApi,\n    confirmChanges: true,\n    fieldsProps: {\n        users: {\n            component: TabulatorGridField,\n            label: 'Пользователи',\n            columns: TabulatorBaseColumns,\n            layout: 'fitColumns',\n            height: 300,\n            selectionFormProps: selectionFormProps,\n            confirmDelete: false,\n            onDelete: () => {},\n            onDataFetch: () => {\n                return new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                        if (Math.random() < 0.1) reject({message: 'Ошибка загрузки данных', code: 400});\n                        else resolve({data: TabulatorPlainData});\n                    }, 500);\n                }) as IGridDataSourcePromise;\n            },\n        },\n    },\n    width: 900,\n    buttons: FormLayoutSwitch(formApi),\n};\nexport const FormWithAsyncGridWithSelectionForm = (): React.JSX.Element => {\n    const onClick = useCallback(() => {\n        formApi.open('update');\n    }, []);\n    return (\n        <>\n            <div style={{maxWidth: 500}}>\n                <Button onClick={onClick}>Open form</Button>\n                <DFormModal {...formProps} />\n            </div>\n        </>\n    );\n};\n"})})}]})})]});export{P as Pagefb5ecb636c8c4abf9ea64ea9bd62a77a,P as default};
