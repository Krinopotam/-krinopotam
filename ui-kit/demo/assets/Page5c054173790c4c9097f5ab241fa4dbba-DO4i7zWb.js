const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-Dvs4VEmC.js","assets/default-highlight-Dm6aDo4V.js","assets/index-BOYSlfQV.js"])))=>i.map(i=>d[i]);
import{j as a,D as e,r as t,_ as o}from"./index-BOYSlfQV.js";import{T as r}from"./tabulatorGrid-C0NOeQsK.js";import{T as n,a as s,b as i}from"./tabulatorData-CBofSdRn.js";import"./isArray-fS4BihRk.js";import{P as l,C as m}from"./pageLayout-Ca7cfxsR.js";import{d as u,c as p}from"./darcula-BqMdvqtY.js";import"./buttonsRow-DRuomfef.js";import"./messageBox-Bmslelt7.js";import"./dFormModal-BAo8jJpl.js";import"./modal-DikzEoDD.js";import"./defaultButtonsProps-IuleH_X3.js";import"./PlusOutlined-B_IH4Rqk.js";import"./index-Z7ABEBjk.js";import"./index-BE-MSqL2.js";const d={"ru-ru":{columns:{name:"Наименование"},data:{loading:"Загрузка",error:"Ошибка"},groups:{item:"элемент",items:"элементы"},pagination:{page_size:"Строк на странице",page_title:"Показать страницу",first:"Перв.",first_title:"Первая страница",last:"Послед.",last_title:"Последняя страница",prev:"Пред.",prev_title:"Предыдущая страница",next:"След.",next_title:"Следующая страница",all:"Все",counter:{showing:"Выведено",of:"из",rows:"строк",pages:"страниц"}},headerFilters:{default:"фильтр...",columns:{name:"фильтр..."}}}},c=()=>{const e={locale:"ru-ru",langs:d,columnDefaults:s,columns:n,layout:"fitColumns",height:void 0,pagination:!0,paginationSize:5,paginationSizeSelector:[5,10,50,100],paginationCounter:"rows",paginationMode:"remote",filterMode:"remote",sortMode:"remote",onDataFetch:(a,e)=>(console.log("params",a),new Promise(((t,o)=>{setTimeout((()=>{Math.random()<.1&&o({message:"Loading error",code:400});const r=(null==a?void 0:a.page)??1,n=(null==a?void 0:a.size)??e.getProps().paginationSize??5,s=Math.ceil(i.length/n),l=i.slice((r-1)*n,r*n);t({data:l,last_page:s})}),1e3)}))),ajaxParams:{extraKey1:"extraValue1",extraKey2:"extraValue2"}};return a.jsxs(a.Fragment,{children:[a.jsx("h1",{children:"Asynchronous data loading to the TabulatorGrid in the page mode"}),a.jsx("p",{style:{color:"red"},children:"To test boot resumption there is a 10% chance of error"}),a.jsx(r,{...e})]})},g=t.lazy((()=>o((()=>import("./index-Dvs4VEmC.js").then((a=>a.dw))),__vite__mapDeps([0,1,2])).then((a=>({default:a.Prism}))))),h=o=>a.jsxs(l,{children:[a.jsx(c,{}),a.jsx(e,{}),a.jsx("div",{children:a.jsx(m,{items:[{key:1,label:"Show source",children:a.jsx(t.Suspense,{fallback:a.jsx("div",{children:"Loading source..."}),children:a.jsx(g,{language:"tsx",style:o.darkMode?u:p,showLineNumbers:!0,children:"\nimport React from 'react';\nimport {IGridProps, TabulatorGrid} from @krinopotam/ui-kit/tabulatorGrid';\nimport {TabulatorBaseColumns, TabulatorBaseColumnsDef, TabulatorPlainData} from '../../../data/tabulatorData';\nimport {TabulatorLocaleRu} from @krinopotam/ui-kit/tabulatorBase\";\nexport const AsyncPages = (): React.JSX.Element => {\n    const props: IGridProps = {\n        locale: 'ru-ru',\n        langs: TabulatorLocaleRu,\n        columnDefaults: TabulatorBaseColumnsDef,\n        columns: TabulatorBaseColumns,\n        layout: 'fitColumns',\n        height: undefined,\n        pagination: true,\n        paginationSize: 5,\n        paginationSizeSelector: [5, 10, 50, 100],\n        paginationCounter: 'rows',\n        paginationMode: 'remote',\n        filterMode: 'remote',\n        sortMode: 'remote',\n        onDataFetch: (params, gridApi) => {\n            console.log('params', params);\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    const random = Math.random();\n                    if (random < 0.1) reject({message: 'Loading error', code: 400});\n                    const page = params?.page ?? 1;\n                    const size = params?.size ?? gridApi.getProps().paginationSize ?? 5;\n                    const lastPage = Math.ceil(TabulatorPlainData.length / size);\n                    const slicedDataSet = TabulatorPlainData.slice((page - 1) * size, page * size); //remote fetch imitation\n                    resolve({data: slicedDataSet, last_page: lastPage});\n                }, 1000);\n            });\n        },\n        ajaxParams: {extraKey1: 'extraValue1', extraKey2: 'extraValue2'}, //any additional params (you can pass a callback)\n    };\n    return (\n        <>\n            <TabulatorGrid {...props} />\n        </>\n    );\n};\n"})})}]})})]});export{h as Page5c054173790c4c9097f5ab241fa4dbba,h as default};
