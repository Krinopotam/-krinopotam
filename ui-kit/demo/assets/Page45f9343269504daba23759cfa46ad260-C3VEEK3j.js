const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BNjet-3W.js","assets/default-highlight-DdW2S8iS.js","assets/index-BYTxC3xS.js"])))=>i.map(i=>d[i]);
import{j as t,D as n,r as e,_ as o}from"./index-BYTxC3xS.js";import{a as r}from"./buttonsRow-JL3h8SZf.js";import{P as i,C as s}from"./pageLayout-CeU2Cl8T.js";import{d as l,c as d}from"./darcula-BqMdvqtY.js";const a=()=>{const n=c();return t.jsxs(t.Fragment,{children:[t.jsx("h1",{children:"Example of a simple buttons row"}),t.jsx("div",{style:{maxWidth:"900px",border:"1px solid grey",padding:"10px"},children:t.jsx(r,{buttons:n,styles:{leftBlockStyle:{border:"1px dashed grey"},centerBlockStyle:{border:"1px dashed grey"},rightBlockStyle:{border:"1px dashed grey"}}})})]})},c=()=>({buttonLeft:{type:"button",color:"primary",variant:"solid",title:"Left",position:"left",onClick:()=>alert("Button is clicked")},buttonCenter:{type:"button",title:"Center",position:"center",onClick:()=>alert("Button is clicked")},buttonRight:{type:"button",title:"Right",position:"right",onClick:()=>alert("Button is clicked")}}),u=e.lazy((()=>o((()=>import("./index-BNjet-3W.js").then((t=>t.dw))),__vite__mapDeps([0,1,2])).then((t=>({default:t.Prism}))))),p=o=>t.jsxs(i,{children:[t.jsx(a,{}),t.jsx(n,{}),t.jsx("div",{children:t.jsx(s,{items:[{key:1,label:"Show source",children:t.jsx(e.Suspense,{fallback:t.jsx("div",{children:"Loading source..."}),children:t.jsx(u,{language:"tsx",style:o.darkMode?l:d,showLineNumbers:!0,children:"\nimport React from 'react';\nimport {ButtonsRow, IFormButtons} from @krinopotam/ui-kit/buttonsRow';\nexport const Example = (): React.JSX.Element => {\n    const buttons = useButtons();\n    return (\n        <>\n            <div style={{maxWidth: '900px', border: '1px solid grey', padding: '10px'}}>\n                <ButtonsRow\n                    buttons={buttons}\n                    styles={{\n                        leftBlockStyle: {border: '1px dashed grey'},\n                        centerBlockStyle: {border: '1px dashed grey'},\n                        rightBlockStyle: {border: '1px dashed grey'},\n                    }}\n                />\n            </div>\n        </>\n    );\n};\nconst useButtons = (): IFormButtons => {\n    return {\n        buttonLeft: {\n            type: 'button',\n            color: 'primary',\n            variant: 'solid',\n            title: 'Left',\n            position: 'left',\n            onClick:()=>alert('Button is clicked'),\n        },\n        buttonCenter: {\n            type: 'button',\n            title: 'Center',\n            position: 'center',\n            onClick:()=>alert('Button is clicked'),\n        },\n        buttonRight: {\n            type: 'button',\n            title: 'Right',\n            position: 'right',\n            onClick:()=>alert('Button is clicked'),\n        },\n    };\n};\n"})})}]})})]});export{p as Page45f9343269504daba23759cfa46ad260,p as default};
