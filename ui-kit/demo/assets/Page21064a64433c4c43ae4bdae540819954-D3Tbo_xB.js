const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BNjet-3W.js","assets/default-highlight-DdW2S8iS.js","assets/index-BYTxC3xS.js"])))=>i.map(i=>d[i]);
import{r as t,j as n,D as e,_ as o}from"./index-BYTxC3xS.js";import{B as i,a as l}from"./buttonsRow-JL3h8SZf.js";import{P as s,C as r}from"./pageLayout-CeU2Cl8T.js";import{d as u,c}from"./darcula-BqMdvqtY.js";const d=()=>{const e=t.useRef(null),o=a();return n.jsxs(n.Fragment,{children:[n.jsx("h1",{children:"Example of button selection by arrows keys"}),n.jsx("p",{children:"Buttons row must be wrapped by ButtonsRowWrapper"}),n.jsx("p",{children:"Disabled buttons, links, dividers are not selectable"}),n.jsx("div",{style:{maxWidth:"900px",border:"1px solid grey",padding:"10px"},children:n.jsx(i,{ref:e,children:n.jsx(l,{buttons:o,arrowsSelection:!0,styles:{leftBlockStyle:{border:"1px dashed grey"},centerBlockStyle:{border:"1px dashed grey"},rightBlockStyle:{border:"1px dashed grey"}}})})})]})},a=()=>({buttonLeft1:{type:"button",title:"button",active:!0,position:"left",onClick:()=>alert("Button is clicked")},buttonLeft2:{type:"link",title:"link",position:"left",onClick:()=>alert("Button is clicked")},buttonLeft3:{type:"button",title:"disabled",disabled:!0,position:"left",onClick:()=>alert("Button is clicked")},buttonLeft4:{type:"button",title:"button",position:"left",onClick:()=>alert("Button is clicked")},buttonCenter1:{type:"button",title:"button",position:"center",onClick:()=>alert("Button is clicked")},buttonCenter2:{type:"button",title:"button",position:"center",onClick:()=>alert("Button is clicked")},buttonRight:{type:"button",title:"button",position:"right",onClick:()=>alert("Button is clicked")}}),p=t.lazy((()=>o((()=>import("./index-BNjet-3W.js").then((t=>t.dw))),__vite__mapDeps([0,1,2])).then((t=>({default:t.Prism}))))),b=o=>n.jsxs(s,{children:[n.jsx(d,{}),n.jsx(e,{}),n.jsx("div",{children:n.jsx(r,{items:[{key:1,label:"Show source",children:n.jsx(t.Suspense,{fallback:n.jsx("div",{children:"Loading source..."}),children:n.jsx(p,{language:"tsx",style:o.darkMode?u:c,showLineNumbers:!0,children:"\nimport React, {useRef} from 'react';\nimport {ButtonsRow, ButtonsRowWrapper, IFormButtons} from @krinopotam/ui-kit/buttonsRow';\nexport const Example = (): React.JSX.Element => {\n    const ref = useRef<HTMLDivElement>(null);\n    const buttons = useButtons();\n    return (\n        <>\n            <div style={{maxWidth: '900px', border: '1px solid grey', padding: '10px'}}>\n                <ButtonsRowWrapper ref={ref}>\n                    <ButtonsRow\n                        buttons={buttons}\n                        arrowsSelection={true}\n                        styles={{\n                            leftBlockStyle: {border: '1px dashed grey'},\n                            centerBlockStyle: {border: '1px dashed grey'},\n                            rightBlockStyle: {border: '1px dashed grey'},\n                        }}\n                    />\n                </ButtonsRowWrapper>\n            </div>\n        </>\n    );\n};\nconst useButtons = (): IFormButtons => {\n    return {\n        buttonLeft1: {\n            type: 'button',\n            title: 'button',\n            active: true,\n            position: 'left',\n            onClick:()=>alert('Button is clicked'),\n        },\n        buttonLeft2: {\n            type: 'link',\n            title: 'link',\n            position: 'left',\n            onClick:()=>alert('Button is clicked'),\n        },\n        buttonLeft3: {\n            type: 'button',\n            title: 'disabled',\n            disabled: true,\n            position: 'left',\n            onClick:()=>alert('Button is clicked'),\n        },\n        buttonLeft4: {\n            type: 'button',\n            title: 'button',\n            position: 'left',\n            onClick:()=>alert('Button is clicked'),\n        },\n        buttonCenter1: {\n            type: 'button',\n            title: 'button',\n            position: 'center',\n            onClick:()=>alert('Button is clicked'),\n        },\n        buttonCenter2: {\n            type: 'button',\n            title: 'button',\n            position: 'center',\n            onClick:()=>alert('Button is clicked'),\n        },\n        buttonRight: {\n            type: 'button',\n            title: 'button',\n            position: 'right',\n            onClick:()=>alert('Button is clicked'),\n        },\n    };\n};\n"})})}]})})]});export{b as Page21064a64433c4c43ae4bdae540819954,b as default};
