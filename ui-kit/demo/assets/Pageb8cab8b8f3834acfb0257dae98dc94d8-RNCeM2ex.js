const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CYtcEg42.js","assets/default-highlight-DmLVT0MV.js","assets/index-7nZFAa1C.js"])))=>i.map(i=>d[i]);
import{r as e,j as o,D as a,_ as n}from"./index-7nZFAa1C.js";import{b as t}from"./buttonsRow-CbJpBlrJ.js";import{D as r}from"./dFormModal-C9vmBgI4.js";import{I as s}from"./inputField-iqxGYRDe.js";import{P as i}from"./passwordField-DHyCZBuB.js";import{T as l,a as d}from"./tabulatorData-CNl3ryUI.js";import{T as m}from"./tabsField-B1DIgbNY.js";import{T as p}from"./tabulatorGridField-BBxhQgmX.js";import{F as u}from"./buttonsProps-Cy-SoziJ.js";import{P as g,C as b}from"./pageLayout-CvD8cTj-.js";import{d as c,c as f}from"./darcula-BqMdvqtY.js";import"./isArray-Dr27fI6O.js";import"./messageBox-DbI9dXeH.js";import"./index-B4aTtR1L.js";import"./modal-VvTCZt36.js";import"./baseField-DesneoB5.js";import"./index-C9mENHWZ.js";import"./SearchOutlined-C8H1r-H8.js";import"./tabulatorGrid-7ZT71B5r.js";import"./defaultButtonsProps-SW37Xp2d.js";import"./PlusOutlined-DEuRVQuc.js";import"./index-D3HaYG9t.js";import"./index-De60lx6p.js";const h={},y={formId:"Test form",apiRef:h,confirmChanges:!0,arrowsButtonsSelection:!0,height:500,width:750,fieldsProps:{tabs:{component:m,autoHeightResize:!0,tabs:{" Tab 1":{field1:{component:s,label:"field1",rules:[{type:"string",rule:"not-empty",message:"Поле не должно быть пустым"}]},table:{component:p,label:"Table",columnDefaults:d,columns:l,defaultValue:[{id:"1",name:"Oli Bob1",age:"12",col:"red",dob:"",rating:1,passed:!1},{id:"2",name:"Mary May1",age:"1",col:"blue",dob:"14/05/1982",rating:2,passed:!1},{id:"3",name:"Christine Kozubowski1",age:"42",col:"green",dob:"22/05/1982",rating:5,passed:!0},{id:"4",name:"Brendon Philips1",age:"125",col:"orange",dob:"01/08/1980",rating:4,passed:!0},{id:"5",name:"Margret Marmalade1",age:"16",col:"yellow",dob:"31/01/1999",rating:3,passed:!0},{id:"6",name:"Oli Bob2",age:"12",col:"red",dob:"",rating:5,passed:!0},{id:"7",name:"Mary May2",age:"1",col:"blue",dob:"14/05/1982",rating:2,passed:!1},{id:"8",name:"Christine Kozubowski2",age:"42",col:"green",dob:"22/05/1982",rating:3,passed:!0},{id:"9",name:"Brendon Philips2",age:"125",col:"orange",dob:"01/08/1980",rating:3,passed:!0},{id:"10",name:"Margret Marmalade2",age:"16",col:"yellow",dob:"31/01/1999",rating:2,passed:!1}],autoHeightResize:!0,rules:[{type:"string",rule:"not-empty",message:"Поле не должно быть пустым"}]},field3:{component:i,label:"field3",width:100,rules:[{type:"string",rule:"not-empty",message:"Поле не должно быть пустым"}]}}," Tab 2":{login:{component:s,label:"Login",rules:[{type:"string",rule:"not-empty",message:"Поле не должно быть пустым"}]},password:{component:i,label:"Password",width:100,rules:[{type:"string",rule:"not-empty",message:"Поле не должно быть пустым"}]}}}}},buttons:u(h)},F=()=>{const a=e.useCallback((()=>{h.open("create")}),[]);return o.jsxs(o.Fragment,{children:[o.jsx("h1",{children:"Example of a form with a TabulatorGrid type field with automatic height in tab"}),o.jsxs("div",{style:{maxWidth:500},children:[o.jsx(t,{onClick:a,children:"Open form"}),o.jsx(r,{...y})]})]})},w=e.lazy((()=>n((()=>import("./index-CYtcEg42.js").then((e=>e.dw))),__vite__mapDeps([0,1,2])).then((e=>({default:e.Prism}))))),j=n=>o.jsxs(g,{children:[o.jsx(F,{}),o.jsx(a,{}),o.jsx("div",{children:o.jsx(b,{items:[{key:1,label:"Show source",children:o.jsx(e.Suspense,{fallback:o.jsx("div",{children:"Loading source..."}),children:o.jsx(w,{language:"tsx",style:n.darkMode?c:f,showLineNumbers:!0,children:"\nimport React, {useCallback} from 'react';\nimport {Button} from @krinopotam/ui-kit/button';\nimport {IDFormModalApi, DFormModal, IDFormModalProps} from @krinopotam/ui-kit/dFormModal';\nimport {IInputFieldProps, InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField';\nimport {IPasswordFieldProps, PasswordField} from @krinopotam/ui-kit/dForm/fields/password/passwordField';\nimport {TabulatorBaseColumns, TabulatorBaseColumnsDef} from '../../data/tabulatorData';\nimport {TabsField} from @krinopotam/ui-kit/dForm/fields/tabs';\nimport {ITabulatorGridFieldProps, TabulatorGridField} from @krinopotam/ui-kit/dForm/fields/tabulatorGrid';\nimport {IGridRowData} from @krinopotam/ui-kit/tabulatorGrid';\nimport {FormLayoutSwitch} from \"../../common/buttonsProps\";\nconst formApi = {} as IDFormModalApi;\nexport const dataSet: IGridRowData[] = [\n    {id: '1', name: 'Oli Bob1', age: '12', col: 'red', dob: '', rating: 1, passed: false},\n    {id: '2', name: 'Mary May1', age: '1', col: 'blue', dob: '14/05/1982', rating: 2, passed: false},\n    {id: '3', name: 'Christine Kozubowski1', age: '42', col: 'green', dob: '22/05/1982', rating: 5, passed: true},\n    {id: '4', name: 'Brendon Philips1', age: '125', col: 'orange', dob: '01/08/1980', rating: 4, passed: true},\n    {id: '5', name: 'Margret Marmalade1', age: '16', col: 'yellow', dob: '31/01/1999', rating: 3, passed: true},\n    {id: '6', name: 'Oli Bob2', age: '12', col: 'red', dob: '', rating: 5, passed: true},\n    {id: '7', name: 'Mary May2', age: '1', col: 'blue', dob: '14/05/1982', rating: 2, passed: false},\n    {id: '8', name: 'Christine Kozubowski2', age: '42', col: 'green', dob: '22/05/1982', rating: 3, passed: true},\n    {id: '9', name: 'Brendon Philips2', age: '125', col: 'orange', dob: '01/08/1980', rating: 3, passed: true},\n    {id: '10', name: 'Margret Marmalade2', age: '16', col: 'yellow', dob: '31/01/1999', rating: 2, passed: false},\n];\nconst formProps: IDFormModalProps = {\n    formId: 'Test form',\n    apiRef: formApi,\n    confirmChanges: true,\n    arrowsButtonsSelection: true,\n    height: 500,\n    width: 750,\n    fieldsProps: {\n        tabs: {\n            component: TabsField, autoHeightResize: true, tabs: {\n                ' Tab 1': {\n                    field1: {\n                        component: InputField,\n                        label: 'field1',\n                        rules: [{type: 'string', rule: 'not-empty', message: 'Поле не должно быть пустым'}],\n                    } as IInputFieldProps,\n                    table: {\n                        component: TabulatorGridField,\n                        label: 'Table',\n                        columnDefaults: TabulatorBaseColumnsDef,\n                        columns: TabulatorBaseColumns,\n                        defaultValue: dataSet,\n                        autoHeightResize: true,\n                        rules: [{type: 'string', rule: 'not-empty', message: 'Поле не должно быть пустым'}],\n                    } as ITabulatorGridFieldProps,\n                    field3: {\n                        component: PasswordField,\n                        label: 'field3',\n                        width: 100,\n                        rules: [{type: 'string', rule: 'not-empty', message: 'Поле не должно быть пустым'}],\n                    } as IPasswordFieldProps,\n                },\n                ' Tab 2': {\n                    login: {\n                        component: InputField,\n                        label: 'Login',\n                        rules: [{type: 'string', rule: 'not-empty', message: 'Поле не должно быть пустым'}],\n                    } as IInputFieldProps,\n                    password: {\n                        component: PasswordField,\n                        label: 'Password',\n                        width: 100,\n                        rules: [{type: 'string', rule: 'not-empty', message: 'Поле не должно быть пустым'}],\n                    } as IPasswordFieldProps,\n                }\n            }\n        },\n    },\n    buttons: FormLayoutSwitch(formApi),\n};\nexport const AutoHeightTabulatorInTab = (): React.JSX.Element => {\n    const onClick = useCallback(() => {\n        formApi.open('create');\n    }, []);\n    return (\n        <>\n            <div style={{maxWidth: 500}}>\n                <Button onClick={onClick}>Open form</Button>\n                <DFormModal {...formProps} />\n            </div>\n        </>\n    );\n};\n"})})}]})})]});export{j as Pageb8cab8b8f3834acfb0257dae98dc94d8,j as default};
