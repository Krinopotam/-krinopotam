const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-s3JYYcml.js","assets/default-highlight-CgZf-mKA.js","assets/index-BifVs3yP.js"])))=>i.map(i=>d[i]);
import{r as e,j as t,S as i,a as n,D as d,_ as o}from"./index-BifVs3yP.js";import{D as r}from"./isArray-DZpirPjN.js";import{I as l}from"./inputField-CUebB51y.js";import{T as s}from"./treeSelectField-D3MWssfy.js";import{P as a}from"./useApiGetGroupsOnly-CQWS2_z-.js";import{d as m}from"./dFormModal-_hZTfvWc.js";import{P as p,C as c}from"./pageLayout-CQ75ho6N.js";import{d as u,c as h}from"./darcula-BqMdvqtY.js";import"./buttonsRow-B_xoywMk.js";import"./messageBox-2IfVYj0o.js";import"./index-CWHT4hGv.js";import"./baseField-BOZdNZcm.js";import"./index-Bt_MkLQg.js";import"./SearchOutlined-8SOsLCzA.js";import"./defaultButtonsProps-De9HXyKM.js";import"./PlusOutlined-CQ-Ipige.js";import"./useShowArrow-DvkZZZK_.js";import"./useIcons-a6tgTMJf.js";import"./index-CTMli26P.js";import"./modal-CZTSSsuL.js";const f=()=>{const d=S(),[o,l]=e.useState(!1),[s,a]=e.useState(!1);return t.jsxs(t.Fragment,{children:[t.jsx("h1",{children:"Пример TreeSelect с формой редактирования"}),t.jsxs(i,{style:{paddingBottom:10},children:[t.jsxs("div",{children:["Read only",t.jsx(n,{onClick:e=>{l(e)}})]}),t.jsxs("div",{children:["Disabled",t.jsx(n,{onClick:e=>{a(e)}})]})]}),t.jsx("div",{style:{maxWidth:500},children:t.jsx(r,{...d,readOnly:o,disabled:s})})]})},F={},S=()=>{const t=j();return e.useMemo((()=>({formId:"Test form",confirmChanges:!0,fieldsProps:{departments:{component:s,apiRef:F,label:"Подразделения",confirmDelete:!0,dataSet:P,editFormProps:t,onDelete:()=>{}}},buttons:null})),[t])},j=()=>e.useMemo((()=>({onFormInit:e=>{const t=e.model,i=t.getField("parent"),n=F.getDataSet();if("update"!==t.getFormMode())return void i.updateProps({dataSet:n});const d=t.getFormDataSet().id,o=m(n);a(d,o,{key:"id",children:"children"}),i.updateProps({dataSet:o})},formId:"EditForm",confirmChanges:!0,fieldsProps:{title:{component:l,label:"Подразделение"},parent:{component:s,label:"Родитель"}}})),[]),P=[{id:"01",title:"Департамент аналитики данных",children:[{id:"01-01",title:"Управление аналитики продаж",children:[{id:"01-01-01",title:"Отдел продаж север"},{id:"01-01-02",title:"Отдел продаж юг"},{id:"01-01-03",title:"Отдел продаж запад"}]},{id:"01-02",title:"Управление аналитики закупок",children:[{id:"01-02-01",title:"Отдел закупок север"},{id:"01-02-02",title:"Отдел закупок юг"},{id:"01-02-03",title:"Отдел закупок запад"}]},{id:"01-03",title:"Управление аналитики производства",children:[{id:"01-03-01",title:"Отдел производства север"},{id:"01-03-02",title:"Отдел производства юг"},{id:"01-03-03",title:"Отдел производства запад"}]}]},{id:"02",title:"Департамент инженерных работ",children:[{id:"02-01",title:"Управление строительства",children:[{id:"02-01-01",title:"Отдел строительства север"},{id:"02-01-02",title:"Отдел строительства юг"},{id:"02-01-03",title:"Отдел строительства запад"}]},{id:"02-02",title:"Управление демонтажа",children:[{id:"02-02-01",title:"Отдел демонтажа север"},{id:"02-02-02",title:"Отдел демонтажа юг"},{id:"02-02-03",title:"Отдел демонтажа запад"}]},{id:"02-03",title:"Управление реконструкции",children:[{id:"02-03-01",title:"Отдел реконструкции север"},{id:"02-03-02",title:"Отдел реконструкции юг"},{id:"02-03-03",title:"Отдел реконструкции запад"}]}]},{id:"03",title:"Департамент проектных работ",children:[{id:"03-01",title:"Управление проектирования",children:[{id:"03-01-01",title:"Отдел проектирования север"},{id:"03-01-02",title:"Отдел проектирования юг"},{id:"03-01-03",title:"Отдел проектирования запад"}]},{id:"03-02",title:"Управление согласования",children:[{id:"03-02-01",title:"Отдел согласования север"},{id:"03-02-02",title:"Отдел согласования юг"},{id:"03-02-03",title:"Отдел согласования запад"}]},{id:"03-03",title:"Управление анализа проектов",children:[{id:"03-03-01",title:"Отдел анализа север"},{id:"03-03-02",title:"Отдел анализа юг"},{id:"03-03-03",title:"Отдел анализа запад"}]}]}],x=e.lazy((()=>o((()=>import("./index-s3JYYcml.js").then((e=>e.dw))),__vite__mapDeps([0,1,2])).then((e=>({default:e.Prism}))))),I=i=>t.jsxs(p,{children:[t.jsx(f,{}),t.jsx(d,{}),t.jsx("div",{children:t.jsx(c,{items:[{key:1,label:"Show source",children:t.jsx(e.Suspense,{fallback:t.jsx("div",{children:"Loading source..."}),children:t.jsx(x,{language:"tsx",style:i.darkMode?u:h,showLineNumbers:!0,children:"\nimport React, {useMemo, useState} from 'react';\nimport {DForm, IDFormProps} from @krinopotam/ui-kit/dForm';\nimport {IDFormModalProps} from @krinopotam/ui-kit/dFormModal';\nimport {IInputFieldProps, InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField';\nimport {ITreeSelectFieldProps, TreeSelectField} from @krinopotam/ui-kit/dForm/fields/treeSelect/treeSelectField';\nimport {ITreeSelectApi, ITreeSelectNode} from @krinopotam/ui-kit/treeSelect';\nimport {removeFromTree} from @krinopotam/ui-kit/_shared/hooks/treeComponentApiMethods/serviceMethods/removeFromTree';\nimport {CloneObject} from '@krinopotam/js-helpers';\nimport {Space, Switch} from 'antd';\nexport const TreeSelectWithForm = (): React.JSX.Element => {\n    const formProps = useFormProps();\n    const [readOnly, setReadOnly] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    return (\n        <>\n            <Space style={{paddingBottom:10}}>\n                <div>\n                    Read only\n                    <Switch\n                        onClick={e => {\n                            setReadOnly(e);\n                        }}\n                    />\n                </div>\n                <div>\n                    Disabled\n                    <Switch\n                        onClick={e => {\n                            setDisabled(e);\n                        }}\n                    />\n                </div>\n            </Space>\n            <div style={{maxWidth: 500}}>\n                <DForm {...formProps} readOnly={readOnly} disabled={disabled} />\n            </div>\n        </>\n    );\n};\nconst departmentsApi = {} as ITreeSelectApi;\nconst useFormProps = () => {\n    const editFormProps = useTreeEditFormProps();\n    return useMemo(\n        (): IDFormProps => ({\n            formId: 'Test form',\n            confirmChanges: true,\n            fieldsProps: {\n                departments: {\n                    component: TreeSelectField,\n                    apiRef: departmentsApi,\n                    label: 'Подразделения',\n                    confirmDelete: true,\n                    dataSet: dataSet,\n                    editFormProps: editFormProps,\n                    onDelete: () => {},\n                } satisfies ITreeSelectFieldProps,\n            },\n            buttons: null,\n        }),\n        [editFormProps]\n    );\n};\nconst useTreeEditFormProps = () => {\n    return useMemo(\n        (): IDFormModalProps => ({\n            onFormInit: formApi => {\n                const model = formApi.model;\n                const field = model.getField('parent');\n                const data = departmentsApi.getDataSet();\n                const formMode = model.getFormMode();\n                if (formMode !== 'update') {\n                    field.updateProps({dataSet: data});\n                    return;\n                }\n                /** modify dataset for update to avoid the possibility of a parent node choosing itself or its own child node */\n                const id = model.getFormDataSet()['id'];\n                const clonedData = CloneObject(data);\n                removeFromTree(id, clonedData, {key: 'id', children: 'children'});\n                field.updateProps({dataSet: clonedData});\n            },\n            formId: 'EditForm',\n            confirmChanges: true,\n            fieldsProps: {\n                title: {component: InputField, label: 'Подразделение'} satisfies IInputFieldProps,\n                parent: {\n                    component: TreeSelectField,\n                    label: 'Родитель',\n                } satisfies ITreeSelectFieldProps,\n            },\n        }),\n        []\n    );\n};\nconst dataSet: ITreeSelectNode[] = [\n    {\n        id: '01',\n        title: 'Департамент аналитики данных',\n        children: [\n            {\n                id: '01-01',\n                title: 'Управление аналитики продаж',\n                children: [\n                    {id: '01-01-01', title: 'Отдел продаж север'},\n                    {id: '01-01-02', title: 'Отдел продаж юг'},\n                    {id: '01-01-03', title: 'Отдел продаж запад'},\n                ],\n            },\n            {\n                id: '01-02',\n                title: 'Управление аналитики закупок',\n                children: [\n                    {id: '01-02-01', title: 'Отдел закупок север'},\n                    {id: '01-02-02', title: 'Отдел закупок юг'},\n                    {id: '01-02-03', title: 'Отдел закупок запад'},\n                ],\n            },\n            {\n                id: '01-03',\n                title: 'Управление аналитики производства',\n                children: [\n                    {id: '01-03-01', title: 'Отдел производства север'},\n                    {id: '01-03-02', title: 'Отдел производства юг'},\n                    {id: '01-03-03', title: 'Отдел производства запад'},\n                ],\n            },\n        ],\n    },\n    {\n        id: '02',\n        title: 'Департамент инженерных работ',\n        children: [\n            {\n                id: '02-01',\n                title: 'Управление строительства',\n                children: [\n                    {id: '02-01-01', title: 'Отдел строительства север'},\n                    {id: '02-01-02', title: 'Отдел строительства юг'},\n                    {id: '02-01-03', title: 'Отдел строительства запад'},\n                ],\n            },\n            {\n                id: '02-02',\n                title: 'Управление демонтажа',\n                children: [\n                    {id: '02-02-01', title: 'Отдел демонтажа север'},\n                    {id: '02-02-02', title: 'Отдел демонтажа юг'},\n                    {id: '02-02-03', title: 'Отдел демонтажа запад'},\n                ],\n            },\n            {\n                id: '02-03',\n                title: 'Управление реконструкции',\n                children: [\n                    {id: '02-03-01', title: 'Отдел реконструкции север'},\n                    {id: '02-03-02', title: 'Отдел реконструкции юг'},\n                    {id: '02-03-03', title: 'Отдел реконструкции запад'},\n                ],\n            },\n        ],\n    },\n    {\n        id: '03',\n        title: 'Департамент проектных работ',\n        children: [\n            {\n                id: '03-01',\n                title: 'Управление проектирования',\n                children: [\n                    {id: '03-01-01', title: 'Отдел проектирования север'},\n                    {id: '03-01-02', title: 'Отдел проектирования юг'},\n                    {id: '03-01-03', title: 'Отдел проектирования запад'},\n                ],\n            },\n            {\n                id: '03-02',\n                title: 'Управление согласования',\n                children: [\n                    {id: '03-02-01', title: 'Отдел согласования север'},\n                    {id: '03-02-02', title: 'Отдел согласования юг'},\n                    {id: '03-02-03', title: 'Отдел согласования запад'},\n                ],\n            },\n            {\n                id: '03-03',\n                title: 'Управление анализа проектов',\n                children: [\n                    {id: '03-03-01', title: 'Отдел анализа север'},\n                    {id: '03-03-02', title: 'Отдел анализа юг'},\n                    {id: '03-03-03', title: 'Отдел анализа запад'},\n                ],\n            },\n        ],\n    },\n];\n"})})}]})})]});export{I as Pagee457c54c65eb4e4a9a7267d099f74c96,I as default};
