const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-D0Dzp33a.js","assets/default-highlight-DQXVbr5l.js","assets/index-DEKOHtjL.js"])))=>i.map(i=>d[i]);
import{r as e,j as t,S as i,a as n,bD as r,D as o,_ as d}from"./index-DEKOHtjL.js";import{I as l}from"./inputField-CnoVCY_k.js";import{T as s}from"./treeSelectField-_2tThtJm.js";import{T as p}from"./tree-DIIsvXVt.js";import{P as a,C as u}from"./pageLayout-BAEqcME3.js";import{d as m,c}from"./darcula-BqMdvqtY.js";import"./baseField-C1lQOwhI.js";import"./isArray-CilX2EC5.js";import"./buttonsRow-CRmAST--.js";import"./messageBox-DiSTOwiN.js";import"./index-B4134D_s.js";import"./index-BJ8pwC2Z.js";import"./SearchOutlined-DDbavnRP.js";import"./dFormModal-CXclmgf1.js";import"./modal-Ddxw_vMx.js";import"./defaultButtonsProps-CTS3EVUl.js";import"./PlusOutlined-DNtPRFLr.js";import"./useApiGetGroupsOnly-B3lhi2d3.js";import"./index-C1U0rq59.js";import"./useShowArrow-DbNT8REh.js";import"./useIcons-D-Pv2D3R.js";import"./index-v5l4yKKB.js";import"./index-CebQ6_Hs.js";const h=()=>{const r=x(),[o,d]=e.useState(!1),[l,s]=e.useState(!1),[a,u]=e.useState(!1);return t.jsxs(t.Fragment,{children:[t.jsx("h1",{children:"Example of Extended Tree in group mode with edit form"}),t.jsxs(i,{style:{paddingBottom:10},children:[t.jsxs("div",{children:["Multi select ",t.jsx(n,{onClick:e=>u(e)})]}),t.jsxs("div",{children:["Read only ",t.jsx(n,{onClick:e=>d(e)})]}),t.jsxs("div",{children:["Disabled ",t.jsx(n,{onClick:e=>s(e)})]})]}),t.jsx("div",{style:{maxWidth:500,maxHeight:500,height:"100%",overflow:"auto"},children:t.jsx(p,{...r,multiple:a,readOnly:o,disabled:l})})]})},f={},x=()=>{const e=G(!1,f),t=G(!0,f);return{apiRef:f,dataSet:g,defaultExpandAll:!0,confirmDelete:!0,confirmMove:!0,selectNewNode:!0,sortOnChange:!0,buttonsIconsOnly:!0,groupsMode:!0,titleRender:j,editFormProps:e,editGroupFormProps:t,onDelete:()=>{}}},j=e=>e.isGroup?t.jsxs(t.Fragment,{children:[t.jsx(r,{})," ",e.title]}):e.title,G=(e,t)=>{const i=e?"Group":"Department";return{confirmChanges:!0,fieldsProps:{title:{component:l,label:i,rules:[{type:"string",rule:"not-empty",message:i+" is required"}],autoFocus:!0},parent:{component:s,label:"Parent Group",placeholder:"Choose parent group",groupsMode:!0,titleRender:j,selectedRender:j}},onFormInit:e=>{const i=e.model,n=i.getField("parent"),r=i.getFormMode(),o=i.getFormDataSet().id,d=t.getGroupsOnly("update"!==r?void 0:o);n.updateProps({dataSet:d})},onSubmit:t=>({data:{...t,isGroup:e}})}},g=[{id:"01",title:"Департамент аналитики данных",isGroup:!0,children:[{id:"01-01",title:"Управление аналитики продаж",isGroup:!0,children:[{id:"01-01-01",title:"Отдел продаж север"},{id:"01-01-02",title:"Отдел продаж юг"},{id:"01-01-03",title:"Отдел продаж запад"}]},{id:"01-02",title:"Управление аналитики закупок",isGroup:!0,children:[{id:"01-02-01",title:"Отдел закупок север"},{id:"01-02-02",title:"Отдел закупок юг"},{id:"01-02-03",title:"Отдел закупок запад"}]},{id:"01-03",title:"Управление аналитики производства",isGroup:!0,children:[{id:"01-03-01",title:"Отдел производства север"},{id:"01-03-02",title:"Отдел производства юг"},{id:"01-03-03",title:"Отдел производства запад"}]}]},{id:"02",title:"Департамент инженерных работ",isGroup:!0,children:[{id:"02-01",title:"Управление строительства",isGroup:!0,children:[{id:"02-01-01",title:"Отдел строительства север"},{id:"02-01-02",title:"Отдел строительства юг"},{id:"02-01-03",title:"Отдел строительства запад"}]},{id:"02-02",title:"Управление демонтажа",isGroup:!0,children:[{id:"02-02-01",title:"Отдел демонтажа север"},{id:"02-02-02",title:"Отдел демонтажа юг"},{id:"02-02-03",title:"Отдел демонтажа запад"}]},{id:"02-03",title:"Управление реконструкции",isGroup:!0,children:[{id:"02-03-01",title:"Отдел реконструкции север"},{id:"02-03-02",title:"Отдел реконструкции юг"},{id:"02-03-03",title:"Отдел реконструкции запад"}]}]},{id:"03",title:"Департамент проектных работ",isGroup:!0,children:[{id:"03-01",title:"Управление проектирования",isGroup:!0,children:[{id:"03-01-01",title:"Отдел проектирования север"},{id:"03-01-02",title:"Отдел проектирования юг"},{id:"03-01-03",title:"Отдел проектирования запад"}]},{id:"03-02",title:"Управление согласования",isGroup:!0,children:[{id:"03-02-01",title:"Отдел согласования север"},{id:"03-02-02",title:"Отдел согласования юг"},{id:"03-02-03",title:"Отдел согласования запад"}]},{id:"03-03",title:"Управление анализа проектов",isGroup:!0,children:[{id:"03-03-01",title:"Отдел анализа север"},{id:"03-03-02",title:"Отдел анализа юг"},{id:"03-03-03",title:"Отдел анализа запад"}]}]}],F=e.lazy((()=>d((()=>import("./index-D0Dzp33a.js").then((e=>e.dw))),__vite__mapDeps([0,1,2])).then((e=>({default:e.Prism}))))),S=i=>t.jsxs(a,{children:[t.jsx(h,{}),t.jsx(o,{}),t.jsx("div",{children:t.jsx(u,{items:[{key:1,label:"Show source",children:t.jsx(e.Suspense,{fallback:t.jsx("div",{children:"Loading source..."}),children:t.jsx(F,{language:"tsx",style:i.darkMode?m:c,showLineNumbers:!0,children:"\nimport React, {useState} from 'react';\nimport {IDFormModalProps} from @krinopotam/ui-kit/dFormModal';\nimport {IInputFieldProps, InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField';\nimport {ITreeSelectFieldProps, TreeSelectField} from @krinopotam/ui-kit/dForm/fields/treeSelect/treeSelectField';\nimport {ITreeSelectNode} from @krinopotam/ui-kit/treeSelect';\nimport {IExtTreeApi, IExtTreeProps, Tree} from @krinopotam/ui-kit/tree';\nimport {Space, Switch} from 'antd';\nimport {FolderOutlined} from '@ant-design/icons';\nimport {AnyType} from '@krinopotam/service-types';\nexport const Example = (): React.JSX.Element => {\n    const treeProps = useTreeProps();\n    const [readOnly, setReadOnly] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    const [multiple, setMultiple] = useState(false);\n    return (\n        <>\n            <Space style={{paddingBottom: 10}}>\n                <div>\n                    Multi select <Switch onClick={e => setMultiple(e)} />\n                </div>\n                <div>\n                    Read only <Switch onClick={e => setReadOnly(e)} />\n                </div>\n                <div>\n                    Disabled <Switch onClick={e => setDisabled(e)} />\n                </div>\n            </Space>\n            <div style={{maxWidth: 500, maxHeight: 500, height: '100%', overflow: 'auto'}}>\n                <Tree {...treeProps} multiple={multiple} readOnly={readOnly} disabled={disabled} />\n            </div>\n        </>\n    );\n};\nconst departmentsApi = {} as IExtTreeApi;\nconst useTreeProps = () => {\n    const editFormProps = useGetEditFormProps(false, departmentsApi);\n    const editGroupFormProps = useGetEditFormProps(true, departmentsApi);\n    return {\n        apiRef: departmentsApi,\n        dataSet: dataSet,\n        defaultExpandAll: true,\n        confirmDelete: true,\n        confirmMove: true,\n        selectNewNode: true,\n        sortOnChange: true,\n        buttonsIconsOnly: true,\n        groupsMode: true,\n        titleRender: groupNodeRender,\n        editFormProps: editFormProps,\n        editGroupFormProps: editGroupFormProps,\n        onDelete: () => {},\n    } satisfies IExtTreeProps;\n};\nexport const groupNodeRender = (node: Record<string, AnyType>) => {\n    if (node.isGroup)\n        return (\n            <>\n                <FolderOutlined /> {node.title}\n            </>\n        );\n    return node.title;\n};\nconst useGetEditFormProps = (isGroup: boolean, treeApi: IExtTreeApi): IDFormModalProps => {\n    const name = isGroup ? 'Group' : 'Department';\n    return {\n        confirmChanges: true,\n        fieldsProps: {\n            title: {\n                component: InputField,\n                label: name,\n                rules: [{type: 'string', rule: 'not-empty', message: name + ' is required'}],\n                autoFocus: true,\n            } satisfies IInputFieldProps,\n            parent: {\n                component: TreeSelectField,\n                label: 'Parent Group',\n                placeholder: 'Choose parent group',\n                groupsMode: true,\n                titleRender: groupNodeRender,\n                selectedRender: groupNodeRender,\n            } as ITreeSelectFieldProps,\n        },\n        onFormInit: formApi => {\n            const model = formApi.model;\n            const field = model.getField('parent');\n            const formMode = model.getFormMode();\n            const id = model.getFormDataSet()['id'];\n            /** modify dataset for update to avoid the possibility of a parent node choosing itself or its own child node */\n            const dataSet = treeApi.getGroupsOnly(formMode !== 'update' ? undefined : id);\n            field.updateProps({dataSet: dataSet});\n        },\n        onSubmit: values => {\n            return {data: {...values, isGroup: isGroup}};\n        },\n    };\n};\nconst dataSet: ITreeSelectNode[] = [\n    {\n        id: '01',\n        title: 'Департамент аналитики данных',\n        isGroup: true,\n        children: [\n            {\n                id: '01-01',\n                title: 'Управление аналитики продаж',\n                isGroup: true,\n                children: [\n                    {id: '01-01-01', title: 'Отдел продаж север'},\n                    {id: '01-01-02', title: 'Отдел продаж юг'},\n                    {id: '01-01-03', title: 'Отдел продаж запад'},\n                ],\n            },\n            {\n                id: '01-02',\n                title: 'Управление аналитики закупок',\n                isGroup: true,\n                children: [\n                    {id: '01-02-01', title: 'Отдел закупок север'},\n                    {id: '01-02-02', title: 'Отдел закупок юг'},\n                    {id: '01-02-03', title: 'Отдел закупок запад'},\n                ],\n            },\n            {\n                id: '01-03',\n                title: 'Управление аналитики производства',\n                isGroup: true,\n                children: [\n                    {id: '01-03-01', title: 'Отдел производства север'},\n                    {id: '01-03-02', title: 'Отдел производства юг'},\n                    {id: '01-03-03', title: 'Отдел производства запад'},\n                ],\n            },\n        ],\n    },\n    {\n        id: '02',\n        title: 'Департамент инженерных работ',\n        isGroup: true,\n        children: [\n            {\n                id: '02-01',\n                title: 'Управление строительства',\n                isGroup: true,\n                children: [\n                    {id: '02-01-01', title: 'Отдел строительства север'},\n                    {id: '02-01-02', title: 'Отдел строительства юг'},\n                    {id: '02-01-03', title: 'Отдел строительства запад'},\n                ],\n            },\n            {\n                id: '02-02',\n                title: 'Управление демонтажа',\n                isGroup: true,\n                children: [\n                    {id: '02-02-01', title: 'Отдел демонтажа север'},\n                    {id: '02-02-02', title: 'Отдел демонтажа юг'},\n                    {id: '02-02-03', title: 'Отдел демонтажа запад'},\n                ],\n            },\n            {\n                id: '02-03',\n                title: 'Управление реконструкции',\n                isGroup: true,\n                children: [\n                    {id: '02-03-01', title: 'Отдел реконструкции север'},\n                    {id: '02-03-02', title: 'Отдел реконструкции юг'},\n                    {id: '02-03-03', title: 'Отдел реконструкции запад'},\n                ],\n            },\n        ],\n    },\n    {\n        id: '03',\n        title: 'Департамент проектных работ',\n        isGroup: true,\n        children: [\n            {\n                id: '03-01',\n                title: 'Управление проектирования',\n                isGroup: true,\n                children: [\n                    {id: '03-01-01', title: 'Отдел проектирования север'},\n                    {id: '03-01-02', title: 'Отдел проектирования юг'},\n                    {id: '03-01-03', title: 'Отдел проектирования запад'},\n                ],\n            },\n            {\n                id: '03-02',\n                title: 'Управление согласования',\n                isGroup: true,\n                children: [\n                    {id: '03-02-01', title: 'Отдел согласования север'},\n                    {id: '03-02-02', title: 'Отдел согласования юг'},\n                    {id: '03-02-03', title: 'Отдел согласования запад'},\n                ],\n            },\n            {\n                id: '03-03',\n                title: 'Управление анализа проектов',\n                isGroup: true,\n                children: [\n                    {id: '03-03-01', title: 'Отдел анализа север'},\n                    {id: '03-03-02', title: 'Отдел анализа юг'},\n                    {id: '03-03-03', title: 'Отдел анализа запад'},\n                ],\n            },\n        ],\n    },\n];\n"})})}]})})]});export{S as Page83b66bc23a9e4792826d962bef50dfd8,S as default};
