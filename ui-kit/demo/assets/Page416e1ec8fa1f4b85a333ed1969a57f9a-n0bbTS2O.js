const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CYtcEg42.js","assets/default-highlight-DmLVT0MV.js","assets/index-7nZFAa1C.js"])))=>i.map(i=>d[i]);
import{j as e,S as n,a as o,D as i,r as t,_ as l}from"./index-7nZFAa1C.js";import{D as d}from"./isArray-Dr27fI6O.js";import{I as a}from"./inputField-iqxGYRDe.js";import{b as s}from"./buttonsRow-CbJpBlrJ.js";import{P as r,C as p}from"./pageLayout-CvD8cTj-.js";import{d as c,c as m}from"./darcula-BqMdvqtY.js";import"./messageBox-DbI9dXeH.js";import"./index-B4aTtR1L.js";import"./baseField-DesneoB5.js";import"./index-C9mENHWZ.js";import"./SearchOutlined-C8H1r-H8.js";const h={},u={apiRef:h,formId:"Test form",confirmChanges:!0,fieldsProps:{field1:{component:a,label:"Поле 1"},field2:{component:a,label:"Поле 2",autoFocus:!0}},buttons:{ok:{position:"right"}}};let f=0;const C=()=>{f++,h.updateProps({fieldsProps:{field1:{component:a,label:`Поле 1 (${f})`},field2:{component:a,label:`Поле 2 (${f})`,autoFocus:!0}}})},k=()=>{f++,h.updateProps({fieldsProps:{field1:{component:a,label:`Поле 1 (${f})`},field3:{component:a,label:`Поле 3 (${f})`,autoFocus:!0}}})};let b=!1;const j=()=>{b=!b,h.model.getField("field1").setDisabled(b)};let x=!0;const F=()=>{x=!x,h.model.getField("field1").setHidden(!x)};let g=!1;const y=()=>{g=!g,h.updateProps({layout:g?"horizontal":"vertical"})},P=()=>e.jsxs(e.Fragment,{children:[e.jsx("h1",{children:"Example of changing form props via Api"}),e.jsx("p",{children:" If the field identifier and the type of its component do not change, then the form retains the set field values and their states (disabled, readOnly, visible)"}),e.jsxs("div",{style:{maxWidth:500},children:[e.jsxs(n,{children:[e.jsx(s,{type:"primary",onClick:C,children:"Набор полей 1"}),e.jsx(s,{type:"primary",onClick:k,children:"Набор полей 2"}),e.jsx(o,{checkedChildren:"Enable",unCheckedChildren:"Disable",defaultChecked:!0,onChange:j}),e.jsx(o,{checkedChildren:"Show",unCheckedChildren:"Hide",defaultChecked:!0,onChange:F}),e.jsx(o,{checkedChildren:"Horizontal",unCheckedChildren:"Vertical",onChange:y})]}),e.jsx(d,{...u,formStyle:{marginTop:15}})]})]}),I=t.lazy((()=>l((()=>import("./index-CYtcEg42.js").then((e=>e.dw))),__vite__mapDeps([0,1,2])).then((e=>({default:e.Prism}))))),S=n=>e.jsxs(r,{children:[e.jsx(P,{}),e.jsx(i,{}),e.jsx("div",{children:e.jsx(p,{items:[{key:1,label:"Show source",children:e.jsx(t.Suspense,{fallback:e.jsx("div",{children:"Loading source..."}),children:e.jsx(I,{language:"tsx",style:n.darkMode?c:m,showLineNumbers:!0,children:"\nimport React from 'react';\nimport {DForm, IDFormApi, IDFormProps} from @krinopotam/ui-kit/dForm';\nimport {InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField\";\nimport {Button} from @krinopotam/ui-kit/button\";\nimport {Space, Switch} from \"antd\";\nconst api = {} as IDFormApi\nconst formProps: IDFormProps = {\n    apiRef: api,\n    formId: 'Test form',\n    confirmChanges: true,\n    fieldsProps: {\n        field1: {component: InputField, label: 'Поле 1'},\n        field2: {component: InputField, label: 'Поле 2', autoFocus: true},\n    },\n    buttons: {ok: {position: 'right'}},\n};\nlet num = 0\nconst onClick1 = () => {\n    num++\n    api.updateProps({\n        fieldsProps: {\n            field1: {component: InputField, label: `Поле 1 (${num})`},\n            field2: {component: InputField, label: `Поле 2 (${num})`, autoFocus: true},\n        }\n    })\n}\nconst onClick2 = () => {\n    num++\n    api.updateProps({\n        fieldsProps: {\n            field1: {component: InputField, label: `Поле 1 (${num})`},\n            field3: {component: InputField, label: `Поле 3 (${num})`, autoFocus: true},\n        }\n    })\n}\nlet disabled = false\nconst disableHandle = () => {\n    disabled=!disabled\n    api.model.getField('field1').setDisabled(disabled)\n}\nlet show = true\nconst hideHandle = () => {\n    show=!show\n    api.model.getField('field1').setHidden(!show)\n}\nlet layout = false\nconst changeLayout = () => {\n    layout = !layout\n    api.updateProps({\n        layout: !layout ? 'vertical' : 'horizontal',\n    })\n}\nexport const Example = (): React.JSX.Element => {\n    return (\n        <>\n            <div style={{maxWidth: 500}}>\n                <Space>\n                    <Button type=\"primary\" onClick={onClick1}>Набор полей 1</Button>\n                    <Button type=\"primary\" onClick={onClick2}>Набор полей 2</Button>\n                    <Switch checkedChildren={'Enable'} unCheckedChildren={'Disable'} defaultChecked onChange={disableHandle}/>\n                    <Switch checkedChildren={'Show'} unCheckedChildren={'Hide'} defaultChecked onChange={hideHandle}/>\n                    <Switch checkedChildren={'Horizontal'} unCheckedChildren={'Vertical'} onChange={changeLayout}/>\n                </Space>\n                <DForm {...formProps} formStyle={{marginTop: 15}}/>\n            </div>\n        </>\n    );\n};\n"})})}]})})]});export{S as Page416e1ec8fa1f4b85a333ed1969a57f9a,S as default};
