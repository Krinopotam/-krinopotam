const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-DfeqwvF1.js","assets/default-highlight-DCdxgBnZ.js","assets/index-BB72a6eU.js"])))=>i.map(i=>d[i]);
import{r as o,j as n,D as r,_ as s}from"./index-BB72a6eU.js";import{b as e}from"./buttonsRow-BoYDsAWL.js";import{D as i}from"./dFormModal-CkEzjKXP.js";import{I as t}from"./inputField-B1hfPwz1.js";import{P as m}from"./passwordField-CqBLasO5.js";import{F as a}from"./buttonsProps-DxD0PCxi.js";import{P as d,C as l}from"./pageLayout-DKLvBL1I.js";import{d as p,c}from"./darcula-BqMdvqtY.js";import"./isArray-BKTI4CpV.js";import"./messageBox-6Y5BIsMu.js";import"./index-Dz5OhjVD.js";import"./modal-B4QAG8Oo.js";import"./baseField-BdnhLPgH.js";import"./index-ByzpD6LE.js";import"./SearchOutlined-xF1ruEFb.js";const u={},f={formId:"Test form",apiRef:u,confirmChanges:!0,fieldsProps:{field1:{component:t,label:"login",tooltip:"Login input"},field2:{component:m,label:"password",tooltip:"Password input"}},onSubmit:()=>new Promise(((o,n)=>{setTimeout((()=>{Math.random()<.5?n({message:"Ошибка сохранения",code:400}):o({data:{login:"new login",password:"new password"}})}),3e3)})),buttons:a(u)},j=()=>{const r=o.useCallback((()=>{u.open("create")}),[]);return n.jsxs(n.Fragment,{children:[n.jsx("h1",{children:"Пример сохранения данных модальной формы"}),n.jsx("p",{children:"Для обеспечения сохранения необходимо в калбэк onSubmit передать функцию, возвращающую Promise, который при успешном ответе сервера (resolve) возвращает объект вида:"}),n.jsx("code",{children:'data:{имя_поля1: "значение", имя_поля2: "значение 2"...}'}),n.jsx("p",{children:"а при ошибке (reject)"}),n.jsx("code",{children:"error:{message: string, code: number}"}),n.jsx("p",{children:"Для примера, вероятность сбоя при сохранении 50%"}),n.jsx("p",{}),n.jsxs("div",{style:{maxWidth:500},children:[n.jsx(e,{onClick:r,children:"Open form"}),n.jsx(i,{...f})]})]})},h=o.lazy((()=>s((()=>import("./index-DfeqwvF1.js").then((o=>o.dw))),__vite__mapDeps([0,1,2])).then((o=>({default:o.Prism}))))),x=s=>n.jsxs(d,{children:[n.jsx(j,{}),n.jsx(r,{}),n.jsx("div",{children:n.jsx(l,{items:[{key:1,label:"Show source",children:n.jsx(o.Suspense,{fallback:n.jsx("div",{children:"Loading source..."}),children:n.jsx(h,{language:"tsx",style:s.darkMode?p:c,showLineNumbers:!0,children:"\nimport React, {useCallback} from 'react';\nimport {Button} from @krinopotam/ui-kit/button';\nimport {IDFormModalApi, DFormModal, IDFormModalProps} from @krinopotam/ui-kit/dFormModal';\nimport {InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField\";\nimport {PasswordField} from @krinopotam/ui-kit/dForm/fields/password/passwordField\";\nimport {FormLayoutSwitch} from \"../../common/buttonsProps\";\nconst formApi = {} as IDFormModalApi;\nconst formProps: IDFormModalProps = {\n    formId: 'Test form',\n    apiRef: formApi,\n    confirmChanges: true,\n    fieldsProps: {\n        field1: {component: InputField, label: 'login', tooltip: 'Login input'},\n        field2: {component: PasswordField, label: 'password', tooltip: 'Password input'},\n    },\n    onSubmit: () => {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                if (Math.random() < 0.5) reject({message: 'Ошибка сохранения', code: 400});\n                else resolve({data: {login: 'new login', password: 'new password'}});\n            }, 3000);\n        });\n    },\n    buttons: FormLayoutSwitch(formApi),\n}\nexport const ModalFormSubmitting = (): React.JSX.Element => {\n    const onClick = useCallback(() => {\n        formApi.open('create');\n    }, []);\n    return (\n        <>\n            <div style={{maxWidth: 500}}>\n                <Button onClick={onClick}>Open form</Button>\n                <DFormModal {...formProps} />\n            </div>\n        </>\n    );\n};\n"})})}]})})]});export{x as Page9f7faa56f92c42a5ac8428b2f211ad5c,x as default};
