const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-CHI_tDKE.js","assets/default-highlight-C81QnIPv.js","assets/index-DkmdmL2B.js"])))=>i.map(i=>d[i]);
import{j as i,D as e,r as o,_ as r}from"./index-DkmdmL2B.js";import{E as t}from"./complex-CkIx1qZl.js";import{P as n,C as s}from"./pageLayout-DlGTfEJ-.js";import{d as l,c as a}from"./darcula-BqMdvqtY.js";import"./isArray-BIOd_gKK.js";import"./buttonsRow-CSdI3fHP.js";import"./messageBox-Dy5NEkXt.js";import"./index-B4RTrYHi.js";import"./inputField-B6uq5YdT.js";import"./baseField-Coy-tf-f.js";import"./index-CeuwU9EJ.js";import"./SearchOutlined-pzJdYtgh.js";import"./inlineGroupField-DlrPZgfE.js";import"./tabsField-Vc3o9KMM.js";import"./index-DfaStnGh.js";import"./PlusOutlined-CP3hQ3PW.js";import"./tabulatorGridField-ConET8W8.js";import"./dFormModal-B2yaYAu-.js";import"./modal-ClPxN7Lp.js";import"./tabulatorGrid-Dpqm2Ixr.js";import"./defaultButtonsProps-Cg8BkIIc.js";import"./index-BShKf_Fr.js";import"./tabulatorData-Bu50qs56.js";import"./dateTimeField-CcQWH4Qc.js";import"./useIcons-Cn3GQ9mG.js";import"./switchField-C_E342Nr.js";import"./textAreaField-CpVlb77m.js";import"./dividerField-BMOuJk7o.js";import"./index-C7yhLzcW.js";import"./selectField-BFc88_r_.js";import"./useShowArrow-CrpQZOLu.js";import"./numberField-FPtlada2.js";const d=o.lazy((()=>r((()=>import("./index-CHI_tDKE.js").then((i=>i.dw))),__vite__mapDeps([0,1,2])).then((i=>({default:i.Prism}))))),m=r=>i.jsxs(n,{children:[i.jsx(t,{}),i.jsx(e,{}),i.jsx("div",{children:i.jsx(s,{items:[{key:1,label:"Show source",children:i.jsx(o.Suspense,{fallback:i.jsx("div",{children:"Loading source..."}),children:i.jsx(d,{language:"tsx",style:r.darkMode?l:a,showLineNumbers:!0,children:"\nimport React from 'react';\nimport {DForm, IDFormFieldsProps, IDFormProps} from @krinopotam/ui-kit/dForm';\nimport {IInputFieldProps, InputField} from @krinopotam/ui-kit/dForm/fields/input/inputField';\nimport {Space, Switch} from 'antd';\nimport {IInlineGroupFieldProps, InlineGroupField} from @krinopotam/ui-kit/dForm/fields/inlineGroup';\nimport {ITabsFieldProps, TabsField} from @krinopotam/ui-kit/dForm/fields/tabs';\nimport {ITabulatorGridFieldProps, TabulatorGridField} from @krinopotam/ui-kit/dForm/fields/tabulatorGrid';\nimport {TabulatorBaseColumns, TabulatorBaseColumnsDef, TabulatorPlainData} from '../../data/tabulatorData';\nimport {DateTimeField, IDateTimeFieldProps} from @krinopotam/ui-kit/dForm/fields/dateTime';\nimport {ISwitchFieldProps, SwitchField} from @krinopotam/ui-kit/dForm/fields/switch';\nimport {ITextAreaFieldProps, TextAreaField} from @krinopotam/ui-kit/dForm/fields/textArea';\nimport {IQuillEditorFieldProps, QuillEditorField} from @krinopotam/ui-kit/dForm/fields/quillEditor';\nimport {ISelectFieldProps, SelectField} from @krinopotam/ui-kit/dForm/fields/select';\nimport {DividerField, IDividerFieldProps} from @krinopotam/ui-kit/dForm/fields/divider';\nimport {INumberFieldProps, NumberField} from @krinopotam/ui-kit/dForm/fields/number\";\nimport {IUploadDraggerFieldProps, UploadDraggerField} from @krinopotam/ui-kit/dForm/fields/uploadDragger\";\nexport const Example = (): React.JSX.Element => {\n    const [horizontal, setHorizontal] = React.useState(false);\n    const formProps = useFormProps(horizontal);\n    return (\n        <div>\n            <div style={{maxWidth: 1000, height: 500, border: '1px solid gray', padding: 5}}>\n                <Space style={{marginBottom: 30}}>\n                    <Switch checkedChildren={'Horizontal'} unCheckedChildren={'Vertical'} onChange={() => setHorizontal(cur => !cur)} />\n                </Space>\n                <DForm {...formProps} />\n            </div>\n        </div>\n    );\n};\nexport const useFormProps = (horizontal: boolean, forModal?: boolean) => {\n    const configTab = useConfigTab();\n    const gridTab = useGridTab(forModal);\n    return {\n        layout: horizontal ? 'horizontal' : 'vertical',\n        fieldsProps: {\n            tabs: {\n                component: TabsField,\n                tabs: {\n                    ['Config']: configTab,\n                    ['Grid']: gridTab,\n                },\n                autoHeightResize: true,\n                activeTab:'Grid'\n            } satisfies ITabsFieldProps,\n        },\n        buttons: {ok: {position: 'right'}},\n    } satisfies IDFormProps;\n};\nconst useConfigTab = () => {\n    return {\n        inline1: {\n            component: InlineGroupField,\n            fieldsProps: {\n                field1: {component: DateTimeField, label: 'Date', placeholder: 'Date', width: 150} satisfies IDateTimeFieldProps,\n                field2: {component: InputField, label: 'Operation', placeholder: 'Operation name'} satisfies IInputFieldProps,\n                field3: {component: NumberField, label: 'Code', placeholder: 'Code'} satisfies INumberFieldProps,\n                field4: {component: SelectField, label: 'Type', placeholder: 'Type', width:100} satisfies ISelectFieldProps,\n                field5: {component: SwitchField, label: 'Active', dependsOn: ['field2']} satisfies ISwitchFieldProps,\n            },\n        } satisfies IInlineGroupFieldProps,\n        field6: {component: TextAreaField, label: 'Notes', autoSize: true} satisfies ITextAreaFieldProps,\n        divider: {component: DividerField, label: 'Optional part', autoSize: true, dependsOn: ['field5']} satisfies IDividerFieldProps,\n        field7: {component: QuillEditorField, label: 'Comments', dependsOn: ['field5']} satisfies IQuillEditorFieldProps,\n    } satisfies IDFormFieldsProps;\n};\nconst useGridTab = (forModal?: boolean) => {\n    return {\n        Grid1: {\n            component: TabulatorGridField,\n            label: 'Users',\n            columnDefaults: TabulatorBaseColumnsDef,\n            columns: TabulatorBaseColumns,\n            defaultValue: TabulatorPlainData,\n            layout: 'fitColumns',\n            height: !forModal ? 300 : undefined,\n            autoHeightResize: !!forModal,\n        } satisfies ITabulatorGridFieldProps,\n    } satisfies IDFormFieldsProps;\n};\n"})})}]})})]});export{m as Page0239e8449759480abe4145ea6e8ea4b1,m as default};
