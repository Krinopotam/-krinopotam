const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BYbtVaI6.js","assets/default-highlight-eiogfuM3.js","assets/index-2kNJvRok.js"])))=>i.map(i=>d[i]);
import{r as o,j as r,D as s,_ as n}from"./index-2kNJvRok.js";import{b as e}from"./buttonsRow-CEp-tPII.js";import{D as i}from"./dFormModal-rOwhCOZx.js";import{F as t}from"./buttonsProps-wr2fR2xj.js";import{u as m}from"./inlineFields-9gnx6Jt3.js";import{P as l,C as a}from"./pageLayout-CLJSRyFt.js";import{d as p,c as d}from"./darcula-BqMdvqtY.js";import"./isArray-CSftiXTM.js";import"./messageBox-CT7sYhNV.js";import"./index-DMIBgRp3.js";import"./modal-CogDClGD.js";import"./inputField-CWtDZw_-.js";import"./baseField-qJ3OPc7F.js";import"./index-Di8KV0Ju.js";import"./SearchOutlined-BGxCkjyd.js";import"./inlineGroupField-BZc1dzjU.js";import"./linkField-B6D7Fydm.js";import"./defaultButtonsProps-DbPTLgBj.js";import"./PlusOutlined-CLLwS-jZ.js";import"./passwordField-KGh2A6jf.js";import"./numberField-ViTkOjas.js";import"./treeSelectField-JBt7lAaW.js";import"./useApiGetGroupsOnly-PC0AYnqb.js";import"./index-DovGOY2m.js";import"./useShowArrow-Du0fXnTV.js";import"./useIcons-CKeG0o9V.js";import"./selectField-apa1sDfb.js";const c=()=>{const s=o.useCallback((()=>{u.open("create")}),[]),n=j();return r.jsxs(r.Fragment,{children:[r.jsx("h1",{children:"Form example with inline fields"}),r.jsxs("div",{style:{maxWidth:500},children:[r.jsx(e,{onClick:s,children:"Open form"}),r.jsx(i,{...n})]})]})},u={},j=()=>({...m(!1),apiRef:u,confirmChanges:!0,arrowsButtonsSelection:!0,buttons:t(u),onCancel:()=>{console.log("cancel")}}),f=o.lazy((()=>n((()=>import("./index-BYbtVaI6.js").then((o=>o.dw))),__vite__mapDeps([0,1,2])).then((o=>({default:o.Prism}))))),F=n=>r.jsxs(l,{children:[r.jsx(c,{}),r.jsx(s,{}),r.jsx("div",{children:r.jsx(a,{items:[{key:1,label:"Show source",children:r.jsx(o.Suspense,{fallback:r.jsx("div",{children:"Loading source..."}),children:r.jsx(f,{language:"tsx",style:n.darkMode?p:d,showLineNumbers:!0,children:"\nimport {Button} from @krinopotam/ui-kit/button';\nimport {DFormModal, IDFormModalApi, IDFormModalProps} from @krinopotam/ui-kit/dFormModal';\nimport React, {useCallback} from 'react';\nimport {FormLayoutSwitch} from '../../common/buttonsProps';\nimport {useFormProps} from '../dForm/inlineFields';\nexport const Example = (): React.JSX.Element => {\n    const onClick = useCallback(() => {\n        formApi.open('create');\n    }, []);\n    const formProps = useModalFormProps();\n    return (\n        <>\n            <div style={{maxWidth: 500}}>\n                <Button onClick={onClick}>Open form</Button>\n                <DFormModal {...formProps} />\n            </div>\n        </>\n    );\n};\nconst formApi = {} as IDFormModalApi;\nconst useModalFormProps = () => {\n    const formProps = useFormProps(false)\n    return {\n        ...formProps,\n        apiRef: formApi,\n        confirmChanges: true,\n        arrowsButtonsSelection: true,\n        buttons: FormLayoutSwitch(formApi),\n        onCancel: () => {\n            console.log('cancel');\n        },\n    } satisfies IDFormModalProps;\n};\n"})})}]})})]});export{F as Page47399b66def343538c8c7778c43f95ec,F as default};
