import React from 'react';
import { IDFormComponentProps, IDFormFieldProps } from './baseComponent';
import { IGridCallbacks, IReactTabulatorProps } from '@krinopotam/ui-tabulator-grid';
import { IFormButton, IFormButtons } from '@krinopotam/ui-buttons-row';
import { IDFormModalProps } from '@krinopotam/ui-dynamic-form-modal';
export interface IDFormFieldTabulatorGridProps extends Omit<IDFormFieldProps, 'width'> {
    id?: string;
    gridMode?: 'local' | 'remote';
    dataTree?: boolean;
    dataTreeChildField?: string;
    dataTreeParentField?: string;
    dataTreeChildIndent?: number;
    columns: IReactTabulatorProps['columns'];
    className?: string;
    buttons?: Record<'view' | 'create' | 'clone' | 'update' | 'delete', IFormButton | null> | IFormButtons;
    editFormProps?: IDFormModalProps;
    noHover?: boolean;
    callbacks?: IDFormFieldProps['callbacks'] & IGridCallbacks;
    rowDeleteMessage?: React.ReactNode;
    confirmDelete?: boolean;
    placeholder?: string;
    layout?: IReactTabulatorProps['layout'];
    layoutColumnsOnNewData?: IReactTabulatorProps['layoutColumnsOnNewData'];
    width?: IReactTabulatorProps['width'];
    maxWidth?: IReactTabulatorProps['maxWidth'];
    minWidth?: IReactTabulatorProps['minWidth'];
    height?: IReactTabulatorProps['height'];
    minHeight?: IReactTabulatorProps['minHeight'];
    maxHeight?: IReactTabulatorProps['maxHeight'];
    multiSelect?: IReactTabulatorProps['multiSelect'];
    resizableColumnFit?: IReactTabulatorProps['resizableColumnFit'];
    rowHeight?: IReactTabulatorProps['rowHeight'];
    resizableRows?: IReactTabulatorProps['resizableRows'];
    movableColumns?: IReactTabulatorProps['movableColumns'];
    movableRows?: IReactTabulatorProps['movableRows'];
    groupBy?: IReactTabulatorProps['groupBy'];
    persistence?: IReactTabulatorProps['persistence'];
    persistenceID?: IReactTabulatorProps['persistenceID'];
    persistentLayout?: IReactTabulatorProps['persistentLayout'];
    persistentFilter?: IReactTabulatorProps['persistentFilter'];
    persistentSort?: IReactTabulatorProps['persistentSort'];
    frozenRows?: IReactTabulatorProps['frozenRows'];
    frozenRowsField?: IReactTabulatorProps['frozenRowsField'];
    initialFilter?: IReactTabulatorProps['initialFilter'];
    initialSort?: IReactTabulatorProps['initialSort'];
    initialHeaderFilter?: IReactTabulatorProps['initialHeaderFilter'];
    headerVisible?: IReactTabulatorProps['headerVisible'];
    columnDefaults?: IReactTabulatorProps['columnDefaults'];
}
interface IDFormTabulatorGridComponentProps extends IDFormComponentProps {
    fieldProps: IDFormFieldTabulatorGridProps;
}
export declare const TabulatorGridComponent: ({ formApi, fieldName, fieldProps }: IDFormTabulatorGridComponentProps) => React.JSX.Element;
export {};
