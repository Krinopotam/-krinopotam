import { IDFormProps } from '@krinopotam/ui-dynamic-form';
import { IDFormFieldProps } from '@krinopotam/ui-dynamic-form/components/baseComponent';
import { IRuleType } from '@krinopotam/ui-dynamic-form/validators/baseValidator';
import { DFormConfig } from '@krinopotam/ui-dynamic-form/configBuilder/dFormConfig';
import { BaseComponentConfig } from '@krinopotam/ui-dynamic-form/configBuilder/baseComponentConfig';
import { IDModalProps, IDFormModalProps } from '../dFormModal';
export declare class DFormModalConfig<T> extends DFormConfig<T> {
    apiRef(value: IDFormProps['apiRef']): this;
    buttons(value: IDFormProps['buttons']): this;
    callbacks(value: IDModalProps['callbacks']): this;
    className(value: IDFormProps['className']): this;
    containerClassName(value: IDFormProps['containerClassName']): this;
    contentIndent(value: IDFormProps['contentIndent']): this;
    dataSet(value: IDFormProps['dataSet']): this;
    parentDataSet(value: IDFormProps['parentDataSet']): this;
    fieldsProps(value: Record<keyof T, IDFormFieldProps>): this;
    formType(value: IDFormProps['formType']): this;
    labelCol(value: IDFormProps['labelCol']): this;
    layout(value: IDFormProps['layout']): this;
    formMode(value: IDFormProps['formMode']): this;
    readOnly(value: IDFormProps['readOnly']): this;
    noAutoHideDependedFields(value: IDFormProps['noAutoHideDependedFields']): this;
    tabsProps(value: IDFormProps['tabsProps']): this;
    unfilledForm(value: IDFormProps['unfilledForm']): this;
    validationRules(value: Record<keyof T, IRuleType[]>): this;
    wrapperCol(value: IDFormProps['wrapperCol']): this;
    confirmChanges(value: IDFormProps['confirmChanges']): this;
    submitConfirmMessage(value: IDFormProps['submitConfirmMessage']): this;
    closeFormConfirmMessage(value: IDModalProps['closeFormConfirmMessage']): this;
    title(value: IDModalProps['title']): this;
    width(value: IDModalProps['width']): this;
    minWidth(value: IDModalProps['minWidth']): this;
    maxWidth(value: IDModalProps['maxWidth']): this;
    bodyHeight(value: IDModalProps['bodyHeight']): this;
    bodyMinHeight(value: IDModalProps['bodyMinHeight']): this;
    bodyMaxHeight(value: IDModalProps['bodyMaxHeight']): this;
    bodyStyle(value: IDModalProps['bodyStyle']): this;
    notScrollable(value: IDModalProps['notScrollable']): this;
    resizable(value: IDModalProps['resizable']): this;
    isOpened(value: IDModalProps['isOpened']): this;
    getConfig(): IDFormModalProps;
    addTab(tabName: string, ...args: BaseComponentConfig<T>[]): this;
    addFields(...args: BaseComponentConfig<T>[]): this;
}
